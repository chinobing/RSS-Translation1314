<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：最新</title>
    <link>https://news.ycombinator.com/newest</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Mon, 20 Oct 2025 12:41:08 GMT</lastBuildDate>
    <item>
      <title>Httpx 与 Aiohttp</title>
      <link>https://miguel-mendez-ai.com/2024/10/20/aiohttp-vs-httpx</link>
      <description><![CDATA[文章网址：https://miguel-mendez-ai.com/2024/10/20/aiohttp-vs-httpx
评论网址：https://news.ycombinator.com/item?id=45643210
积分：1
# 条评论：0]]></description>
      <guid>https://miguel-mendez-ai.com/2024/10/20/aiohttp-vs-httpx</guid>
      <pubDate>Mon, 20 Oct 2025 12:37:53 GMT</pubDate>
    </item>
    <item>
      <title>布洛芬：一种日常药物可以预防癌症</title>
      <link>https://medicalxpress.com/news/2025-10-ibuprofen-everyday-drug-cancer.html</link>
      <description><![CDATA[文章网址：https://medicalxpress.com/news/2025-10-ibuprofen-everyday-drug-cancer.html
评论网址：https://news.ycombinator.com/item?id=45643201
积分：1
# 条评论：0]]></description>
      <guid>https://medicalxpress.com/news/2025-10-ibuprofen-everyday-drug-cancer.html</guid>
      <pubDate>Mon, 20 Oct 2025 12:36:53 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：VebGen – 具有零代币 AST 智能的自主 AI 代理</title>
      <link>https://github.com/vebgenofficial/vebgen</link>
      <description><![CDATA[嗨，HN！我是 Ramesh，一位来自印度的 20 岁开发人员。我花了 8 个月的时间构建 VebGen - Django 项目的自主 AI 开发代理。在我表弟家里建造的（家里互联网有限），没有学位，没有团队，0 美元资金。整个 500KB 代码库是使用免费层模型开发的。故事：
我想要一个能够真正理解 Django 项目而无需消耗 API 令牌的 AI 代理。 Cursor 和 Copilot 非常适合行级编码，但我想要一些可以在保持免费层限制的情况下自主构建完整功能的东西。VebGen 的用途：
可以将其视为有一名高级开发人员 + QA 工程师 24/7 为您的 Django 项目工作。您描述了您想要的内容（“建立一个带有评论的博客”），并且它：
• 规划架构（根据复杂性进行自适应）
• 编写代码（模型、视图、URL、测试）
• 安全审查（OWASP Top 10，N+1 查询）
• 自主修复错误（成功率70%）
• 永远不会丢失进度（自动保存并回滚）比较方式：
光标/副驾驶 → 辅助编码（你打字，他们帮忙） → 非常有助于提高工作效率
VebGen → 自主开发（你描述，它构建） → 不同的范围光标 → 每次分析都将代码发送到 LLM ($$$) → VebGen：本地 AST 解析（免费）
Copilot → 自动完成工具 → VebGen：完整功能实现
Devin → 500 美元/月，等候名单，已关闭 → VebGen：开源，本地运行，0 美元VebGen 的闪光点：
• 适用于免费 API（Cursor/Copilot 需要付费代币）
• 深入了解 Django（95 多种结构：模型、视图、序列化器、信号、管理、Celery、通道等）
• 自我修复（70% 错误修复率，尝试 3 种方法）
• 安全第一（内置OWASP Top 10 检查、N+1 检测）
• 状态持久性（5 个滚动备份，永不丢失进度）Cursor/Copilot 获胜的地方：
• 更好的用户体验/润色
• IDE 集成更顺畅
• 更大的生态系统关键创新 - 零代币 AST 解析：
VebGen 不是每次都将整个代码库发送到 LLM（昂贵！），而是使用 Python 的 AST 模块在本地解析 Django 代码。它可以理解 95 多个 Django 结构，无需消耗任何 API 令牌。示例：您有 50 个文件，要求“添加用户身份验证”。 VebGen 在本地解析 AST（零标记！），识别 5 个相关文件，然后仅将这些文件发送到 LLM。这使得它可以在免费版 Gemini/OpenRouter 上完美运行。技术亮点：
 双代理系统（TARS计划、CASE执行）
 多层修补（尝试3种方法后放弃）
 军工级沙箱（2700行安全代码）
 5 个滚动备份（通过 SHA-256 验证实现崩溃安全）
 319 项测试，99.7% 通过
 可与 5 个提供商的 120 多个模型配合使用专为开发人员打造：
• 桌面应用程序（Python + CustomTkinter）
• 详细的架构文档（15 个 Markdown 文件）
• 完整的测试覆盖率和示例
• 开源，麻省理工学院许可证我很想听听您的想法！特别是以下方面的反馈：
- AST 解析方法（这是正确的抽象吗？）
- 安全架构（我错过了什么吗？）
- 接下来我还应该支持哪些其他框架？ （Flask、FastAPI、React？）GitHub：https://github.com/vebgenofficial/vebgen很高兴回答有关其底层工作原理的任何技术问题！
&lt;小时/&gt;
评论网址：https://news.ycombinator.com/item?id=45643176
积分：1
# 条评论：0]]></description>
      <guid>https://github.com/vebgenofficial/vebgen</guid>
      <pubDate>Mon, 20 Oct 2025 12:34:01 GMT</pubDate>
    </item>
    <item>
      <title>Google 应用程序验证与 FuriOS</title>
      <link>https://furilabs.com/google-app-verification-vs-furios/</link>
      <description><![CDATA[文章网址：https://furilabs.com/google-app-verification-vs-furios/
评论网址：https://news.ycombinator.com/item?id=45643168
积分：2
# 条评论：0]]></description>
      <guid>https://furilabs.com/google-app-verification-vs-furios/</guid>
      <pubDate>Mon, 20 Oct 2025 12:32:23 GMT</pubDate>
    </item>
    <item>
      <title>阿里云声称将减少 82% Nvidia GPU 使用</title>
      <link>https://www.scmp.com/business/article/3329450/alibaba-cloud-claims-slash-nvidia-gpu-use-82-new-pooling-system</link>
      <description><![CDATA[文章网址： https://www.scmp.com/business/article/3329450/alibaba-cloud-claims-slash-nvidia-gpu-use-82-new-pooling-system
评论网址：https://news.ycombinator.com/item?id=45643163
积分：4
# 条评论：0]]></description>
      <guid>https://www.scmp.com/business/article/3329450/alibaba-cloud-claims-slash-nvidia-gpu-use-82-new-pooling-system</guid>
      <pubDate>Mon, 20 Oct 2025 12:31:22 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我厌倦了管理开发环境，所以我构建了 ServBay</title>
      <link>https://www.servbay.com</link>
      <description><![CDATA[嘿 HN，多年来，我的本地开发设置一直是一堆脆弱的工具，从来没有很好地协同工作。在我的 Mac 上，这是一场持续不断的战斗，Homebrew 服务在启动时启动（或未启动），由 `asdf` 或 `nvm` 管理的 PHP 和 Node 版本冲突，以及我为每个项目复制粘贴和调整的一组 `docker-compose.yml` 文件。认知负荷太高了。设置 SSL 是另一项涉及“mkcert”的苦差事。与同事分享一个快速演示意味着启动 ngrok。如果我想运行两个需要不同版本 PostgreSQL 的项目怎么办？祝你好运。我必须停止一项服务才能启动另一项服务。我怀念 MAMP/XAMPP 时代的简单性，但我需要一些可以处理现代开发人员多样化堆栈的东西 - 不仅仅是 PHP 和 MySQL，还有 Python、Go、Rust、Node.js 和各种数据库。这就是我（和我的小团队）构建 ServBay 的原因。我们试图在不牺牲功能的情况下恢复本地开发的简单性和速度。它是适用于 macOS 和 Windows 的本机应用，而不是 Docker 或 VM 的包装器。它的功能如下：一键堆栈：您可以安装和运行 Python、Node.js、Go、Java、Rust、Ruby 和 .NET 等语言的多个独立版本。不再有路径冲突或环境变量地狱。数据库，复数：这对我来说是一个巨大的数据库。您可以同时运行 MySQL、MariaDB、PostgreSQL、Redis 和 MongoDB 的多个实例。项目 A 可以使用 Postgres 14，而项目 B 使用 Postgres 16，两者同时在不同端口上运行。自动 SSL：您创建的任何主机都会立即获得有效的 SSL 证书。不再出现针对“.test”或“.localhost”域的浏览器隐私警告。内置隧道：如果您需要演示功能或测试 Webhook，可以使用一键式按钮通过安全隧道将本地站点公开到互联网。一键式本地 AI：这是我们非常兴奋的事情。我们添加了一项功能，可以通过简单的 UI 在本地轻松下载和运行 Llama 3 或 Stable Diffusion 等模型，因此您可以进行实验，而无需担心 API 密钥或成本。其他一切：它还可以处理一键备份，具有干净、非侵入性的 UI，并且设计得尽可能轻量。我知道你们很多人在想什么：“为什么不直接使用 Docker？”这是一个公平的做法 问题。我们使用 Docker 进行生产和复杂的多服务架构。但对于快速启动单一服务应用程序、测试新框架或只是一般的日常开发，“Dockerfile”、“docker-compose.yml”的开销、macOS 上缓慢的文件同步以及资源消耗通常让人感觉有点大材小用。 ServBay 适合那些只想获取代码的时刻。该项目还很年轻，我们还有很长的路线图。我整天都在这里回答任何问题，听取您（残酷诚实的）反馈，并了解您自己的开发工作流程。您可以在这里查看：https://www.servbay.com感谢您的阅读。
&lt;小时/&gt;
评论网址：https://news.ycombinator.com/item?id=45643144
积分：1
# 条评论：0]]></description>
      <guid>https://www.servbay.com</guid>
      <pubDate>Mon, 20 Oct 2025 12:29:00 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：Notely – 记事应用程序</title>
      <link>https://play.google.com/store/apps/details?id=com.codegres.notely&hl=en_US</link>
      <description><![CDATA[文章网址：https://play.google.com/store/apps/details?id=com.codegres.notely&amp;hl=en_US
评论网址：https://news.ycombinator.com/item?id=45643130
积分：1
# 条评论：0]]></description>
      <guid>https://play.google.com/store/apps/details?id=com.codegres.notely&hl=en_US</guid>
      <pubDate>Mon, 20 Oct 2025 12:27:29 GMT</pubDate>
    </item>
    <item>
      <title>关于</title>
      <link>https://en.wikipedia.org/wiki/Om</link>
      <description><![CDATA[文章网址：https://en.wikipedia.org/wiki/Om
评论网址：https://news.ycombinator.com/item?id=45643101
积分：1
# 条评论：0]]></description>
      <guid>https://en.wikipedia.org/wiki/Om</guid>
      <pubDate>Mon, 20 Oct 2025 12:24:43 GMT</pubDate>
    </item>
    <item>
      <title>火爆北京的快递员：胡安彦如何写递送包裹</title>
      <link>https://www.theguardian.com/money/2025/oct/20/the-beijing-courier-who-went-viral-how-hu-anyan-wrote-about-delivering-parcels-and-became-a-bestseller</link>
      <description><![CDATA[文章网址： https://www.theguardian.com/money/2025/oct/20/the-beijing-courier-who-went-viral-how-hu-anyan-wrote-about-delivering-parcels-and-became-a-bestseller
评论网址：https://news.ycombinator.com/item?id=45643081
积分：3
# 条评论：0]]></description>
      <guid>https://www.theguardian.com/money/2025/oct/20/the-beijing-courier-who-went-viral-how-hu-anyan-wrote-about-delivering-parcels-and-became-a-bestseller</guid>
      <pubDate>Mon, 20 Oct 2025 12:21:54 GMT</pubDate>
    </item>
    <item>
      <title>部分流：联合查询引擎中的实时结果</title>
      <link>https://blog.vega.io/posts/partial_stream/</link>
      <description><![CDATA[文章网址：https://blog.vega.io/posts/partial_stream/
评论网址：https://news.ycombinator.com/item?id=45643078
积分：2
# 条评论：0]]></description>
      <guid>https://blog.vega.io/posts/partial_stream/</guid>
      <pubDate>Mon, 20 Oct 2025 12:21:42 GMT</pubDate>
    </item>
    </channel>
</rss>