<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：最新</title>
    <link>https://news.ycombinator.com/newest</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Sat, 30 Aug 2025 06:26:03 GMT</lastBuildDate>
    <item>
      <title>在SCIML存储库中使用Claude Code</title>
      <link>https://discourse.julialang.org/t/the-use-of-claude-code-in-sciml-repos/131009</link>
      <description><![CDATA[文章url： https:////discorse.julialang.orialang.orialang.org/t/the-claude-claude-ciml-ciml-100 
注释URL： https://news.ycombinator.com/item?id=45072294 
点：1 
＃评论：0 ]]></description>
      <guid>https://discourse.julialang.org/t/the-use-of-claude-code-in-sciml-repos/131009</guid>
      <pubDate>Sat, 30 Aug 2025 06:11:00 GMT</pubDate>
    </item>
    <item>
      <title>收音机回来了 -  Z世代的听力习惯正在改变媒体的面貌</title>
      <link>https://www.standard.co.uk/lifestyle/gen-z-radio-listening-habits-b1219043.html</link>
      <description><![CDATA[Article URL: https://www.standard.co.uk/lifestyle/gen-z-radio-listening-habits-b1219043.html
评论URL： https://news.ycombinator.com/item？id=450722238 
点：3 
＃评论：0 ]]></description>
      <guid>https://www.standard.co.uk/lifestyle/gen-z-radio-listening-habits-b1219043.html</guid>
      <pubDate>Sat, 30 Aug 2025 05:59:38 GMT</pubDate>
    </item>
    <item>
      <title>Linux内核中有什么虚假故障？</title>
      <link>https://medium.com/@kimth0312/linux-kernel-what-is-spurious-fault-a24f8063cca6</link>
      <description><![CDATA[Article URL: https://medium.com/@kimth0312/linux-kernel-what-is-spurious-fault-a24f8063cca6
注释URL： https://news.ycombinator.com/item?id=450722237 
点：1 
＃评论：0 ]]></description>
      <guid>https://medium.com/@kimth0312/linux-kernel-what-is-spurious-fault-a24f8063cca6</guid>
      <pubDate>Sat, 30 Aug 2025 05:59:33 GMT</pubDate>
    </item>
    <item>
      <title>免费的AI工具在几秒钟内删除图像背景</title>
      <link>https://nanobananas.site/tools/background-removal</link>
      <description><![CDATA[文章URL： https://nananobananas.site/tools/background-removal   
注释URL： https://news.ycombinator.com/item?id=45072170 
点：2 
＃评论：0 ]]></description>
      <guid>https://nanobananas.site/tools/background-removal</guid>
      <pubDate>Sat, 30 Aug 2025 05:47:10 GMT</pubDate>
    </item>
    <item>
      <title>从多头到潜在注意力：注意机制的演变</title>
      <link>https://vinithavn.medium.com/from-multi-head-to-latent-attention-the-evolution-of-attention-mechanisms-64e3c0505f24</link>
      <description><![CDATA[文章URL： https://vinithavn.medium.com/from-multi-head-to-latent-pestion-the-cortolution-forceent-compentention-mechanisms-64e3c0505f24  
注释URL： https://news.ycombinator.com/item？id=45072160 
点：1 
＃评论：0 ]]></description>
      <guid>https://vinithavn.medium.com/from-multi-head-to-latent-attention-the-evolution-of-attention-mechanisms-64e3c0505f24</guid>
      <pubDate>Sat, 30 Aug 2025 05:45:24 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我在手机上构建了一个个人的“鼠标”</title>
      <link>https://news.ycombinator.com/item?id=45072128</link>
      <description><![CDATA[ i Hn，我是sein的创建者。我们被迫进入“召唤”仪式，该仪式在我们和我们的AI之间建立了墙。同时，我们的数据被发送到云的“大型机”，其中隐私通常是入院的价格。 ai的“ PC Revolution”在这里，但我们缺少&#39;鼠标&#39;。 “个人计算机”已经在我们的口袋中 - 我们的手机具有强大的神经发动机。缺少的是正确的输入设备，可以将我们的思想无缝连接到我们自己的私人AI。这就是为什么我构建了sein剪辑的原因。这不是另一台计算机；这是个人AI时代的“鼠标”。这是一个小小的可穿戴式痴迷的东西：比口袋里的手机更清晰地捕获您的声音。剪辑将此音频牢固地发送到SEIN应用程序，您的手机将成为您的私人AI服务器。但是革命部分不仅是硬件，而且是启用的新互动范式： 1。默认情况下100％私有。
我们带来云级的语音和意图识别，以完全在您的本地设备上运行。您的数据属于您，只有您。这不是为了我们的方便；这是为了保护您。 2。真正的“始终”，没有唤醒的话。
我们撕下了墙。我们的AI被设计为一种“始终在线”同伴，它使用上下文意识来知道您在与之交谈时知道。您的想法是无摩擦的，使互动与与朋友交谈一样自然。 3。情商。
解决了互动的“何时”，我们专注于“如何”。我们的AI感知您的“情感图”，了解何时积极主动以及何时保持沉默。它成为帮助您的伴侣，而不仅仅是执行命令的工具。 4。我们的愿景：建立在MCP上。
这只是开始。我们的系统建立在基础协议（MCP）的基础上，旨在为未来协作AI体验的开放，相互联系的生态系统。最好的事情还没有来。业务模型：很简单。您可以购买硬件（“鼠标”），并将其所有本地AI软件的伴随应用程序永远是您的。可选的订阅将是针对选择利用“大型机”（云模型）进行特定任务的权力用户。我很快就会在Kickstarter上发射，并且会喜欢HN社区对这种方法的反馈 - 我们的手机是AI时代的新PC，现在我们需要的是正确的外围，可以释放其真正的外围。 href =“ https://www.kickstarter.com/projects/projects/sein/sein/sein-the--first-wearbor-for-emotional-emotional-intelligence-fitness?ref=ujhi9o” rel =“ nofollow”

注释URL： https://news.ycombinator.com/item？id=45072128 
点：1 
＃评论：1 ]]></description>
      <guid>https://news.ycombinator.com/item?id=45072128</guid>
      <pubDate>Sat, 30 Aug 2025 05:35:47 GMT</pubDate>
    </item>
    <item>
      <title>“可爱超负荷”：洛杉矶在“迪斯尼乐园的猫人”的一个周末找到快乐</title>
      <link>https://www.theguardian.com/us-news/2025/aug/06/catcon-los-angeles-pasadena-kitty-convention</link>
      <description><![CDATA[文章URL： https://www.theguardian.com/us-news/2025/aug/06/catcon-los-angeles-pasadena-kitty-convention  
注释URL： https://news.ycombinator.com/item?id=45072102 
点：2 
＃评论：0 ]]></description>
      <guid>https://www.theguardian.com/us-news/2025/aug/06/catcon-los-angeles-pasadena-kitty-convention</guid>
      <pubDate>Sat, 30 Aug 2025 05:28:26 GMT</pubDate>
    </item>
    <item>
      <title>社会保障数据负责人辞职</title>
      <link>https://www.politico.com/news/2025/08/29/social-security-data-chief-resigns-00537974</link>
      <description><![CDATA[文章URL： https://www.politico.com/news/2025/08/29/social-security-data-chief-chief-resigns-00537974  
评论URL： https://news.ycombinator.com/item?id=45072094 
点：3 
＃评论：0 ]]></description>
      <guid>https://www.politico.com/news/2025/08/29/social-security-data-chief-resigns-00537974</guid>
      <pubDate>Sat, 30 Aug 2025 05:26:07 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：与现实情绪状态机器的对话伴侣</title>
      <link>https://dmwithme.com</link>
      <description><![CDATA[文章URL： https://dmwithme.com  
评论URL： https://news.ycombinator.com/item?id=45072071 
点：2 
＃评论：0 ]]></description>
      <guid>https://dmwithme.com</guid>
      <pubDate>Sat, 30 Aug 2025 05:16:32 GMT</pubDate>
    </item>
    <item>
      <title>显示HN：SJT- API的轻巧结构化JSON表格式</title>
      <link>https://news.ycombinator.com/item?id=45071989</link>
      <description><![CDATA[嗨，hn，
我构建了一种称为SJT（结构化JSON表）的小型实验格式，以优化API中的数据传输。
这个想法很简单：SJT不是重复每个行的对象键，而是将结构（标题）与值分开。例如，使用Discord的 /消息端点： RAW JSON有效负载：〜50,110字节使用SJT：〜26,494字节相同的数据，因此您可以将大约50％的大小降低，同时还可以通过记录解码（记录）（记录）。出乎意料的是，解码甚至比普通的JSON更快，因为弦乐少于开销。快速基准： |格式|大小（KB）|编码时间|解码时间|  | ------------ | ----------- | ------------ | ------------ |
| JSON | 3849.34 | 41.81 ms | 51.86 ms |  | JSON + GZIP | 379.67 | 55.66 ms | 39.61 MS |  | MessagePack | 2858.83 | 51.66 ms | 74.53 ms |  | SJT（JSON）| 2433.38 | 36.76 ms | 42.13 ms |  | SJT + GZIP | 359.00 | 69.59 ms | 46.82 MS | 测试条件：数据集：合成表格数据集，其中包含50,000个带有混合原始字段，嵌套阵列和嵌套对象的记录（代表大的REST API有效载荷的代表）。运行时：Node.js 20（Node.js 20（v8 Engine）。 kilobytes（估计二进制格式）。编码/解码（MS）：平均时间以毫秒序列化/对整个数据集进行序列化。 spec： https://github.com/sjtf/sjt   JS实现： https://github.com/yukiakai212/sjt.js  好奇地听到与JSON-HEAVY API，流媒体或紧凑型数据格式（CSV，Parquet等）一起工作的人的反馈

注释URL： https://news.ycombinator.com/item?id=45071989 
点：1 
＃评论：0 ]]></description>
      <guid>https://news.ycombinator.com/item?id=45071989</guid>
      <pubDate>Sat, 30 Aug 2025 04:52:31 GMT</pubDate>
    </item>
    </channel>
</rss>