<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：最新</title>
    <link>https://news.ycombinator.com/newest</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Sun, 18 Aug 2024 12:29:48 GMT</lastBuildDate>
    <item>
      <title>乌克兰将在前线部署机器狗</title>
      <link>https://www.france24.com/en/live-news/20240808-ukraine-to-unleash-robot-dogs-on-its-front-lines</link>
      <description><![CDATA[文章网址：https://www.france24.com/en/live-news/20240808-ukraine-to-unleash-robot-dogs-on-its-front-lines
评论网址：https://news.ycombinator.com/item?id=41281897
积分：1
评论数：0]]></description>
      <guid>https://www.france24.com/en/live-news/20240808-ukraine-to-unleash-robot-dogs-on-its-front-lines</guid>
      <pubDate>Sun, 18 Aug 2024 12:18:40 GMT</pubDate>
    </item>
    <item>
      <title>国防经济问题</title>
      <link>https://www.navalgazing.net/The-Problem-of-Defense-Economics</link>
      <description><![CDATA[文章网址：https://www.navalgazing.net/The-Problem-of-Defense-Economics
评论网址：https://news.ycombinator.com/item?id=41281891
积分：1
评论数：0]]></description>
      <guid>https://www.navalgazing.net/The-Problem-of-Defense-Economics</guid>
      <pubDate>Sun, 18 Aug 2024 12:17:31 GMT</pubDate>
    </item>
    <item>
      <title>向 HN 展示：我的开发速度提高了 50%，并在软发布时实现了销售</title>
      <link>https://suitemail.pro/</link>
      <description><![CDATA[嘿，HN！
我推出了一款新产品，交付速度比之前的产品快了 50%。此外，我在软发布期间就实现了销售。这怎么可能呢？下面是详细信息。1. 更快地开发和交付
始终使用相同的技术堆栈，或者您可以创建自己的样板，以便在开始构建新产品时可以重复使用。为什么？当您每次都使用相同的技术堆栈时。您将成为该技术的专家。而且您可以对您的产品进行巨大的改进。
然后，您不需要在每次构建产品时都学习新东西。相反，您可以更多地关注您的产品如何解决市场问题和业务方面。2. 进行软发布
您可以通过提供优惠券或折扣来更早地推广您的产品。从那里，您可以更早地收集用户的反馈并改进您的产品。请记住，销售用户需要的功能比添加一堆垃圾功能更重要。3.解决问题
始终构建一个解决问题的产品，而不是寻找随机的产品创意。在这种情况下，SuiteMail 可以通过降低电子邮件帐户的运营成本来解决自由职业者或企业主的问题。这是我的第二款产品 SuiteMail 的细分细节。您可以遵循此业务样板。
- Rully

评论网址：https://news.ycombinator.com/item?id=41281874
积分：1
评论数：1]]></description>
      <guid>https://suitemail.pro/</guid>
      <pubDate>Sun, 18 Aug 2024 12:12:59 GMT</pubDate>
    </item>
    <item>
      <title>告别繁琐的提示：这个引擎让法学硕士像专家一样说话（WIP）</title>
      <link>https://github.com/offline-ai/cli</link>
      <description><![CDATA[文章网址：https://github.com/offline-ai/cli
评论网址：https://news.ycombinator.com/item?id=41281870
积分：1
评论数：0]]></description>
      <guid>https://github.com/offline-ai/cli</guid>
      <pubDate>Sun, 18 Aug 2024 12:12:05 GMT</pubDate>
    </item>
    <item>
      <title>发光矮牵牛花教会了我什么</title>
      <link>https://knowablemagazine.org/content/article/society/2024/how-does-bioluminescent-petunia-glow-science</link>
      <description><![CDATA[文章网址：https://knowablemagazine.org/content/article/society/2024/how-does-bioluminescent-petunia-glow-science
评论网址：https://news.ycombinator.com/item?id=41281867
积分：1
评论数：0]]></description>
      <guid>https://knowablemagazine.org/content/article/society/2024/how-does-bioluminescent-petunia-glow-science</guid>
      <pubDate>Sun, 18 Aug 2024 12:11:19 GMT</pubDate>
    </item>
    <item>
      <title>DOS 在现代 ThinkPad 上的最后一战：搭载英特尔第 10 代酷睿 CPU 的 X13 Gen 1</title>
      <link>https://yeokhengmeng.com/2024/08/dos-on-thinkpad-x13-gen1/</link>
      <description><![CDATA[文章网址：https://yeokhengmeng.com/2024/08/dos-on-thinkpad-x13-gen1/
评论网址：https://news.ycombinator.com/item?id=41281849
积分：2
评论数：2]]></description>
      <guid>https://yeokhengmeng.com/2024/08/dos-on-thinkpad-x13-gen1/</guid>
      <pubDate>Sun, 18 Aug 2024 12:08:18 GMT</pubDate>
    </item>
    <item>
      <title>T3X/0 最小过程语言</title>
      <link>https://t3x.org/t3x/0/ref.html</link>
      <description><![CDATA[文章网址：https://t3x.org/t3x/0/ref.html
评论网址：https://news.ycombinator.com/item?id=41281831
积分：1
评论数：0]]></description>
      <guid>https://t3x.org/t3x/0/ref.html</guid>
      <pubDate>Sun, 18 Aug 2024 12:04:06 GMT</pubDate>
    </item>
    <item>
      <title>错过了北极光？为什么最大的风暴可能尚未到来</title>
      <link>https://www.washingtonpost.com/climate-environment/2024/08/18/aurora-activity-solar-storms-sunspots/</link>
      <description><![CDATA[文章网址：https://www.washingtonpost.com/climate-environment/2024/08/18/aurora-activity-solar-storms-sunspots/
评论网址：https://news.ycombinator.com/item?id=41281830
积分：1
评论数：0]]></description>
      <guid>https://www.washingtonpost.com/climate-environment/2024/08/18/aurora-activity-solar-storms-sunspots/</guid>
      <pubDate>Sun, 18 Aug 2024 12:03:21 GMT</pubDate>
    </item>
    <item>
      <title>我被 Facebook 解雇了（价值 1 亿美元的教训）（2012 年）</title>
      <link>https://noahkagan.com/why-i-got-fired-from-facebook-a-100-million-dollar-lesson/</link>
      <description><![CDATA[文章网址：https://noahkagan.com/why-i-got-fired-from-facebook-a-100-million-dollar-lesson/
评论网址：https://news.ycombinator.com/item?id=41281829
积分：1
评论数：0]]></description>
      <guid>https://noahkagan.com/why-i-got-fired-from-facebook-a-100-million-dollar-lesson/</guid>
      <pubDate>Sun, 18 Aug 2024 12:03:20 GMT</pubDate>
    </item>
    <item>
      <title>问 HN：如今规模的应用有多普遍？</title>
      <link>https://news.ycombinator.com/item?id=41281823</link>
      <description><![CDATA[最近，我在工作之余阅读了大量材料。《代码整洁之道》、《马丁·福勒的重构》和其他类似的书籍。这些书着眼于面向对象编程，并帮助您理解复杂的编程模式。但是，我在这个行业已经十年了，在四家不同的公司工作过，我还没有用面向对象编程做过任何过于复杂的事情，比如复杂的类结构、架构或设计。到目前为止，一切似乎都相当简单，我很少发现自己在设计上花那么多心思。我仍然尝试遵循最佳实践并编写模块化代码等，但我想知道我在软件行业的经历是例外还是常态？这个行业最近是否发生了变化，大多数开发人员不再构建复杂、可扩展的应用程序？这些关于最佳实践的经典书籍现在是不是有点过时了？

评论网址：https://news.ycombinator.com/item?id=41281823
积分：2
评论数：0]]></description>
      <guid>https://news.ycombinator.com/item?id=41281823</guid>
      <pubDate>Sun, 18 Aug 2024 12:02:16 GMT</pubDate>
    </item>
    </channel>
</rss>