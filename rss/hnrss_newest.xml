<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：最新</title>
    <link>https://news.ycombinator.com/newest</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Fri, 09 May 2025 06:28:04 GMT</lastBuildDate>
    <item>
      <title>瑞士关于电子ID的全民投票</title>
      <link>https://www.astralcodexten.com/p/moldbug-sold-out</link>
      <description><![CDATA[文章URL： https://www.astralcodexten.com/p/moldbug-soldbug-solg-sold-in
评论url： https://news.ycombinator.com/item？id=43934282 
点：1 
＃评论：0 ]]></description>
      <guid>https://www.astralcodexten.com/p/moldbug-sold-out</guid>
      <pubDate>Fri, 09 May 2025 06:20:22 GMT</pubDate>
    </item>
    <item>
      <title>6502 SIEMENS PC 100组装手册中的非法开孔（1980）</title>
      <link>https://www.pagetable.com/?p=1798</link>
      <description><![CDATA[文章URL： https://www.pagetable.com/?p=1798  
注释URL： https://news.ycombinator.com/item?id=43934279 
点：1 
＃评论：0 ]]></description>
      <guid>https://www.pagetable.com/?p=1798</guid>
      <pubDate>Fri, 09 May 2025 06:19:17 GMT</pubDate>
    </item>
    <item>
      <title>Haskell速成课程（2021）</title>
      <link>https://isomorphism.xyz/haskell-21/</link>
      <description><![CDATA[文章URL： https://isomorphism.xyz/haskell-21/   
注释url： https://news.ycombinator.com/item？id=43934270 
点：1 
＃评论：0 ]]></description>
      <guid>https://isomorphism.xyz/haskell-21/</guid>
      <pubDate>Fri, 09 May 2025 06:17:29 GMT</pubDate>
    </item>
    <item>
      <title>使用MMTK在Rust中编写可加热的Malloc</title>
      <link>https://www.humprog.org/~stephen/blog/#replacing-malloc-using-mmtk-in-rust</link>
      <description><![CDATA[文章url： https：//www.humprog..org..org/clog..org/clog y.humprog/~stephen/pplog/~stephen/blog/plag/plag/pplacing-mmmmtplacing-mmmteg 注释url： https://news.ycombinator.com/item？id=43934261 
点：1 
＃评论：0 ]]></description>
      <guid>https://www.humprog.org/~stephen/blog/#replacing-malloc-using-mmtk-in-rust</guid>
      <pubDate>Fri, 09 May 2025 06:16:40 GMT</pubDate>
    </item>
    <item>
      <title>在公司中采用人工智能</title>
      <link>https://www.oecd.org/en/publications/the-adoption-of-artificial-intelligence-in-firms_f9ef33c3-en.html</link>
      <description><![CDATA[文章URL： https://www.oecd.org/en/publications/the-adoption-of-andercover-indercorence-incover-intelligence-in-firms_f9ef33c3-en.html  
注释url： https://news.ycombinator.com/item？id=43934254 
点：1 
＃评论：0 ]]></description>
      <guid>https://www.oecd.org/en/publications/the-adoption-of-artificial-intelligence-in-firms_f9ef33c3-en.html</guid>
      <pubDate>Fri, 09 May 2025 06:15:16 GMT</pubDate>
    </item>
    <item>
      <title>比尔·盖茨（Bill Gates）指责埃隆·马斯克（Elon Musk）用美国国际开发署裁切杀害儿童</title>
      <link>https://www.ft.com/content/bdd9bb89-ac3c-4043-9ca4-bc7efbd41fed</link>
      <description><![CDATA[文章URL： https://www.ft.com/com/content/content/content/bddd9bb89-ac3c-ac3c-4043-4043-9ca4-bc7ca41ca 
注释url： https://news.ycombinator.com/item?id=43934222 
点：3 
＃评论：0 ]]></description>
      <guid>https://www.ft.com/content/bdd9bb89-ac3c-4043-9ca4-bc7efbd41fed</guid>
      <pubDate>Fri, 09 May 2025 06:09:52 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：BruteFeedParser  - 一种蛮横放松RSS的方式</title>
      <link>https://github.com/rumca-js/brutefeedparser</link>
      <description><![CDATA[文章URL： https://github.com/rumca-js/brutefeedparser   
评论URL： https://news.ycombinator.com/item？id=43934204 
点：1 
＃评论：1 ]]></description>
      <guid>https://github.com/rumca-js/brutefeedparser</guid>
      <pubDate>Fri, 09 May 2025 06:07:14 GMT</pubDate>
    </item>
    <item>
      <title>爱丽丝检测到LHC处的铅转化为黄金</title>
      <link>https://phys.org/news/2025-05-alice-conversion-gold-large-hadron.html</link>
      <description><![CDATA[文章url： https://phys.org/news/news/2025-05-05-05-alice-conversion-gonversion-gonversion-gonversion-golold-large-polold-large-hadrron-poldron.hadrron.htm 评论url： https://news.ycombinator.com/item?id=43934188 
点：2 
＃评论：0 ]]></description>
      <guid>https://phys.org/news/2025-05-alice-conversion-gold-large-hadron.html</guid>
      <pubDate>Fri, 09 May 2025 06:02:55 GMT</pubDate>
    </item>
    <item>
      <title>中国的习近平将“美国霸权”比喻为“法西斯军队”</title>
      <link>https://www.ft.com/content/9e5366af-ee4a-4771-9138-6ac17b6a06ff</link>
      <description><![CDATA[文章URL：https://www.ft.com/content/9e5366af-ee4a-4771-9138-6ac17b6a06ff
评论url： https://news.ycombinator.com/item?id=43934185 
点：1 
＃评论：0 ]]></description>
      <guid>https://www.ft.com/content/9e5366af-ee4a-4771-9138-6ac17b6a06ff</guid>
      <pubDate>Fri, 09 May 2025 06:01:53 GMT</pubDate>
    </item>
    <item>
      <title>blazeio.sharpevent：一种python异步原始性，该原始性缩放到1M服务员，用o（1）</title>
      <link>https://news.ycombinator.com/item?id=43934172</link>
      <description><![CDATA[我一直在制作python async库（[blazeio]（https://github.com/anonyxbiz/blazeio）），偶然发现了令人震惊的简单优化，使`syncio.event&#39;event. event&#39;看起来像一个遗物。 
“ asyncio.event”（以及其他语言中的类似构造）具有两个讨厌的缩放瑕疵： 1。 *内存*：它分配每个服务员的未来→1M服务员= 48MB浪费..
2。 *延迟 *：它唤醒服务师单一  -  o（n）gil下的syscalls。
替换式替换： 
 -  *为所有服务员使用一个共享的未来 * -  *o（1）内存 *。
 -  *单个操作中的每个服务员 * -  *o（1）延迟 *。 ### *基准 *
|公制| `asyncio.event` | ``Sharpevent` |&#39;|
| ------------------ | ----------------------------------------------- |
| 1K服务员| 〜1ms唤醒| * 〜1µS* |
| 1M服务员| *崩溃* | *仍然〜1µS*|
|内存（1M）| 48MB | *48字节*|  ###*为什么这很重要*
 -  *实时应用程序 *（WebSockets，Games）增益 *可预测的延迟 *。 
 -  *高并发 *（IoT，交易）变得琐碎。 
 - 它是 *纯Python *，但击败了Cpython的C Invel.  ### *没有弊端？ * * 
几乎没有。如果您需要每个Waiter超时/取消，则需要一个包装器，但是99％的用途只需要散装唤醒。 ### *尝试 *尝试 * 
``python
来自Blazeio进口
事件= SharpEvent（）
event.set（）＃立即唤醒所有服务员
`````` [github]（https://github.com/anonyxbiz/blazeio）  我会喜欢反馈，我是否错过了关键用例？ 

评论url： https://news.ycombinator.com/item?id=43934172 
点：2 
＃评论：0 ]]></description>
      <guid>https://news.ycombinator.com/item?id=43934172</guid>
      <pubDate>Fri, 09 May 2025 05:58:02 GMT</pubDate>
    </item>
    </channel>
</rss>