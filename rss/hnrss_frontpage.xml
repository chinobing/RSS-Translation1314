<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：头版</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Thu, 25 Apr 2024 18:18:03 GMT</lastBuildDate>
    <item>
      <title>FCC 以 3 比 2 的投票结果恢复了禁止封锁和节流的网络中立性规则</title>
      <link>https://arstechnica.com/tech-policy/2024/04/fcc-restores-net-neutrality-rules-that-ban-blocking-and-throttling-in-3-2-vote/</link>
      <description><![CDATA[文章网址：https://arstechnica.com/tech-policy/2024/04/fcc-restores-net-neutrality-rules-that-ban-blocking-and-throtdling-in-3-2-vote /
评论网址：https://news.ycombinator.com/item?id=40160824
积分：9
# 条评论：1]]></description>
      <guid>https://arstechnica.com/tech-policy/2024/04/fcc-restores-net-neutrality-rules-that-ban-blocking-and-throttling-in-3-2-vote/</guid>
      <pubDate>Thu, 25 Apr 2024 17:52:01 GMT</pubDate>
    </item>
    <item>
      <title>CatLIP：剪辑视觉精度与网络规模数据预训练速度提高 2.7 倍</title>
      <link>https://arxiv.org/abs/2404.15653</link>
      <description><![CDATA[文章网址：https://arxiv.org/abs/2404.15653
评论网址：https://news.ycombinator.com/item?id=40160728
积分：6
# 条评论：0]]></description>
      <guid>https://arxiv.org/abs/2404.15653</guid>
      <pubDate>Thu, 25 Apr 2024 17:46:04 GMT</pubDate>
    </item>
    <item>
      <title>FCC 投票恢复网络中立规则</title>
      <link>https://www.nytimes.com/2024/04/25/technology/fcc-net-neutrality-open-internet.html</link>
      <description><![CDATA[文章网址：https://www.nytimes。 com/2024/04/25/technology/fcc-net-neutrality-open-internet.html
评论网址：https://news.ycombinator.com/item?id=40160429
积分：66
# 条评论：37]]></description>
      <guid>https://www.nytimes.com/2024/04/25/technology/fcc-net-neutrality-open-internet.html</guid>
      <pubDate>Thu, 25 Apr 2024 17:23:00 GMT</pubDate>
    </item>
    <item>
      <title>发现第九行星的新证据</title>
      <link>https://phys.org/news/2024-04-evidence-planet.html</link>
      <description><![CDATA[文章网址：https://phys.org/news/2024-04-evidence-planet。 html
评论网址：https://news.ycombinator.com/item?id=40160326
积分：14
# 条评论：7]]></description>
      <guid>https://phys.org/news/2024-04-evidence-planet.html</guid>
      <pubDate>Thu, 25 Apr 2024 17:16:31 GMT</pubDate>
    </item>
    <item>
      <title>QuestDB (YC S20) 正在招聘高级前端工程师</title>
      <link>https://questdb.io/careers/senior-frontend-engineer/</link>
      <description><![CDATA[文章网址：https://questdb.io/careers/senior-frontend-engineer/&lt; /p&gt;
评论网址：https://news.ycombinator.com/item?id=40160065
积分：0
# 条评论：0]]></description>
      <guid>https://questdb.io/careers/senior-frontend-engineer/</guid>
      <pubDate>Thu, 25 Apr 2024 17:00:49 GMT</pubDate>
    </item>
    <item>
      <title>DDC OLED：如何从 HDMI 端口驱动微型显示器。 (2022)</title>
      <link>https://mitxela.com/projects/ddc-oled</link>
      <description><![CDATA[文章网址：https://mitxela.com/projects/ddc-oled
评论网址：https://news.ycombinator.com/item?id=40159766
积分：10
# 条评论：1]]></description>
      <guid>https://mitxela.com/projects/ddc-oled</guid>
      <pubDate>Thu, 25 Apr 2024 16:42:05 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我用与非门制作了一台可编程计算机</title>
      <link>https://github.com/ArhanChaudhary/NAND</link>
      <description><![CDATA[我很自豪地展示我的个人爱好项目 NAND。这项为期一年的工作遵循已完成的 Nand 到 Tetris 课程，但通过自己的运行时、用户界面和 IDE 移植到网络上。使用“加载示例程序”选择器，您可以尝试我在 NAND 模拟硬件上编写的一些程序，例如 2048、遗传算法和手动堆栈溢出以破坏屏幕。在 https://nand.arhan.sh此外，我还撰写了有关该项目的大量文章。请在 GitHub 存储库的自述文件中阅读相关内容。
&lt;小时/&gt;
评论网址：https://news.ycombinator.com/item?id=40159278
积分：6
# 条评论：0]]></description>
      <guid>https://github.com/ArhanChaudhary/NAND</guid>
      <pubDate>Thu, 25 Apr 2024 16:08:05 GMT</pubDate>
    </item>
    <item>
      <title>MemoryDB：快速、持久的内存优先云数据库</title>
      <link>https://www.amazon.science/publications/amazon-memorydb-a-fast-and-durable-memory-first-cloud-database</link>
      <description><![CDATA[文章 URL：https://www. amazon.science/publications/amazon-memorydb-a-fast-and-durable-memory-first-cloud-database
评论网址：https://news.ycombinator.com/item?id=40158794
积分：79
# 条评论：32]]></description>
      <guid>https://www.amazon.science/publications/amazon-memorydb-a-fast-and-durable-memory-first-cloud-database</guid>
      <pubDate>Thu, 25 Apr 2024 15:34:59 GMT</pubDate>
    </item>
    <item>
      <title>我们有 4 天的时间来质疑互联网服务所要求的 KYC</title>
      <link>https://www.federalregister.gov/documents/2024/01/29/2024-01580/taking-additional-steps-to-address-the-national-emergency-with-respect-to-significant-malicious</link>
      <description><![CDATA[文章网址：https://www.federalregister.gov/documents/2024/01/29/2024-01580/take-additional-steps-to-address-the-national-emergency-with-尊重重大恶意
评论网址：https://news.ycombinator.com/item?id=40158752
积分：310
# 条评论：229]]></description>
      <guid>https://www.federalregister.gov/documents/2024/01/29/2024-01580/taking-additional-steps-to-address-the-national-emergency-with-respect-to-significant-malicious</guid>
      <pubDate>Thu, 25 Apr 2024 15:31:16 GMT</pubDate>
    </item>
    <item>
      <title>推出 HN：Nango (YC W23) – 源可用的统一 API</title>
      <link>https://news.ycombinator.com/item?id=40158481</link>
      <description><![CDATA[大家好，我们是来自 Nango (https://www.nango.dev) 的 Bastien 和 Robin。我们会解决外部 API（167 个且还在不断增加）的烦恼，因此您可以快速为您的 SaaS 构建自定义集成，同时保留对其工作方式的完全控制。
2 分钟演示视频：https://www.loom.com/share/d04c67b47e284e86b91b4b99fba548ec SaaS 工程团队面临着一个艰难的选择：他们可以从头开始在内部构建每个集成，这使他们能够完全控制，但需要大量的时间和维护工作。或者，他们可以使用预构建的解决方案，这些解决方案快速、简单，但灵活性较差，可能无法满足所有客户需求。Nango 结合了两全其美。我们让您可以快速交付自定义集成，而无需构建复杂的基础设施或深入研究每个 API 的怪癖。您可以控制业务逻辑、数据模型和特定于客户的配置，例如自定义字段映射。我们处理 (O)Auth 并在生产中可靠地运行您的集成。在幕后，您的集成在 Nango 上作为打字稿“lambda”运行。典型的集成有 3-5 个 lambda，每个 20-50 行代码。这些 lambda 位于您的 git 存储库中，与应用程序的其余部分一起进行版本控制，并使用 CLI 部署到 Nango ( https://docs.nango.dev/understand/core-concepts）。我们的运行时有一个内置调度程序，用于连续后台同步，监控以了解您的集成是否按预期运行，详细记录Nango 中发生的一切，以及用于处理 (O)auth、重试、速率限制处理、webhook 洪水、数据缓存、重复数据删除等的预构建基础设施。更多信息请参见：https://docs.nango.dev/understand/architecture我们发现 ChatGPT 和 Copilot 可让您在 Nango 上快速构建集成，而无需学习每个 API 的复杂性。 LLM 非常擅长弄清楚要使用哪个端点、需要哪些参数等。与我们的运行时相结合，这可以让您在数小时而不是数周内构建复杂的大规模集成。我们付出了大量的努力处理 API 复杂性，因此您不必这样做。即使最初看起来很简单的集成最终也迫使我们扩展我们的基础设施来处理它们的怪癖和问题。例如，我们必须找出 100 多种不同的 OAuth 实现（请参阅 https://www.nango.dev/blog/why-is-oauth-still-hard 和 https://news.ycombinator.com/item?id=35713518）。我们必须处理六种非标准身份验证方法（Github 应用程序、Stripe 应用程序、Netsuite 等）、过期的 Webhooks、处理数据依赖关系的方法、奇怪的分页方法、随每次 API 调用而变化的 API 密钥，注册 Webhooks 的数十种不同方式等。这是一个不断变化的目标，但这是我们喜欢的挑战，我们认为这种方法是有意义的：我们专注于每个 API 不同的挑剔细节 - 您专注于使您的产品变得更加出色，并为您的用户提供更多集成。最后但并非最不重要的一点是，Nango 是开源的 (https://github.com/NangoHQ/nango)。 com/NangoHQ/nango），采用 ELv2 许可证（允许大多数用例，直接复制除外）。任何人都可以贡献新的 API 并与社区分享他们的集成模板。查看 Nango 实际应用的最快方法是使用我们的交互式演示（无需注册）：https://app.nango.dev/hn-demo或者查看我们的文档：https://docs.nango.dev我们很乐意听到您的反馈并期待您的评论！
&lt;小时/&gt;
评论网址：https://news.ycombinator.com/item?id=40158481
积分：88
# 条评论：49]]></description>
      <guid>https://news.ycombinator.com/item?id=40158481</guid>
      <pubDate>Thu, 25 Apr 2024 15:09:02 GMT</pubDate>
    </item>
    </channel>
</rss>