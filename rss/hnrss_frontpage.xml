<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Wed, 28 May 2025 21:18:16 GMT</lastBuildDate>
    <item>
      <title>超级马里奥兄弟内部的玩具RTO。使用仿真器保存状态</title>
      <link>https://prettygoodblog.com/p/what-threads-are-part-2</link>
      <description><![CDATA[这是在博客文章中以抛出的隐喻开始的，但现在是完全可以运行的：一种玩具rtos，具有超级马里奥兄弟内部的先发制性多任务。您定义术语
 
 - 使用模拟器将状态保存为线程上下文  - 支持（非常基本的）静音，中断遮罩和条件变量  - 使用超级马里奥兄弟1-1，其中映射的各个部分专用于各种同步primitives    都没有许多简化和差距（甚至没有绘制），甚至没有绘制任务。保存状态代表整个机器的状态，包括RAM，而线程上下文表示更少的切片），但我认为这很有趣，并且b）唯一的内脏解释。

注释URL： https://news.ycombinator.com/item?id=44120241 
点：20 
＃评论：5 ]]></description>
      <guid>https://prettygoodblog.com/p/what-threads-are-part-2</guid>
      <pubDate>Wed, 28 May 2025 20:15:43 GMT</pubDate>
    </item>
    <item>
      <title>无论如何，“不确定”是什么意思</title>
      <link>https://buttondown.com/hillelwayne/archive/what-does-undecidable-mean-anyway/</link>
      <description><![CDATA[文章URL： https://buttondown.com/hillelelwayney/hillelwayne/hillelwaynarchive/what what what what what what
注释URL： https://news.ycombinator.com/item?id=44119890 
点：28 
＃评论：16 ]]></description>
      <guid>https://buttondown.com/hillelwayne/archive/what-does-undecidable-mean-anyway/</guid>
      <pubDate>Wed, 28 May 2025 19:37:47 GMT</pubDate>
    </item>
    <item>
      <title>冰淇淋取代了美国海军的酒</title>
      <link>https://www.oldsaltblog.com/2025/05/how-ice-cream-replaced-booze-in-the-us-navy-2/</link>
      <description><![CDATA[文章URL： https://www.oldsaltblog.com/2025/2025/05/05/how-ice-cream-reeam-ream-replace-replace-replace--replace---replace--------------   -  &lt;-2
注释URL： https://news.ycombinator.com/item？id=44119173 
点：44 
＃评论：40 ]]></description>
      <guid>https://www.oldsaltblog.com/2025/05/how-ice-cream-replaced-booze-in-the-us-navy-2/</guid>
      <pubDate>Wed, 28 May 2025 18:35:28 GMT</pubDate>
    </item>
    <item>
      <title>DeepSeek R1-0528</title>
      <link>https://huggingface.co/deepseek-ai/DeepSeek-R1-0528</link>
      <description><![CDATA[文章URL： https://huggingface.co/deepseek-ai/deepseek-ai/deepseek-ieek-r1-0528 
注释URL： https://news.ycombinator.com/item?id=441188818 
点：171 
＃评论：52 ]]></description>
      <guid>https://huggingface.co/deepseek-ai/DeepSeek-R1-0528</guid>
      <pubDate>Wed, 28 May 2025 17:59:02 GMT</pubDate>
    </item>
    <item>
      <title>将神经网汇总到C的1,744×加速度</title>
      <link>https://slightknack.dev/blog/difflogic/</link>
      <description><![CDATA[文章URL： https://slightknack.dev/blog/difflogic/   
注释URL： https://news.ycombinator.com/item？id=44118373 
点：123 
＃评论：34 ]]></description>
      <guid>https://slightknack.dev/blog/difflogic/</guid>
      <pubDate>Wed, 28 May 2025 17:22:47 GMT</pubDate>
    </item>
    <item>
      <title>Gogograndparent（YC S16）正在雇用后端工程师</title>
      <link>https://news.ycombinator.com/item?id=44118127</link>
      <description><![CDATA[注释URL： https://news.ycombinator.com/item?id=44118127 
点：0 
＃评论：0 ]]></description>
      <guid>https://news.ycombinator.com/item?id=44118127</guid>
      <pubDate>Wed, 28 May 2025 17:01:26 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我在Rust中重写了我的Mac Electron应用程序</title>
      <link>https://desktopdocs.com/?v=2025</link>
      <description><![CDATA[一年前，我的联合创始人在HN上启动了桌面文档。这是我们使用电子构建的Mac应用程序，它使用夹具嵌入式用自然语言在本地搜索照片和视频。我们从HN和我们的第一个付费客户那里得到了积极的反馈，但是该应用程序几乎是1GB且使用的笨拙。 tldr; Rust中的重建是正确的举动。
-DMG安装程序较小70％：232MB→69.5MB
 - 索引文件更快：一个38分钟的视频现在在〜3分钟而不是10-14分钟内索引
 - 总体上更稳定（用于随机崩溃的旧应用程序）原始版本奏效了，但是当您尝试索引数千张图像或大型视频时，表现不佳。我们浪费了很多时间来优化电子的主要渲染器流程通信，并最终获得了一个复杂的工作者系统来处理大量媒体文件。几个月来，我们犹豫不决地争取了继续优化电子应用程序与迅速或生锈的全面重建的犹豫不决。让我们退缩的主要因素是，我们已经有将近10年的Swift编码，我们对Rust的了解不太了解。最终打破了我们的是，当用户抱怨该应用程序崩溃了他们的视频电话时，他们只是在后台运行。我想这就是当您用铬运送应用程序时，该应用程序在任何应用程序代码之前占200mb。今天，该应用程序仍然使用剪辑进行嵌入，除了Redis进行矢量存储和搜索之外，Rust现在处理图像和视频处理管道以及所有文件I/O来处理所有用户，用户将整个机器浏览，而不是用UI来求职。之所以表现良好，是因为它在旧版本的复杂性生活后产生了更清洁，更简单的UI。迁移中最棘手的部分是学习生锈。 LLM肯定会有所帮助，但是与电子相比，Rust/Tauri社区并不那么成熟。将Redis捆绑到该应用程序中是一场许可的噩梦，但是我认为我们使用Rust手柄的解决方案比我们对电子的解决方案更好。有时，您必须扔掉工作代码以构建正确的东西。 ama关于Rust/Tauri迁移，Redis Bundis Nightmares，剪辑嵌入方式如何用于本地语义搜索，或者为什么电子不总是答案。 

注释URL： https://news.ycombinator.com/item?id=44118023 
点：286 
＃评论：212 ]]></description>
      <guid>https://desktopdocs.com/?v=2025</guid>
      <pubDate>Wed, 28 May 2025 16:53:11 GMT</pubDate>
    </item>
    <item>
      <title>编译器资源管理器和URL的承诺永远持续</title>
      <link>https://xania.org/202505/compiler-explorer-urls-forever</link>
      <description><![CDATA[文章url： https://xania.org/202505/compiler-compiler-explorer-explorer-explorer-urls-urls-forever  forever  
注释URL： https://news.ycombinator.com/item?id=441177722 
点：157 
＃评论：71 ]]></description>
      <guid>https://xania.org/202505/compiler-explorer-urls-forever</guid>
      <pubDate>Wed, 28 May 2025 16:28:20 GMT</pubDate>
    </item>
    <item>
      <title>启动HN：MindFort（YC X25） - 用于连续灌输的AI代理</title>
      <link>https://news.ycombinator.com/item?id=44117465</link>
      <description><![CDATA[嘿，hn！我们是Mindfort的Brandon，Sam和Akul（ https://mindfort.ai ）。我们正在建立自主的AI代理，这些代理在Web应用程序中不断找到，验证和补丁安全漏洞 - 实际上创建了一个运行24/7的AI红色团队。 rel =“ nofollow”&gt; https://www.loom.com/share/e56faa07d90b417db09bbb44454dce8d5a  今天的安全测试越来越具有挑战性。传统扫描仪产生30-50％的假阳性，在噪音中淹没工程团队。手动渗透测试每季度进行每季度进行，每季度进行数万评估，需要数周的时间才能完成。同时，在AI帮助的情况下，团队的运输速度比以往任何时候都更快，但是安全评论已成为更大的瓶颈。我们三个人都从不同的角度遇到了这个问题。布兰登（Brandon）在ProjectDiscovery Building the Nuclei Scanner工作，然后在NetSpi（最大的笔测试公司之一）为测试人员建造AI工具。山姆（Sam）是Salesforce领导Tableau的高级工程师。他亲自处理了杂耍安全调查结果和管理补救措施。阿库尔（Akul）在AI和安全方面做了他的主人，共同撰写了有关使用LLM进行生态攻击的论文，并参加了OpenAI和人类的红色团队。脆弱性并建议补丁 - 类似于人类渗透测试仪的工作原理。与传统扫描仪的关键区别在于，我们的代理商在报告之前验证了运行时环境中的利用，从而降低了误报。我们使用了共同策划的多个基础模型。代理人执行侦察以了解攻击表面，然后使用该上下文来告知测试策略。当他们发现潜在的漏洞时，他们会旋转孤立的环境以验证剥削。如果成功，他们将分析代码库以生成上下文补丁。是什么使这与现有工具不同？通过剥削验证：我们不仅仅是模式匹配 - 我们利用漏洞来证明它们是真实的； - 代码库集成：代理了解您的代码结构，以查找复杂的逻辑错误并建议适当的修复； - 连续操作：随着代码的发展，我们不断测试，而不是时间评估； - 攻击链发现：代理商可以找到需要将不同问题链接的多步漏洞。我们目前正在尽早访问，与初始合作伙伴合作以完善平台。我们的代理商已经发现了其他工具错过的脆弱性，并且在渗透测试基准方面得分很好。期待您的想法和评论！！

注释URL： https://news.ycombinator.com/item?id=44117465 
点：29 
＃评论：15 ]]></description>
      <guid>https://news.ycombinator.com/item?id=44117465</guid>
      <pubDate>Wed, 28 May 2025 16:00:44 GMT</pubDate>
    </item>
    <item>
      <title>从华夫饼屋停止并停止</title>
      <link>https://www.jack.bio/blog/wafflehouse</link>
      <description><![CDATA[文章URL： https://www.jack.bio/blog/blog/wafflehouse   
评论URL： https://news.ycombinator.com/item?id=44117302 
点：193 
＃评论：126 ]]></description>
      <guid>https://www.jack.bio/blog/wafflehouse</guid>
      <pubDate>Wed, 28 May 2025 15:48:37 GMT</pubDate>
    </item>
    </channel>
</rss>