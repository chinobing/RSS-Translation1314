<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：头版</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Thu, 12 Sep 2024 18:23:37 GMT</lastBuildDate>
    <item>
      <title>伯克利技术俱乐部坏了。能修复吗？</title>
      <link>https://dominicdb.substack.com/p/berkeley-tech-clubs-are-broken-can</link>
      <description><![CDATA[文章网址：https://dominicdb.substack.com/p/berkeley-tech-clubs-are-broken-can
评论网址：https://news.ycombinator.com/item?id=41523712
积分：3
评论数：0]]></description>
      <guid>https://dominicdb.substack.com/p/berkeley-tech-clubs-are-broken-can</guid>
      <pubDate>Thu, 12 Sep 2024 18:05:10 GMT</pubDate>
    </item>
    <item>
      <title>Defusedxml – 化解 XML 炸弹及其他漏洞</title>
      <link>https://github.com/tiran/defusedxml</link>
      <description><![CDATA[文章网址：https://github.com/tiran/defusedxml
评论网址：https://news.ycombinator.com/item?id=41523098
积分：14
评论数：2]]></description>
      <guid>https://github.com/tiran/defusedxml</guid>
      <pubDate>Thu, 12 Sep 2024 17:11:18 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI O1 模型</title>
      <link>https://openai.com/index/learning-to-reason-with-llms/</link>
      <description><![CDATA[文章网址：https://openai.com/index/learning-to-reason-with-llms/
评论网址：https://news.ycombinator.com/item?id=41523070
积分：469
评论数：272]]></description>
      <guid>https://openai.com/index/learning-to-reason-with-llms/</guid>
      <pubDate>Thu, 12 Sep 2024 17:08:46 GMT</pubDate>
    </item>
    <item>
      <title>Artie (YC S23) 正在招聘创始设计师</title>
      <link>https://news.ycombinator.com/item?id=41522979</link>
      <description><![CDATA[评论网址：https://news.ycombinator.com/item?id=41522979
积分：0
评论数：0]]></description>
      <guid>https://news.ycombinator.com/item?id=41522979</guid>
      <pubDate>Thu, 12 Sep 2024 17:00:51 GMT</pubDate>
    </item>
    <item>
      <title>二甲双胍减缓雄性猴子的衰老时钟</title>
      <link>https://www.cell.com/cell/abstract/S0092-8674(24)00914-0</link>
      <description><![CDATA[文章网址：https://www.cell.com/cell/abstract/S0092-8674(24)00914-0
评论网址：https://news.ycombinator.com/item?id=41522931
积分：50
评论数：14]]></description>
      <guid>https://www.cell.com/cell/abstract/S0092-8674(24)00914-0</guid>
      <pubDate>Thu, 12 Sep 2024 16:56:16 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：星系可视化</title>
      <link>https://github.com/Avicted/galaxy_visualization_raylib</link>
      <description><![CDATA[来自一个扇区的 100k 个真实（+100k 个随机）星系。使用 Raylib 进行可视化。

评论 URL：https://news.ycombinator.com/item?id=41522670
积分：14
评论数：3]]></description>
      <guid>https://github.com/Avicted/galaxy_visualization_raylib</guid>
      <pubDate>Thu, 12 Sep 2024 16:32:48 GMT</pubDate>
    </item>
    <item>
      <title>PalmOS 6.1 Cobalt 的最终版本：色彩、多媒体和多任务处理</title>
      <link>https://www.palmsource.com/palmos/cobalt.html</link>
      <description><![CDATA[文章网址：https://www.palmsource.com/palmos/cobalt.html
评论网址：https://news.ycombinator.com/item?id=41522434
积分：3
评论数：0]]></description>
      <guid>https://www.palmsource.com/palmos/cobalt.html</guid>
      <pubDate>Thu, 12 Sep 2024 16:10:12 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：iFixit 创建了新的 USB-C、可修复焊接系统</title>
      <link>https://hackaday.com/2024/09/12/review-ifixits-fixhub-may-be-the-last-soldering-iron-you-ever-buy/</link>
      <description><![CDATA[经过多年制作螺丝刀和教人们修理电子产品的经验，我们刚刚制造了我们的第一个电子工具。这是我们在坚持可修复原则的同时进行的一次旅程。我们对此感到非常兴奋。这是一款 USB-C 供电的烙铁和智能电池电源集线器。当然，超级可修复。我们的目标是让焊接变得如此简单，每个人都可以做到：
https://www.ifixit.com/fixhub我们不想制造另一个烙铁，所以我们花了数年时间研究细节并制作出符合我们严格标准的东西。这是一款高性能烙铁：它可以输出 100W 的热量，在 5 秒内达到焊接温度，并在您放下时自动冷却。加速度计会检测您何时拿起它并将其重新加热。不焊接时将烙铁保持在较低温度可以延长烙铁头的使用寿命。这款烙铁与市场上其他 USB-C 烙铁有何不同？以下是简要列表：更高功率（我们的智能熨斗为 100W，竞争对手通过 USB-C 最大功率为 60W，通过直流电源最大功率为 88W）耐热存储盖（您只需要尝试一下，它真的可以改变日常使用）

精致的用户体验保修和当地公司（我找不到 Miniware 的任何联系信息）更舒适/更自然的握持更短的烙铁头长度防缠结、耐热电缆电缆上有锁环，因此不会卡住和断开连接（我使用其他熨斗时经常发生这种情况）更直观的设置，无论是在 Power Station 还是在计算机上我们使用 Web Serial https://caniuse.com/web-serial 作为界面，它只是Chromium 浏览器支持。最令人失望的是，目前还没有移动浏览器支持它。希望这种情况很快会改变。硬件很难！这对我们来说是一段旅程。很高兴回答有关我们如何做到这一点的任何问题。原理图和维修信息可在此处在线获取：https://www.ifixit.com/Device/FixHub_Portable_Soldering_Stat...

评论网址：https://news.ycombinator.com/item?id=41521919
积分：389
评论数：171]]></description>
      <guid>https://hackaday.com/2024/09/12/review-ifixits-fixhub-may-be-the-last-soldering-iron-you-ever-buy/</guid>
      <pubDate>Thu, 12 Sep 2024 15:18:43 GMT</pubDate>
    </item>
    <item>
      <title>1913 年：希特勒、托洛茨基、铁托、弗洛伊德和斯大林都住在同一个地方</title>
      <link>https://www.bbc.com/news/magazine-21859771</link>
      <description><![CDATA[文章网址：https://www.bbc.com/news/magazine-21859771
评论网址：https://news.ycombinator.com/item?id=41521824
积分：54
评论数：23]]></description>
      <guid>https://www.bbc.com/news/magazine-21859771</guid>
      <pubDate>Thu, 12 Sep 2024 15:09:21 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：Repogather – 将相关文件复制到剪贴板以进行 LLM 编码工作流程</title>
      <link>https://github.com/gr-b/repogather</link>
      <description><![CDATA[嗨，HN，我想分享一个我制作的简单命令行工具，它加速并简化了我的 LLM 辅助编码工作流程。只要有可能，我就会尝试在实现新功能/更改时首先使用 Claude。但我发现，根据我所做的更改类型，我花了很多心思来查找和决定哪些源文件应该包含在提示中。需要单独复制/粘贴每个文件也变得有点烦人。首先，我实现了 `repogather --all`，它会不智能地将存储库中的 所有 源文件复制到剪贴板（由它们的相对文件路径分隔）。令我惊讶的是，对于不太复杂的存储库，仅此一项对于 Claude 来说通常完全可行 - 比粘贴您要更新的几个文件要好得多。但如果我必须单独复制/粘贴所有内容，我永远不会这样做。 200k 是相当多的 token！但是，一旦存储库增长到一定的复杂程度（即使它在输入 token 限制以下），我发现 Claude 可能会对代码中不同的不相关部分/概念感到困惑。如果您尝试排除与当前更改无关的逻辑，它的性能会好得多。所以我实现了 `repogather &quot;&quot;` ，例如 `repogather &quot;only files related to authentication&quot;` 。它使用带有结构化输出的 gpt-4o-mini 为每个源文件提供相关性分数（使用 `--exclude` 自动排除 .gitignore 模式、测试、配置和其他手动排除）。gpt-4o-mini 非常便宜和快速，对于我的 ~8 dev 初创公司的存储库，它只需不到 5 秒的时间，成本为 3-4 美分（使用适当的排除）。此外，您还可以在等待时观察输出流，这总是很有趣。第一次检索并不总是完美的 - 但速度很快，这允许您查看它返回的文件，并快速迭代您的命令。我发现这比我使用过的基于嵌入搜索的解决方案更令人满意，后者似乎以相当不透明的方式失败。https://github.com/gr-b/repogather如果它对您有用，请告诉我！总是喜欢谈论如何更好地将 LLM 集成到编码工作流程中。

评论网址：https://news.ycombinator.com/item?id=41521121
积分：34
评论数：20]]></description>
      <guid>https://github.com/gr-b/repogather</guid>
      <pubDate>Thu, 12 Sep 2024 14:03:59 GMT</pubDate>
    </item>
    </channel>
</rss>