<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Thu, 21 Aug 2025 09:23:54 GMT</lastBuildDate>
    <item>
      <title>澳大利亚邮政暂停运输给我们，作为“混乱”关税截止日期迫在眉睫</title>
      <link>https://www.abc.net.au/news/2025-08-21/australia-post-suspends-transit-shipping-parcels-us-trump-tariff/105680456</link>
      <description><![CDATA[文章URL： https://www.abc.net.au/news/2025-08-21/australia-post-suspends-suspends-transit-shipper-parcels-parcels-parcels-us-trump-tariff/105680456   
评论url： https://news.ycombinator.com/item?id=44970269 
点：34 
＃评论：11 ]]></description>
      <guid>https://www.abc.net.au/news/2025-08-21/australia-post-suspends-transit-shipping-parcels-us-trump-tariff/105680456</guid>
      <pubDate>Thu, 21 Aug 2025 07:56:30 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我用git替换了vector数据库以供AI内存（POC）</title>
      <link>https://github.com/Growth-Kinetics/DiffMem</link>
      <description><![CDATA[嘿，hn！我使用git而不是向量数据库构建了AI内存的概念验证。当我们只能使用GIT的内置diff/blage/“历史记录”时，我们为什么要构建复杂的矢量存储？
每个对话=一个提交
git差异显示了理解如何随着时间的流逝而发展
BM25用于搜索（无需嵌入）
LLMS从对话上下文中生成搜索查询
示例：问“我的项目如何发展？”它使用git差异来显示理解的实际变化，而不仅仅是相似性得分。这是一个非常重要的POC-到处都是粗糙的边缘，而不是准备好生产。但是它在个人使用方面非常出色。一年的对话的整个索引适用于〜100MB RAM，并带有次秒检索。很酷的部分：您可以将结帐到任何时间点，并确切地查看AI当时所知道的。完美的可重复性，人类可读的存储，您可以在需要时手动编辑记忆。 LLM编排的OpenRouter Rank-BM25。麻省理工学院许可的。希望对该方法的反馈。这是疯狂还是聪明？我想念什么会咬我？

评论url： https://news.ycombinator.com/item?id=4496966622 
点：78 
＃评论：26 ]]></description>
      <guid>https://github.com/Growth-Kinetics/DiffMem</guid>
      <pubDate>Thu, 21 Aug 2025 06:20:11 GMT</pubDate>
    </item>
    <item>
      <title>Python F-string秘籍（2022）</title>
      <link>https://fstring.help/cheat/</link>
      <description><![CDATA[文章URL： https://fstring.help/cheat/   
注释url： https://news.ycombinator.com/item?id=4496969221 
点：62 
＃评论：4 ]]></description>
      <guid>https://fstring.help/cheat/</guid>
      <pubDate>Thu, 21 Aug 2025 05:08:08 GMT</pubDate>
    </item>
    <item>
      <title>数据，对象以及我们如何陷入糟糕的设计（2018）</title>
      <link>https://www.tedinski.com/2018/01/23/data-objects-and-being-railroaded-into-misdesign.html</link>
      <description><![CDATA[文章URL： https://www.tedinski.com/2018/01/23/data-objects-and-being-railed-railed-into-misdesign.html  
注释URL： https://news.ycombinator.com/item?id=44969211 
点：50 
＃评论：11 ]]></description>
      <guid>https://www.tedinski.com/2018/01/23/data-objects-and-being-railroaded-into-misdesign.html</guid>
      <pubDate>Thu, 21 Aug 2025 05:06:05 GMT</pubDate>
    </item>
    <item>
      <title>艺术中模式的乐趣</title>
      <link>https://thereader.mitpress.mit.edu/why-repetition-in-art-pleases-the-brain/</link>
      <description><![CDATA[文章URL： https://thereader.mitpress.mit.mit.mit.mit.met.edu/why-repetition-repetition-repetition-in-repetition-in-repetition-in-art-art-pleases-in-art-pleases-the-pleases-the-brain-the-pleain-the-brain/ 注释url： https://news.ycombinator.com/item?id=449668883 
点：33 
＃评论：5 ]]></description>
      <guid>https://thereader.mitpress.mit.edu/why-repetition-in-art-pleases-the-brain/</guid>
      <pubDate>Thu, 21 Aug 2025 03:53:47 GMT</pubDate>
    </item>
    <item>
      <title>腐烂西红柿的统计分析</title>
      <link>https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable</link>
      <description><![CDATA[文章URL： https://www.statsignificant.com/p/is-rotten-tomotten-tomatot-tomato-tomatoes-stomatoes-stomato-s-s-still-col-s-s-still-cle-------
注释url： https://news.ycombinator.com/item?id=449667796 
点：137 
＃评论：60 ]]></description>
      <guid>https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable</guid>
      <pubDate>Thu, 21 Aug 2025 00:10:07 GMT</pubDate>
    </item>
    <item>
      <title>简单</title>
      <link>https://github.com/jamesplotts/simpleide</link>
      <description><![CDATA[文章URL： https://github.com/jamesplotts/jamesplotts/simpleide  
注释URL： https://news.ycombinator.com/item?id=44967505 
点：72 
＃评论：31 ]]></description>
      <guid>https://github.com/jamesplotts/simpleide</guid>
      <pubDate>Wed, 20 Aug 2025 23:15:55 GMT</pubDate>
    </item>
    <item>
      <title>代码审查可以更好</title>
      <link>https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/</link>
      <description><![CDATA[文章url： https://tigerbeetle.com/blog/2025-08-08-08-08-08-04-code-review-review-review-code-review-can-revcan-bebetter/
评论url： https://news.ycombinator.com/item?id=44967469 
点：267 
＃评论：143 ]]></description>
      <guid>https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/</guid>
      <pubDate>Wed, 20 Aug 2025 23:10:37 GMT</pubDate>
    </item>
    <item>
      <title>Coris（YC S22）正在招聘</title>
      <link>https://www.ycombinator.com/companies/coris/jobs/rqO40yy-ai-engineer</link>
      <description><![CDATA[Article URL: https://www.ycombinator.com/companies/coris/jobs/rqO40yy-ai-engineer
注释url： https://news.ycombinator.com/item？id=4496664408 
点：0 
＃评论：0 ]]></description>
      <guid>https://www.ycombinator.com/companies/coris/jobs/rqO40yy-ai-engineer</guid>
      <pubDate>Wed, 20 Aug 2025 21:00:14 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：Plutoprint  - 与Python一起从HTML生成PDF和PNG</title>
      <link>https://github.com/plutoprint/plutoprint</link>
      <description><![CDATA[大家好，我建造了plutoprint，因为我需要一种简单的方法来直接从HTML使用Python生成漂亮的PDF和图像。我尝试过的大多数工具都会感到沉重，棘手的设置或产生看起来不佳的结果，因此我想要一些轻巧，现代和快速的东西。 Plutoprint建立在Plutobook的渲染引擎的顶部，该引擎是专为分类媒体设计的，然后用Python API包裹，使将HTML或XML变成CRISP PDFS和PNGS变得容易。我已将其用于发票，报告，门票甚至快照之类的东西，并且它也可以与Matplotlib集成，以直接将图表直接渲染到文档中。，我很高兴听到您的想法。如果您曾经不得不用HTML生成PDF或图像来搏斗，我希望这感觉像是一个更平稳的选择。反馈，想法甚至只是印象都非常欢迎，我很想了解plutoprint对您更有用。

注释url： https://news.ycombinator.com/item？id=4496666170 
点：120 
＃评论：27 ]]></description>
      <guid>https://github.com/plutoprint/plutoprint</guid>
      <pubDate>Wed, 20 Aug 2025 20:37:58 GMT</pubDate>
    </item>
    </channel>
</rss>