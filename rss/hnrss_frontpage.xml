<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：头版</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Fri, 04 Oct 2024 21:15:47 GMT</lastBuildDate>
    <item>
      <title>Carma (YC W24) 正在招聘软件工程师，为车队提供当日汽车维修服务</title>
      <link>https://news.ycombinator.com/item?id=41745521</link>
      <description><![CDATA[评论网址：https://news.ycombinator.com/item?id=41745521
积分：0
评论数：0]]></description>
      <guid>https://news.ycombinator.com/item?id=41745521</guid>
      <pubDate>Fri, 04 Oct 2024 21:00:18 GMT</pubDate>
    </item>
    <item>
      <title>维基百科和维基数据作为分析美国化的来源</title>
      <link>https://kie.ue.poznan.pl/en/news/wikimania-2024-wikipedia-and-wikidata-as-sources-for-analyzing-americanization/</link>
      <description><![CDATA[文章网址：https://kie.ue.poznan.pl/en/news/wikimania-2024-wikipedia-and-wikidata-as-sources-for-analyzing-americanization/
评论网址：https://news.ycombinator.com/item?id=41745400
积分：3
评论数：0]]></description>
      <guid>https://kie.ue.poznan.pl/en/news/wikimania-2024-wikipedia-and-wikidata-as-sources-for-analyzing-americanization/</guid>
      <pubDate>Fri, 04 Oct 2024 20:43:55 GMT</pubDate>
    </item>
    <item>
      <title>活动人士赢得针对 Meta 的隐私诉讼，涉及性取向个人数据</title>
      <link>https://apnews.com/article/facebook-meta-schrems-privacy-80fd4e6c59f48a3b583d6665af3ede86</link>
      <description><![CDATA[文章网址：https://apnews.com/article/facebook-meta-schrems-privacy-80fd4e6c59f48a3b583d6665af3ede86
评论网址：https://news.ycombinator.com/item?id=41745181
积分：4
评论数：0]]></description>
      <guid>https://apnews.com/article/facebook-meta-schrems-privacy-80fd4e6c59f48a3b583d6665af3ede86</guid>
      <pubDate>Fri, 04 Oct 2024 20:17:13 GMT</pubDate>
    </item>
    <item>
      <title>像 Pong 这样的 70 年代版本的游戏是如何在没有可编程计算机的情况下开发出来的？</title>
      <link>https://retrocomputing.stackexchange.com/questions/30698/how-were-the-70s-versions-of-pong-and-similar-games-implemented-without-a-progra</link>
      <description><![CDATA[文章网址：https://retrocomputing.stackexchange.com/questions/30698/how-were-the-70s-versions-of-pong-and-similar-games-implemented-without-a-progra
评论网址：https://news.ycombinator.com/item?id=41745032
积分：13
评论数：3]]></description>
      <guid>https://retrocomputing.stackexchange.com/questions/30698/how-were-the-70s-versions-of-pong-and-similar-games-implemented-without-a-progra</guid>
      <pubDate>Fri, 04 Oct 2024 19:57:38 GMT</pubDate>
    </item>
    <item>
      <title>《文明 VII》建议使用 16 核和 32GB RAM 进行 4K 游戏</title>
      <link>https://www.tomshardware.com/video-games/pc-gaming/civilization-vii-recommends-16-cores-and-32gb-ram-for-4k-gameplay-rtx-4070-or-rx-7800xt-is-the-minimum</link>
      <description><![CDATA[文章网址：https://www.tomshardware.com/video-games/pc-gaming/civilization-vii-recommends-16-cores-and-32gb-ram-for-4k-gameplay-rtx-4070-or-rx-7800xt-is-the-minimum
评论网址：https://news.ycombinator.com/item?id=41744915
积分：30
评论数：21]]></description>
      <guid>https://www.tomshardware.com/video-games/pc-gaming/civilization-vii-recommends-16-cores-and-32gb-ram-for-4k-gameplay-rtx-4070-or-rx-7800xt-is-the-minimum</guid>
      <pubDate>Fri, 04 Oct 2024 19:43:13 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：具有批量删除和个人数据移除功能的 Gmail 退订工具</title>
      <link>https://againstdata.com</link>
      <description><![CDATA[文章网址：https://againstdata.com
评论网址：https://news.ycombinator.com/item?id=41744774
积分：15
评论数：5]]></description>
      <guid>https://againstdata.com</guid>
      <pubDate>Fri, 04 Oct 2024 19:25:22 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：FFmpeg-over-IP – 连接到远程 FFmpeg 服务器</title>
      <link>https://github.com/steelbrain/ffmpeg-over-ip</link>
      <description><![CDATA[亲爱的 HN，我很高兴向大家展示一个个人项目。它对我的家庭实验室帮助很大，我希望它也能帮助你！ffmpeg-over-ip 有两个组件，一个服务器和一个客户端。你可以在可以访问 GPU 和本地安装的 ffmpeg 版本的环境中运行服务器，客户端只需要通过网络访问服务器，而不需要本地 GPU 或 ffmpeg。客户端和服务器都需要一个共享文件系统才能工作（这样服务器就可以将输出写入其中，而客户端可以从中读取）。在我的用例中，如果您的 (GPU) 服务器是 Windows 机器，则 smb 效果很好，而 nfs 对于 Linux 设置则效果很好。此实用程序在许多情况下都很有用：- 您发现通过 (v)GPU 传递到虚拟机很复杂- 您想在多个虚拟机中使用相同的 GPU 来运行 ffmpeg- 您的服务器的 GPU 较弱，因此您想使用游戏机的 GPU- 您的 GPU 驱动程序在一个操作系统中不如另一个操作系统好（AMD RX6400 在 Linux 上从未为我工作过，但在 Windows 上却可以）我在 Github 包 README 中发布了一些说明，如果有任何不清楚的地方，请告诉我，我会尽力帮助您！这是链接：https://github.com/steelbrain/ffmpeg-over-ip

评论网址：https://news.ycombinator.com/item?id=41743780
积分：39
评论数：17]]></description>
      <guid>https://github.com/steelbrain/ffmpeg-over-ip</guid>
      <pubDate>Fri, 04 Oct 2024 17:49:01 GMT</pubDate>
    </item>
    <item>
      <title>展示 HN：OpenAI 用于高级语音的开源框架</title>
      <link>https://github.com/livekit/agents</link>
      <description><![CDATA[嗨，HN，过去几个月我们一直在与 OpenAI 合作开发新的 Realtime API。目标是让每个人都能访问 ChatGPT 应用中支持 Advanced Voice 的同一堆栈。其工作原理如下：
- ChatGPT 应用中的 LiveKit 客户端 SDK 会捕获用户的语音
- 他们的语音通过 WebRTC 传输到 OpenAI 的语音代理
- 代理通过 websocket 将语音提示转发到 GPT-4o
- GPT-4o 运行推理并将语音数据包（通过 websocket）传输回代理
- 代理使用 WebRTC 将生成的语音转发回用户的设备OpenAI 推出的 Realtime API 是 GPT-4o 的 websocket 接口。此后端框架涵盖语音代理部分。除了具有函数调用等附加逻辑之外，代理从根本上将 WebRTC 代理到 websocket。原因是 websocket 不是客户端-服务器通信的最佳选择。绝大多数数据包丢失发生在服务器和客户端设备之间，并且 websocket 不提供对 WiFi 或蜂窝等有损网络环境的编程控制或干预。数据包丢失会导致更高的延迟和断断续续或混乱的音频。

评论网址：https://news.ycombinator.com/item?id=41743327
积分：15
评论数：2]]></description>
      <guid>https://github.com/livekit/agents</guid>
      <pubDate>Fri, 04 Oct 2024 17:01:04 GMT</pubDate>
    </item>
    <item>
      <title>12 个月的普通话</title>
      <link>https://isaak.net/mandarin/</link>
      <description><![CDATA[文章网址：https://isaak.net/mandarin/
评论网址：https://news.ycombinator.com/item?id=41742432
积分：244
评论数：132]]></description>
      <guid>https://isaak.net/mandarin/</guid>
      <pubDate>Fri, 04 Oct 2024 15:28:51 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：One – 一个统一 Web、原生和本地优先的全新 React 框架</title>
      <link>https://onestack.dev</link>
      <description><![CDATA[嗨，HN，我是 Nate，Tamagui 的创建者。One 是一个 React 框架，它以不同的方式完成两项任务，希望简化我们构建网站和应用的方式：1. 它通过使 Vite 能够服务 RN，将 React Native 和 React web 与类型文件系统路由统一起来。这让您可以更简单地为跨平台应用共享（或分散）代码。2. 我们与 Zero（https://zerosync.dev）合作，使本地优先运行良好。我们一直在 One 中构建解决方案，使 Zero 支持服务器渲染，没有瀑布，并具有无缝的服务器/客户端切换。---老实说 - 我有点犹豫是否在这里发布 One。HN 对前端/框架真的很失望。我明白。我们共同把事情复杂化了。这就是我决定建立 One 的原因。我喜欢 Rails，它让我这个年轻的开发人员终于能够实现比以前更雄心勃勃的项目。我也喜欢 Meteor 的承诺（而不是实现）——它感觉就像一个明确的未来，我想只是有点太早了（而且有点范围太广了）。我在 Uniswap 工作并建立了 Tamagui，因此花了很多时间构建共享代码的跨平台应用程序。Uniswap 建立在 Tamagui 上，我认为这证明了你可以在共享大量代码的同时做出真正高质量的用户体验——但这非常困难，需要一个庞大的团队。我对 One 的目标是让现在可能但很难的事情变得更容易。我认为实现这一目标的途径是本地优先，因为它使构建超响应应用程序变得非常简单，而 Zero 是第一个真正实现这一点的库，它不会使您的包膨胀或有非常有限的约束。我碰巧住在我们夏威夷小镇 Zero 创始人之一 Aaron 的街对面。过去几年，我们经常谈论 Zero，我发现他始终选择“更难但更好”的道路来构建它，这真的很令人钦佩。它真的变成了一件不可思议的事情，这让我决定真正推出 One，当时它更像是一个实验。我看到了很多潜在的批评 - 我们是否需要另一个框架，这太闪亮和虚幻了，这只是更多的复杂性和抽象性，等等。如果有这些评论，我很乐意回复。我只是在构建一个我一直想要的东西。足够有主见，让我可以像 Rails 一样快速行动，但依靠 Zero 团队的出色工作，这样我们就不会像 Meteor 那样范围扩大。老实说，黑客入侵真的很有趣。

评论网址：https://news.ycombinator.com/item?id=41742278
积分：263
评论数：74]]></description>
      <guid>https://onestack.dev</guid>
      <pubDate>Fri, 04 Oct 2024 15:15:24 GMT</pubDate>
    </item>
    </channel>
</rss>