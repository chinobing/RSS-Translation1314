<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Fri, 06 Jun 2025 01:28:24 GMT</lastBuildDate>
    <item>
      <title>人类联合创始人在切割蜿蜒曲折的情况下</title>
      <link>https://techcrunch.com/2025/06/05/anthropic-co-founder-on-cutting-access-to-windsurf-it-would-be-odd-for-us-to-sell-claude-to-openai/</link>
      <description><![CDATA[文章URL： https://techcrunch.com/2025/06/05/anththropic-co-founder-on-coutting-cutting-access-to-windsurf-it-windsurf-it-be-be-be-be-be-be-us-us-us-to-sell-claude-claude-claude-to-openai/   
注释URL： https://news.ycombinator.com/item?id=444196807 
点：33 
＃评论：11 ]]></description>
      <guid>https://techcrunch.com/2025/06/05/anthropic-co-founder-on-cutting-access-to-windsurf-it-would-be-odd-for-us-to-sell-claude-to-openai/</guid>
      <pubDate>Fri, 06 Jun 2025 00:24:43 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：Lambduck，功能性编程Brainfuck</title>
      <link>https://imjakingit.github.io/lambduck/</link>
      <description><![CDATA[如果Brainfuck不像C，更像是方案怎么办？解释器插入非常糟糕。它不是很快，它不是很好，而且可能不是很正确。但是，也许您可​​以用它来编写一些模糊的有趣程序！ （λx。f（x x））（λx。f（x x））
 
写为：   \ \&#39;\`1`0 0 0 \`1`0 0 0    

评论url： https://news.ycombinator.com/item？id=444196589 
点：6 
＃评论：3 ]]></description>
      <guid>https://imjakingit.github.io/lambduck/</guid>
      <pubDate>Thu, 05 Jun 2025 23:29:35 GMT</pubDate>
    </item>
    <item>
      <title>我不记得我的生活，很好</title>
      <link>https://aethermug.com/posts/i-do-not-remember-my-life-and-it-s-fine</link>
      <description><![CDATA[文章url：注释url： https://news.ycombinator.com/item？id=444196576 
点：35 
＃评论：11 ]]></description>
      <guid>https://aethermug.com/posts/i-do-not-remember-my-life-and-it-s-fine</guid>
      <pubDate>Thu, 05 Jun 2025 23:26:19 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：Ask-Human-MCP  - 零孔子人类在环境中孵化以停止幻觉</title>
      <link>https://masonyarbrough.com/blog/ask-human</link>
      <description><![CDATA[While building my startup i kept running into the issue where ai agents in cursor create endpoints or code that shouldn&#39;t exist, hallucinates strings, or just don&#39;t understand the code.ask-human-mcp pauses your agent whenever it’s stuck, logs a question into ask_human.md in your root directory with answer: PENDING, and then resumes as soon as you fill in the correct answer.the pain:your代理尖叫着一个不存在的终点
它做出了自信的假设，您花了几个小时调试虚假潜在客户修复程序： ask-human-MCP为您的经纪人带来了逃生舱口。当不确定时，它将称为ask_human（），将问题写入ask_human.md，然后等待。您交换答案：待定真实答案，并且它会继续进行。某些功能：  - 零配置：pip install ask ask-human-mcp +一行。
 - 跨平台：在MACOS，Linux和Windows上工作 - 没有额外的服务器或Webhooks。
-MARKDOWN Q \＆amp; a：代理商致电等待ask_human（），问题降落在ask_human.md中，答案：待处理。您写答案，代理人回来
 - 文件锁定与旋转：防止损坏的文件，限制待处理问题，自动旋转时ask_human.md命中〜50 mb  QuickStart  pip pip pip安装ask-human-mcp
Ask-Human-MCP-Help 添加到.Cursor/McP.JSON并重新启动：
{
  “ McPservers”：{
    “ Ask-Human”：{“命令”：“ Ask-Human-MCP”}
  }
} 现在任何呼叫如下：答案=等待ask_human（
  “我们使用哪个端点？”
  “ auth.js中的建筑登录表”
）创建： ### q8c4f1e2a
TS：2025-01-15 14:30
问：我们使用哪个端点？
CTX：auth.js中的建筑登录表格
答案：待处理只需替换答案：待处理使用真实端点（例如post/api/v2/auth/login`），您的代理继续。链接： github-&gt;  https://github.com/masony817/ask-human-mcp   反馈：我是Kallro的Mason A 19yo Solo-founder。很高兴听到您发现的任何错误，功能请求或怪异的边缘案例 - 发表评论或打开问题！
给我买咖啡 - &gt; coff.ee/masonyarbrough 

注释URL： https://news.ycombinator.com/item?id=444196433 
点：21 
＃评论：13 ]]></description>
      <guid>https://masonyarbrough.com/blog/ask-human</guid>
      <pubDate>Thu, 05 Jun 2025 22:57:16 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：克劳德作曲家</title>
      <link>https://github.com/possibilities/claude-composer</link>
      <description><![CDATA[中心功能是一种“ Yolo模式”之类的东西，但对您的感受的细粒度控制。还可以轻松使用工具和权限的“预设”。让我知道您是否有任何疑问，并随时在x上与我联系 https：// https://x.com/possibilities 

注释url： https://news.ycombinator.com/item?id=444196417 
点：41 
＃评论：10 ]]></description>
      <guid>https://github.com/possibilities/claude-composer</guid>
      <pubDate>Thu, 05 Jun 2025 22:53:21 GMT</pubDate>
    </item>
    <item>
      <title>机器学习：生物学的母语</title>
      <link>https://decodingbiology.substack.com/p/machine-learning-the-native-language</link>
      <description><![CDATA[文章url： https://decodingbiology.substack.com/p/machine-learning-landing-native-native-native-native-native-native-native-native-langue  
注释URL： https://news.ycombinator.com/item?id=44196410 
点：13 
＃评论：3 ]]></description>
      <guid>https://decodingbiology.substack.com/p/machine-learning-the-native-language</guid>
      <pubDate>Thu, 05 Jun 2025 22:51:52 GMT</pubDate>
    </item>
    <item>
      <title>开发人员需要了解的有关SICIM的知识</title>
      <link>https://tesseral.com/blog/what-a-developer-needs-to-know-about-scim</link>
      <description><![CDATA[文章url： https://tesseral.com/blog/what-a-abblog/what-a-a-developer-neveveling-to-to-to-to-to-to-needs-to-needs-to-need-scim-know-about-know-scim-scim-scim   
注释url： https://news.ycombinator.com/item?id=444196393 
点：17 
＃评论：6 ]]></description>
      <guid>https://tesseral.com/blog/what-a-developer-needs-to-know-about-scim</guid>
      <pubDate>Thu, 05 Jun 2025 22:48:21 GMT</pubDate>
    </item>
    <item>
      <title>显示HN：字符串通量 - 简化开发人员的日常字符串转换</title>
      <link>https://stringflux.io</link>
      <description><![CDATA[ i构建 https://stringflux.io/ 使日常的弦线转换稍微降低疼痛。它类似于Cyber​​chef，从某种意义上说，它支持多个字符串操作，但是基于您的输入的更清洁，更集中的UI和智能建议。您还可以链接转换，例如：Decode base64字符串，该字符串是从Minified JSON→MAINIFIED JSON→然后是JSON（然后是JSON格式（Pretty-Protess-Print））。当处理复杂或嵌套的字符串（例如编码的API响应或日志数据）时，这是有帮助的href =“ https://github.com/stringflux/stringflux”&gt; https://github.com/stringflux/stringflux/stringflux  很想听听您的想法和反馈！

注释URL： https://news.ycombinator.com/item？id=44196211 
点：6 
＃评论：2 ]]></description>
      <guid>https://stringflux.io</guid>
      <pubDate>Thu, 05 Jun 2025 22:05:43 GMT</pubDate>
    </item>
    <item>
      <title>Tokasaurus：用于高通量工作负载的LLM推理引擎</title>
      <link>https://scalingintelligence.stanford.edu/blogs/tokasaurus/</link>
      <description><![CDATA[文章URL： https://scalingintelligence.stanford.stanford.edu/blogs/tokasaurus/tokasaurus/ 
注释URL： https://news.ycombinator.com/item?id=444195961 
点：91 
＃评论：7 ]]></description>
      <guid>https://scalingintelligence.stanford.edu/blogs/tokasaurus/</guid>
      <pubDate>Thu, 05 Jun 2025 21:27:07 GMT</pubDate>
    </item>
    <item>
      <title>APL解释器 - 用Haskell（2024）编写的APL的实现</title>
      <link>https://scharenbroch.dev/projects/apl-interpreter/</link>
      <description><![CDATA[文章url： https://scharenbroch.dev/project/project/projects/apl-interpreter/ 
评论url： https://news.ycombinator.com/item？id=444195931 
点：51 
＃评论：25 ]]></description>
      <guid>https://scharenbroch.dev/projects/apl-interpreter/</guid>
      <pubDate>Thu, 05 Jun 2025 21:22:24 GMT</pubDate>
    </item>
    </channel>
</rss>