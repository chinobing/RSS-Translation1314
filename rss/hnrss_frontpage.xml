<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：头版</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Thu, 23 Jan 2025 18:22:47 GMT</lastBuildDate>
    <item>
      <title>OpenAI 计算机使用代理</title>
      <link>https://openai.com/index/computer-using-agent/</link>
      <description><![CDATA[文章网址：https://openai.com/index/computer-using-agent/
评论网址：https://news.ycombinator.com/item?id=42806390
积分：5
评论数：0]]></description>
      <guid>https://openai.com/index/computer-using-agent/</guid>
      <pubDate>Thu, 23 Jan 2025 18:13:24 GMT</pubDate>
    </item>
    <item>
      <title>Llama.vim – 本地 LLM 辅助文本完成</title>
      <link>https://github.com/ggml-org/llama.vim</link>
      <description><![CDATA[文章网址：https://github.com/ggml-org/llama.vim
评论网址：https://news.ycombinator.com/item?id=42806328
积分：5
评论数：0]]></description>
      <guid>https://github.com/ggml-org/llama.vim</guid>
      <pubDate>Thu, 23 Jan 2025 18:06:42 GMT</pubDate>
    </item>
    <item>
      <title>Operator 简介</title>
      <link>https://openai.com/index/introducing-operator/</link>
      <description><![CDATA[文章网址：https://openai.com/index/introducing-operator/
评论网址：https://news.ycombinator.com/item?id=42806301
积分：21
评论数：4]]></description>
      <guid>https://openai.com/index/introducing-operator/</guid>
      <pubDate>Thu, 23 Jan 2025 18:03:40 GMT</pubDate>
    </item>
    <item>
      <title>乔治·R·R·马丁与他人合著了一篇物理学论文</title>
      <link>https://arstechnica.com/science/2025/01/george-r-r-martin-has-co-authored-a-physics-paper/</link>
      <description><![CDATA[文章网址：https://arstechnica.com/science/2025/01/george-r-r-martin-has-co-authored-a-physics-paper/
评论网址：https://news.ycombinator.com/item?id=42806102
积分：34
评论数：23]]></description>
      <guid>https://arstechnica.com/science/2025/01/george-r-r-martin-has-co-authored-a-physics-paper/</guid>
      <pubDate>Thu, 23 Jan 2025 17:44:03 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：混音列表</title>
      <link>https://www.mixlist.org/</link>
      <description><![CDATA[构建了一个 Web 应用程序，使用基于艺术家流派（一个或多个）的 K 均值聚类来自动将 Spotify 喜欢的歌曲组织到播放列表中。干净的用户界面。您可能需要单击几次刷新播放列表才能获得您想要的内容。欢迎发表评论。谢谢！

评论网址：https://news.ycombinator.com/item?id=42806069
积分：13
评论数：5]]></description>
      <guid>https://www.mixlist.org/</guid>
      <pubDate>Thu, 23 Jan 2025 17:41:30 GMT</pubDate>
    </item>
    <item>
      <title>Intrinsic (YC W23) 正在招聘</title>
      <link>https://news.ycombinator.com/item?id=42805699</link>
      <description><![CDATA[评论网址：https://news.ycombinator.com/item?id=42805699
积分：0
评论数：0]]></description>
      <guid>https://news.ycombinator.com/item?id=42805699</guid>
      <pubDate>Thu, 23 Jan 2025 17:00:58 GMT</pubDate>
    </item>
    <item>
      <title>TMSU：用于应用标签和查看虚拟标签文件系统的命令行工具</title>
      <link>https://tmsu.org/</link>
      <description><![CDATA[文章网址：https://tmsu.org/
评论网址：https://news.ycombinator.com/item?id=42805431
积分：31
评论数：9]]></description>
      <guid>https://tmsu.org/</guid>
      <pubDate>Thu, 23 Jan 2025 16:29:18 GMT</pubDate>
    </item>
    <item>
      <title>处理文件很困难 (2019)</title>
      <link>https://danluu.com/deconstruct-files/</link>
      <description><![CDATA[文章网址：https://danluu.com/deconstruct-files/
评论网址：https://news.ycombinator.com/item?id=42805425
积分：46
评论数：9]]></description>
      <guid>https://danluu.com/deconstruct-files/</guid>
      <pubDate>Thu, 23 Jan 2025 16:28:34 GMT</pubDate>
    </item>
    <item>
      <title>Orbit Spirograph（2019）</title>
      <link>https://www.redblobgames.com/x/1903-orbit-spirograph/</link>
      <description><![CDATA[文章网址：https://www.redblobgames.com/x/1903-orbit-spirograph/
评论网址：https://news.ycombinator.com/item?id=42805421
积分：25
评论数：2]]></description>
      <guid>https://www.redblobgames.com/x/1903-orbit-spirograph/</guid>
      <pubDate>Thu, 23 Jan 2025 16:28:07 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：libmodulor – 用于构建多平台应用程序的自定 TS 库</title>
      <link>https://github.com/c100k/libmodulor</link>
      <description><![CDATA[最初，我是为了自己的项目而开始构建这个。主要目标是定义一个统一的“蓝图”，允许我使用相同的代码开发多平台应用程序，而无需代码生成。我希望能够在 Web、桌面、CLI、服务器、移动设备等平台上开发相同的功能......我已经能够通过依赖 TypeScript、4 层架构（UseCase =&gt; App =&gt; Product =&gt; Target）和依赖注入来实现这一点。只要开发出好的适配器，这种机制就允许我使用我想要的任何技术堆栈。例如，我有预先构建的：node express（服务器）、next.js（服务器）、node hono（alpha 版服务器）、node parseArgs（CLI）、node stricli（CLI）、react-web-pure（没有 CSS 的 Web）、react-native（移动）、node mcp server（alpha 版 anthropic MCP）等。数据存储也是如此：Postgres、SQLite、txt 文件等等。它还带有自动测试和自动文档。我是不是重新发明了轮子？可能在某些方面。
它是否太抽象了？可能也一样。但我喜欢模块化和可移植性的想法。这就是为什么它并不适合所有人，也不适合所有类型的项目。如果你喜欢测试新东西，试一试，有需要的话可以随时联系我，我很乐意提供帮助。我知道文档还不是最先进的。我想专注于“入门”指南，以便快速概述，而不是深入细节。最好的，

评论网址：https://news.ycombinator.com/item?id=42804961
积分：28
评论数：13]]></description>
      <guid>https://github.com/c100k/libmodulor</guid>
      <pubDate>Thu, 23 Jan 2025 15:30:12 GMT</pubDate>
    </item>
    </channel>
</rss>