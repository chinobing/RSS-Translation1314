<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Tue, 16 Sep 2025 12:38:09 GMT</lastBuildDate>
    <item>
      <title>联邦调查局无法让我的丈夫解密他的tor节点，所以他被判入狱3年</title>
      <link>https://old.reddit.com/r/TOR/comments/1ni5drm/the_fbi_couldnt_get_my_husband_to_decrypt_his_tor/</link>
      <description><![CDATA[文章URL： https://old.reddit.com/r/tor/comments/1ni5drm/the_fbi_couldnt_get_my_my_husband_to_decrypt_his_tor/  
注释URL： https://news.ycombinator.com/item?id=45261163 
点：12 
＃评论：2 ]]></description>
      <guid>https://old.reddit.com/r/TOR/comments/1ni5drm/the_fbi_couldnt_get_my_husband_to_decrypt_his_tor/</guid>
      <pubDate>Tue, 16 Sep 2025 12:10:49 GMT</pubDate>
    </item>
    <item>
      <title>罗伯特·雷德福（Robert Redford）去世了</title>
      <link>https://www.nytimes.com/2025/09/16/movies/robert-redford-dead.html</link>
      <description><![CDATA[文章url： https://www.nytimes.com/2025/2025/09/09/16/16/16/movies/movies/movies/robert-redford-dead.htead.htead.html 注释URL： https://news.ycombinator.com/item？id=45261159 
点：5 
＃评论：1 ]]></description>
      <guid>https://www.nytimes.com/2025/09/16/movies/robert-redford-dead.html</guid>
      <pubDate>Tue, 16 Sep 2025 12:10:31 GMT</pubDate>
    </item>
    <item>
      <title>问HN：通才，您什么时候对任何特定主题说“我足够了解”？</title>
      <link>https://news.ycombinator.com/item?id=45260969</link>
      <description><![CDATA[这个想法是通才对所有事物的了解很多，何时将其传递给主题专家。在2025年，技术中的一切都在一分钟内改变了，我意识到我需要对任何特定主题的深入限制设定界限。但是我不确定如何。特别是如果我不想随着事情的不断发展而被抛在后面。好奇其他人是如何处理的？

注释url： https://news.ycombinator.com/item?id=45260969 
点：3 
＃评论：4 ]]></description>
      <guid>https://news.ycombinator.com/item?id=45260969</guid>
      <pubDate>Tue, 16 Sep 2025 11:51:18 GMT</pubDate>
    </item>
    <item>
      <title>自我传播NPM恶意软件妥协40多个包裹</title>
      <link>https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised</link>
      <description><![CDATA[Article URL: https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised
注释url： https://news.ycombinator.com/item?id=45260741 
点：105 
＃评论：92 ]]></description>
      <guid>https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised</guid>
      <pubDate>Tue, 16 Sep 2025 11:22:03 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：PyProc  - 从无CGO或微服务的GO中拨打Python</title>
      <link>https://github.com/YuminosukeSato/pyproc</link>
      <description><![CDATA[ hi hn！我构建了 *pyproc *，以便像本地功能一样呼叫python  -  *没有CGO，也没有单独的微服务 *。它在同一主机/pod上运行了一系列Python的工作过程，并讨论*Unix域插座*，因此您会在GIL。
*避免使用单独的Python服务的网络啤酒花，服务发现和OPS负担。*快速尝试（\ 〜5分钟）* go（app）：``````````````
去获取github.com/yuminosukesato/pyproc@latest
```` python（Worker）：````
PIP安装PyProc-worker
````最小工人（python）：````
从pyproc_worker导入曝光，run_worker
@暴露
def预测（req）：
    返回{“结果”：req [value&#39;] * 2}
如果__name__ ==“ __ -main __”：
    run_worker（）
````从GO：``````&#39;&#39;&#39;&#39;
进口 （
  “语境”
  “ FMT”
  “ github.com/yuminosukesato/pyproc/pkg/pyproc”
）
func main（）{
  池，_：= pyproc.newpool（pyproc.pooloptions {
    config：pyproc.poolconfig {工人：4，maxinflight：10}，
    WorkerConfig：pyproc.workerConfig {socketPath：“/tmp/pyproc.sock”，pythonexec：“ python3”，workerscript：“ worker.py”}，
  }，nil）
  _ = pool.start（context.background（））
  defer pool.shutdown（context.background（））
  var out map [string] any
  _ = pool.call（context.background（），“预测”，映射[string]任何{“ value”：42}，＆amp; out）
  fmt.println（out [“结果”]）// 84
}
````*范围 /限制**仅宿主 / pod（uds）。支持Linux/MacOS；尚未名为管道的窗户。
*最适合要求/响应有效载荷≲\ 〜100 kb json; GPU编排和交叉主机服务的范围不超出范围。您的数字会有所不同。*包括**纯Go客户端（无CGO），Python Worker Lib，Pool，Health Checks，“优美重新启动”和“示例”。*docs＆code* *redme，design/ops/op/op/op/op/op/op/op/ops/security，pkg.go.go.dev： https://github.com/yuminosukesato/pyproc ]（*欢迎反馈**API人体工程学，负载下的故障模式以及编解码器/传输的优先级（例如，箭头IPC，grpc-over-uds）。 ------  ----   -    -   详细信息：详细信息：project＆doce hardme and docs and docs。 href =“ https://github.com/yuminosukesato/pyproc” rel =“ nofollow”&gt; https://github.com/yuminosukesukesato/pyproc “ github -yuminosukesukesukesato/pyproc processin“ 

评论url： https://news.ycombinator.com/item?id=45257929 
点：27 
＃评论：7 ]]></description>
      <guid>https://github.com/YuminosukeSato/pyproc</guid>
      <pubDate>Tue, 16 Sep 2025 04:08:00 GMT</pubDate>
    </item>
    <item>
      <title>在用户界面中的“您的”与“我的”</title>
      <link>https://adamsilver.io/blog/your-vs-my-in-user-interfaces/</link>
      <description><![CDATA[文章URL： https://adamsilver.io/blog/blog/your-your-your-your-vs-my-in-in--user-in--user-interfaces/    
评论url： https://news.ycombinator.com/item?id=45257627 
点：260 
＃评论：117 ]]></description>
      <guid>https://adamsilver.io/blog/your-vs-my-in-user-interfaces/</guid>
      <pubDate>Tue, 16 Sep 2025 03:05:53 GMT</pubDate>
    </item>
    <item>
      <title>Linux手机现在比以往任何时候都重要</title>
      <link>https://feddit.org/post/18353777</link>
      <description><![CDATA[文章URL： https://feddit.org/post/post/18353777   
注释URL： https://news.ycombinator.com/item?id=452566651 
点：575 
＃评论：344 ]]></description>
      <guid>https://feddit.org/post/18353777</guid>
      <pubDate>Tue, 16 Sep 2025 00:33:12 GMT</pubDate>
    </item>
    <item>
      <title>我觉得苹果已经失去了与我和其他长期客户的一致性</title>
      <link>https://morrick.me/archives/10137</link>
      <description><![CDATA[文章URL： https://morrick.me/archives/10137   
评论url： https://news.ycombinator.com/item?id=45256577 
点：391 
＃评论：376 ]]></description>
      <guid>https://morrick.me/archives/10137</guid>
      <pubDate>Tue, 16 Sep 2025 00:20:59 GMT</pubDate>
    </item>
    <item>
      <title>为什么我们继续倾向于复杂性？</title>
      <link>https://kyrylo.org/software/2025/08/21/why-do-software-developers-love-complexity.html</link>
      <description><![CDATA[文章URL：https://kyrylo.org/software/2025/08/21/why-do-software-developers-love-complexity.html
注释URL： https://news.ycombinator.com/item?id=45256043 
点：106 
＃评论：139 ]]></description>
      <guid>https://kyrylo.org/software/2025/08/21/why-do-software-developers-love-complexity.html</guid>
      <pubDate>Mon, 15 Sep 2025 23:02:31 GMT</pubDate>
    </item>
    <item>
      <title>威廉·吉布森（William Gibson）读神经法（2004年）</title>
      <link>http://bearcave.com/bookrev/neuromancer/neuromancer_audio.html</link>
      <description><![CDATA[文章url： http://bearcave.com/bookrev/neuromancer/neuromancer/neuromancer_audio.htmancer_audio.html  
注释url： https://news.ycombinator.com/item?id=452555137 
点：255 
＃评论：68 ]]></description>
      <guid>http://bearcave.com/bookrev/neuromancer/neuromancer_audio.html</guid>
      <pubDate>Mon, 15 Sep 2025 21:28:01 GMT</pubDate>
    </item>
    </channel>
</rss>