<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：头版</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻 RSS</description>
    <lastBuildDate>Wed, 09 Oct 2024 01:15:50 GMT</lastBuildDate>
    <item>
      <title>论时间的本质</title>
      <link>https://writings.stephenwolfram.com/2024/10/on-the-nature-of-time/</link>
      <description><![CDATA[文章网址：https://writings.stephenwolfram.com/2024/10/on-the-nature-of-time/
评论网址：https://news.ycombinator.com/item?id=41782534
积分：93
评论数：43]]></description>
      <guid>https://writings.stephenwolfram.com/2024/10/on-the-nature-of-time/</guid>
      <pubDate>Tue, 08 Oct 2024 22:42:01 GMT</pubDate>
    </item>
    <item>
      <title>不要让字典破坏你的代码</title>
      <link>https://roman.pt/posts/dont-let-dicts-spoil-your-code/</link>
      <description><![CDATA[文章网址：https://roman.pt/posts/dont-let-dicts-spoil-your-code/
评论网址：https://news.ycombinator.com/item?id=41781855
积分：10
评论数：0]]></description>
      <guid>https://roman.pt/posts/dont-let-dicts-spoil-your-code/</guid>
      <pubDate>Tue, 08 Oct 2024 21:10:14 GMT</pubDate>
    </item>
    <item>
      <title>可靠软件设计实践</title>
      <link>https://entropicthoughts.com/practices-of-reliable-software-design</link>
      <description><![CDATA[文章网址：https://entropicthoughts.com/practices-of-reliable-software-design
评论网址：https://news.ycombinator.com/item?id=41781777
积分：35
评论数：2]]></description>
      <guid>https://entropicthoughts.com/practices-of-reliable-software-design</guid>
      <pubDate>Tue, 08 Oct 2024 21:01:22 GMT</pubDate>
    </item>
    <item>
      <title>Instant（YC S22）正在招聘创始工程师来帮助构建现代 Firebase</title>
      <link>https://news.ycombinator.com/item?id=41781768</link>
      <description><![CDATA[评论网址：https://news.ycombinator.com/item?id=41781768
积分：0
评论数：0]]></description>
      <guid>https://news.ycombinator.com/item?id=41781768</guid>
      <pubDate>Tue, 08 Oct 2024 21:00:16 GMT</pubDate>
    </item>
    <item>
      <title>对 Htmx 的温和批评</title>
      <link>https://chrisdone.com/posts/htmx-critique/</link>
      <description><![CDATA[文章网址：https://chrisdone.com/posts/htmx-critique/
评论网址：https://news.ycombinator.com/item?id=41781457
积分：137
评论数：32]]></description>
      <guid>https://chrisdone.com/posts/htmx-critique/</guid>
      <pubDate>Tue, 08 Oct 2024 20:19:57 GMT</pubDate>
    </item>
    <item>
      <title>Lunar Lake 的 iGPU：英特尔 Xe2 架构的首次亮相</title>
      <link>https://chipsandcheese.com/p/lunar-lakes-igpu-debut-of-intels</link>
      <description><![CDATA[文章网址：https://chipsandcheese.com/p/lunar-lakes-igpu-debut-of-intels
评论网址：https://news.ycombinator.com/item?id=41780929
积分：34
评论数：7]]></description>
      <guid>https://chipsandcheese.com/p/lunar-lakes-igpu-debut-of-intels</guid>
      <pubDate>Tue, 08 Oct 2024 19:32:37 GMT</pubDate>
    </item>
    <item>
      <title>谁死了并给美国留下了 70 亿美元？</title>
      <link>https://sherwood.news/power/who-died-and-left-the-us-7-billion-fayez-sarofim/</link>
      <description><![CDATA[文章网址：https://sherwood.news/power/who-died-and-left-the-us-7-billion-fayez-sarofim/
评论网址：https://news.ycombinator.com/item?id=41780569
积分：122
评论数：85]]></description>
      <guid>https://sherwood.news/power/who-died-and-left-the-us-7-billion-fayez-sarofim/</guid>
      <pubDate>Tue, 08 Oct 2024 18:58:26 GMT</pubDate>
    </item>
    <item>
      <title>TLA+ 中的 Futexes</title>
      <link>https://surfingcomplexity.blog/2024/10/05/futexes-in-tla/</link>
      <description><![CDATA[文章网址：https://surfingcomplexity.blog/2024/10/05/futexes-in-tla/
评论网址：https://news.ycombinator.com/item?id=41780409
积分：14
评论数：0]]></description>
      <guid>https://surfingcomplexity.blog/2024/10/05/futexes-in-tla/</guid>
      <pubDate>Tue, 08 Oct 2024 18:39:34 GMT</pubDate>
    </item>
    <item>
      <title>显示 HN：Winamp 和其他媒体播放器，使用 Web Components 为网络重建</title>
      <link>https://player.style</link>
      <description><![CDATA[大家好，我是 Video.js 的创建者，也是 Mux &amp; Zencoder 的联合创始人。我和我的团队创建了这个主题。希望您喜欢我们迄今为止构建的主题，甚至可能受到启发来构建自己的主题。我知道 Web 组件现在处于一个有点戏剧性的周期。我很高兴看到它们真的受到关注。自从 2013 年左右我开始使用它们以来，我一直对它们非常看好，至少在视频播放器等小部件的背景下。我甚至就它们进行过许多相关演讲，比如这个 (https://www.youtube.com/watch?v=N6Mh84SRoDg)。我永远不会将它们用于大型应用程序或完全替代 React，但它们在制作兼容多种环境的视频播放器方面表现得非常出色，而当您进入嵌入主题的步骤时，Player.style 就是一个清晰的证明。Web 组件在构建可在项目之间共享的 UI 方面确实很出色。它们也是避免长期 JS 框架混乱的最佳方式，这对任何在 Web 上工作时间足够长的开发人员来说都是一个挑战。我为 Video.js 做出的最佳决定之一是不使用 jQuery 构建它。 Video.js 已经有 15 年的历史了，但仍然在使用，而所有的 jQuery 播放器都已经过时了。为了补充一些关于这个项目的背景信息，当我在 2010 年构建 Video.js 时，我花了很多心思考虑其他开发人员如何自定义播放器控件。我很高兴使用 Web 技术（而不是 Flash）来构建播放器，我知道其他 Web 开发人员也会如此。快进 14 年——Video.js 已用于数百万个网站，包括 Twitter、Instagram、Amazon、Dropbox、Linkedin，甚至用于联合航空的头枕。在 99.99% 的情况下，默认的 Video.js 控件几乎未经过任何自定义。所以……采用取得了巨大的成功，但在激发创造力方面却彻底失败了。回想起来，要求人们学习新的 UI 框架只是为了设计他们的播放器太过分了。Media Chrome 和 Player.style 就是我解决这一问题的方法。- Media Chrome - 一套 Web 组件和 React 组件，可让您使用熟悉的组件轻松地从头开始构建媒体播放器 UI。- Player.stye - 使用 Media Chrome 构建的主题，展示了 Media Chrome 的跨播放器和跨框架灵活性Media Chrome 已在 TED.com、Syntax.fm 等网站上使用，以及使用 Mux Player 的任何地方。我们花了几个月的时间为 Player.style 构建了一些很棒的主题。我可能最开心的是使用 SVG 和 CSS 从头开始​​重新创建 Youtube 图标动画。（无论是谁制作的原版，都做得很好！）它都是免费和开源的，所以如果您对该项目感兴趣，请不要犹豫加入。当然，我很乐意回答任何问题。

评论网址：https://news.ycombinator.com/item?id=41780297
积分：156
评论数：36]]></description>
      <guid>https://player.style</guid>
      <pubDate>Tue, 08 Oct 2024 18:27:46 GMT</pubDate>
    </item>
    <item>
      <title>欧洲政府隔离系统遭定制恶意软件入侵</title>
      <link>https://www.welivesecurity.com/en/eset-research/mind-air-gap-goldenjackal-gooses-government-guardrails/</link>
      <description><![CDATA[文章网址：https://www.welivesecurity.com/en/eset-research/mind-air-gap-goldenjackal-gooses-government-guardrails/
评论网址：https://news.ycombinator.com/item?id=41779952
积分：51
评论数：37]]></description>
      <guid>https://www.welivesecurity.com/en/eset-research/mind-air-gap-goldenjackal-gooses-government-guardrails/</guid>
      <pubDate>Tue, 08 Oct 2024 17:52:14 GMT</pubDate>
    </item>
    </channel>
</rss>