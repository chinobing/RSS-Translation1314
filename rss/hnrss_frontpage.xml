<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Tue, 29 Jul 2025 12:45:19 GMT</lastBuildDate>
    <item>
      <title>SendBlue（YC S23）正在雇用高级工程师</title>
      <link>https://www.ycombinator.com/companies/sendblue/jobs/VP7cA0F-senior-backend-engineer</link>
      <description><![CDATA[文章URL： https://www.ycombinator.com/combinator.com/companies/sendblue/sendblue/jobs/jobs/jobs/jobs/jobs/jobs/vp7ca/vp7ca0f-senior-back-nior-back-chine-a&gt;        
注释URL： https://news.ycombinator.com/item./item?id=447222217 
点：0 
＃评论：0 ]]></description>
      <guid>https://www.ycombinator.com/companies/sendblue/jobs/VP7cA0F-senior-backend-engineer</guid>
      <pubDate>Tue, 29 Jul 2025 12:01:11 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：终端基础RL：带有RL的训练长马终端剂</title>
      <link>https://github.com/Danau5tin/terminal-bench-rl</link>
      <description><![CDATA[通过RL培训计算器代理后，我真的很想走更大！因此，我建立了RL基础架构，用于训练长马终端/编码代理，该终端/编码代理从2x A100到32x H100（估算价值约100万美元！），而没有进行任何培训，我的32B代理商在Terminal-Bench Leadboard上击中了＃19，在Stanford的Terminus-terminus-Qwen33-235b-a22上击败了Stanford的Terminus-terminus-Qwen33-235b-a22！通过培训...好吧，太昂贵了，但是我敢打赌，我所做的*：  - 创建了一个Claude Code启发的代理（系统MSG +工具）  - 构建的Docker-olated GRPO培训，每个培训每个培训都会在每个培训中获得自己的容器  - 开发了自己的多个构造数据的培训和验证型，以生成   *关键结果*：  - 我未经训练的QWEN3-32B代理在终端板凳上获得了13.75％的成绩（＃19，击败了斯坦福大学的Qwen3-235b Moe）  - 我测试了在32X H100上均可在4个裸露的金属nodaL上进行的训练，以稳定地进行培训。 LLM法官表现。 SONNET-4赢。一个艰苦任务的示例：“我在``/app/program&#39;&#39;中找到了这个神秘程序，我完全陷入困境。它是剥离的二进制文件，所以我不知道它的作用或正确运行它。该程序似乎期望某些特定的输入，然后期望某些特定的输入，然后产生一个输出，然后无法训练它需要什么样的输入。最小的努力。  -  grpo每任务每任务16次推出，每次推出最多32K令牌。  - 代理使用xml/yaml格式来构建工具调用*更多详细信息*：我的github repos oper source source souride source your（agent，data，code）and（agent，data，code），如果您感兴趣的是  -  podip  n dody pobity pobity！ repo 我以为我会分享这一点，因为我相信长途rl会改变每个人的生活，因此我觉得这很重要（而且非常有趣！），我们所有人在该领域周围分享知识，也很喜欢探索可能的东西。感谢您阅读！

评论url： https://news.ycombinator.com/item?id=44721791 
点：39 
＃评论：2 ]]></description>
      <guid>https://github.com/Danau5tin/terminal-bench-rl</guid>
      <pubDate>Tue, 29 Jul 2025 11:12:03 GMT</pubDate>
    </item>
    <item>
      <title>年龄验证法律发送VPN使用飞涨 - 并威胁开放的互联网</title>
      <link>https://www.wired.com/story/vpn-use-spike-age-verification-laws-uk/</link>
      <description><![CDATA[文章url： https://www.wired.com/story/story/story/vpn-use-spike-pike-age-age-age-age-verification-lahns-verification-lahs-vers-verahs-uks-uk/   
注释url： https://news.ycombinator.com/item？id=44721772 
点：15 
＃评论：2 ]]></description>
      <guid>https://www.wired.com/story/vpn-use-spike-age-verification-laws-uk/</guid>
      <pubDate>Tue, 29 Jul 2025 11:09:18 GMT</pubDate>
    </item>
    <item>
      <title>亚马逊的AI编码显示了一个肮脏的小秘密</title>
      <link>https://www.bloomberg.com/opinion/articles/2025-07-29/amazon-ai-coding-revealed-a-dirty-little-secret</link>
      <description><![CDATA[文章URL： https://www.bloomberg.com/opinion/articles/2025-07-29/amazon-ai-coding-revealed-a-dirty-little-secret-secret  
注释url： https://news.ycombinator.com/item？id=44721485 
点：12 
＃评论：12 ]]></description>
      <guid>https://www.bloomberg.com/opinion/articles/2025-07-29/amazon-ai-coding-revealed-a-dirty-little-secret</guid>
      <pubDate>Tue, 29 Jul 2025 10:25:18 GMT</pubDate>
    </item>
    <item>
      <title>Wikimedia基金会挑战英国在线安全法规法规</title>
      <link>https://wikimediafoundation.org/news/2025/07/17/wikimedia-foundation-challenges-uk-online-safety-act-regulations/</link>
      <description><![CDATA[文章URL： https://wikimediafoundation.org/news/2025/07/17/wikimedia-foundation-challenges-challenges-uk-online-safety-act-act-regulations/  
评论url： https://news.ycombinator.com/item？id=44721403 
点：108 
＃评论：39 ]]></description>
      <guid>https://wikimediafoundation.org/news/2025/07/17/wikimedia-foundation-challenges-uk-online-safety-act-regulations/</guid>
      <pubDate>Tue, 29 Jul 2025 10:12:29 GMT</pubDate>
    </item>
    <item>
      <title>没什么好看的 - 实验画廊可视化50k电影海报</title>
      <link>https://nothing-to-watch.port80.ch</link>
      <description><![CDATA[文章URL： https://nothing-to-watch.port80.ch   
注释URL： https://news.ycombinator.com/item?id=44721204 
点：51 
＃评论：20 ]]></description>
      <guid>https://nothing-to-watch.port80.ch</guid>
      <pubDate>Tue, 29 Jul 2025 09:42:14 GMT</pubDate>
    </item>
    <item>
      <title></title>
      <link>https://blog.kilocode.ai/p/ai-pricing-playbook-strikes-again</link>
      <description><![CDATA[文章URL： https://blog.kilocode.ai/p/p/ai-playbook-playbook-playbook-strikes-strikes-again-again     
注释URL： https://news.ycombinator.com/item？id=44721003 
点：193 
＃评论：136 ]]></description>
      <guid>https://blog.kilocode.ai/p/ai-pricing-playbook-strikes-again</guid>
      <pubDate>Tue, 29 Jul 2025 09:15:19 GMT</pubDate>
    </item>
    <item>
      <title>在四十年代现代化Amiga</title>
      <link>https://benjamin.computer/posts/2025-07-28-amiga40.html</link>
      <description><![CDATA[文章URL： https://benjamin.computer/posts/2025-07-07-07-28-07-28-AMIGA407-MAMIGA40.HTMLL 
注释URL： https://news.ycombinator.com/item？id=44719532 
点：17 
＃评论：1 ]]></description>
      <guid>https://benjamin.computer/posts/2025-07-28-amiga40.html</guid>
      <pubDate>Tue, 29 Jul 2025 05:55:32 GMT</pubDate>
    </item>
    <item>
      <title>小马：演员模型，功能安全，高性能编程语言</title>
      <link>https://www.ponylang.io/discover/</link>
      <description><![CDATA[文章URL： https://www.ponylang.io/discover/   
注释url： https://news.ycombinator.com/item/item?id=44719413 
点：152 
＃评论：97 ]]></description>
      <guid>https://www.ponylang.io/discover/</guid>
      <pubDate>Tue, 29 Jul 2025 05:34:15 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：公司使用AI接听您的电话。我建立了AI为您为您做的</title>
      <link>https://www.pipervoice.com/</link>
      <description><![CDATA[我们生活在这种怪异的不对称性中，公司使用AI与我们交谈，但我们仍在手动拨打它们。最近，各地的公司都采用了AI语音代理商。大零售，家庭牙医诊所，当地药房。今年，我打过几个呼叫，它听起来很自然，这很酷。但是后来我开始思考 - 为什么我们，消费者，如果他们为自己的机器人使用机器人？您会告诉它您需要的东西（预约，检查订单，对收费提出异议，等等），并且在您进行实际工作时会处理整个对话。 Right now it&#39;s a web app, Chrome extension is pending approval but soon you&#39;ll be able to click any phone number anywhere and just let Piper handle it.Technical stuff that was harder than expected:Latency - every millisecond counts in conversation, had to optimize around kv cache, got it down to ~1000ms to first word over PSTN for telephony, which feels pretty naturalKeeping the voice agents on track - built custom context engineering logic that constantly更新了代理商的情境意识，因此它知道何时被转移，何时被搁置，等等完成了〜50个成功的呼叫，到目前为止，早期测试人员都可以使用。主要失败是当他们需要复杂的验证或文档时。还必须暂时暂时取下我们的IVR导航：/，发现一些导致不必要的转移但努力解决的边缘案例。我真的认为我们正朝着这个世界前往这个世界上的AI与AI进行有关大多数例行事物的交谈，而电话的第一个真实示例可能是大规模发生的第一个真实示例！  https://pipervoice.com  

注释url： https://news.ycombinator.com/item?id=44716414 
点：122 
＃评论：95 ]]></description>
      <guid>https://www.pipervoice.com/</guid>
      <pubDate>Mon, 28 Jul 2025 22:17:14 GMT</pubDate>
    </item>
    </channel>
</rss>