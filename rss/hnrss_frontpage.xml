<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Tue, 08 Jul 2025 12:41:40 GMT</lastBuildDate>
    <item>
      <title>Attimet（YC F24） - 量化交易研究实验室 - 正在雇用创始研究员</title>
      <link>https://www.ycombinator.com/companies/attimet/jobs/6LaQIc5-founding-researcher-quant</link>
      <description><![CDATA[文章URL：注释url： https://news.ycombinator.com/item?id=4444999183 
点：0 
＃评论：0 ]]></description>
      <guid>https://www.ycombinator.com/companies/attimet/jobs/6LaQIc5-founding-researcher-quant</guid>
      <pubDate>Tue, 08 Jul 2025 12:00:53 GMT</pubDate>
    </item>
    <item>
      <title>得克萨斯州的洪水悲剧：是否可以避免它？</title>
      <link>https://cliffmass.blogspot.com/2025/07/the-texas-flooding-tragedy-could-it.html</link>
      <description><![CDATA[Article URL: https://cliffmass.blogspot.com/2025/07/the-texas-flooding-tragedy-could-it.html
注释URL： https://news.ycombinator.com/item?id=4444498594 
点：19 
＃评论：19 ]]></description>
      <guid>https://cliffmass.blogspot.com/2025/07/the-texas-flooding-tragedy-could-it.html</guid>
      <pubDate>Tue, 08 Jul 2025 10:01:39 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：Offchess  -  100K+离线，无广告国际象棋拼图应用程序</title>
      <link>https://offchess.com</link>
      <description><![CDATA[ HI HN！我是RDX的开发人员，RDX是一个温和的无广告，隐私和用户友好的Reddit客户端。这次，我为一个非常特定的用例做了什么：解决没有互联网的国际象棋难题。为什么？好吧，我的Wi-Fi在浴室里很糟糕，这就是我做一些最好的思考的地方。我尝试打印出“ X中的伴侣”难题来离线解决，但是如果没有互动，它们并不有趣。因此，我构建了OffChess。您可以按类别（1/2/3/4/5中的伴侣，PIN/FORKS/SKEWERS等策略或Sicilian/French等开口等）解决难题。您会根据自己的表现获得或失去积分，因此有一个轻度评级系统可以使事情保持吸引力。没有帐户，没有跟踪，没有每月订阅，无需互联网。只要您身在何处href =“ https://apps.apple.com/us/app/chess-puzzles-fchess/id67444736661?platform=iphone”&gt; https：//apps.apple.com/us/app/app/chess-puzzles-puzzles-puzzles-chess-puzzles-fchess/id674447，67447 ... href =“ https://play.google.com/store/apps/details?id=com.offchess”&gt; https://play.google.com/store/store/store/papps/details/detail=com.offchess?id=com.offchess?id=com.offchess 

注释url： https://news.ycombinator.com/item？id=444498296 
点：103 
＃评论：40 ]]></description>
      <guid>https://offchess.com</guid>
      <pubDate>Tue, 08 Jul 2025 08:57:01 GMT</pubDate>
    </item>
    <item>
      <title>是否只能使用Lissajous数字在示波器上演奏厄运？</title>
      <link>https://forums.sufficientvelocity.com/threads/is-it-possible-to-play-doom-on-an-analog-oscilloscope-using-only-lissajous-figures.126232/</link>
      <description><![CDATA[文章URL： https://forums.suffficelvelocity.com/threads/is-it-possible-to-play-play-doom-on-an-an-analog-soscilloscope-using-inly-lyly-lissajous-figures.126232/  
注释url： https://news.ycombinator.com/item？id=4444498022 
点：16 
＃评论：1 ]]></description>
      <guid>https://forums.sufficientvelocity.com/threads/is-it-possible-to-play-doom-on-an-analog-oscilloscope-using-only-lissajous-figures.126232/</guid>
      <pubDate>Tue, 08 Jul 2025 07:57:25 GMT</pubDate>
    </item>
    <item>
      <title>SIMD.Info  - 所有主要SIMD发动机的C内在参考工具</title>
      <link>https://simd.info/</link>
      <description><![CDATA[文章URL： https://simd.info/  
评论url： https://news.ycombinator.com/item?id=444496229 
点：38 
＃评论：8 ]]></description>
      <guid>https://simd.info/</guid>
      <pubDate>Tue, 08 Jul 2025 01:44:59 GMT</pubDate>
    </item>
    <item>
      <title>Lookglass：通过拉普拉斯金字塔翘曲的生成变形</title>
      <link>https://studios.disneyresearch.com/2025/06/09/lookingglass-generative-anamorphoses-via-laplacian-pyramid-warping/</link>
      <description><![CDATA[  https://www.youtube.com/watch?v=b3azay43688    

评论url： https://news.ycombinator.com/item./item?id=4444495154 
点：96 
＃评论：19 ]]></description>
      <guid>https://studios.disneyresearch.com/2025/06/09/lookingglass-generative-anamorphoses-via-laplacian-pyramid-warping/</guid>
      <pubDate>Mon, 07 Jul 2025 22:11:58 GMT</pubDate>
    </item>
    <item>
      <title>新的球形包装记录源于意外的来源</title>
      <link>https://www.quantamagazine.org/new-sphere-packing-record-stems-from-an-unexpected-source-20250707/</link>
      <description><![CDATA[文章URL： https://www.quantamagazine.org/new-sphere-packing-record-stems-stems-from-an-n-nunceted-source-20250707/   
注释URL： https://news.ycombinator.com/item?id=444493196 
点：351 
＃评论：164 ]]></description>
      <guid>https://www.quantamagazine.org/new-sphere-packing-record-stems-from-an-unexpected-source-20250707/</guid>
      <pubDate>Mon, 07 Jul 2025 18:19:13 GMT</pubDate>
    </item>
    <item>
      <title>我第一个经过验证的命令计划</title>
      <link>https://markushimmel.de/blog/my-first-verified-imperative-program/</link>
      <description><![CDATA[文章URL： https://marksushimmel.de/blog/my-first-virst-verist-verist-verified-mimperative-mimperative-perperative-progn/  
注释url： https://news.ycombinator.com/item?id=444492986 
点：158 
＃评论：73 ]]></description>
      <guid>https://markushimmel.de/blog/my-first-verified-imperative-program/</guid>
      <pubDate>Mon, 07 Jul 2025 17:58:04 GMT</pubDate>
    </item>
    <item>
      <title>添加功能是因为chatgpt错误地认为它存在</title>
      <link>https://www.holovaty.com/writing/chatgpt-fake-feature/</link>
      <description><![CDATA[文章url： https://www.holovaty.com/writing/chatgpt-fake-fake-fake-feature/
注释URL： https://news.ycombinator.com/item?id=44491071 
点：975 
＃评论：360 ]]></description>
      <guid>https://www.holovaty.com/writing/chatgpt-fake-feature/</guid>
      <pubDate>Mon, 07 Jul 2025 14:58:09 GMT</pubDate>
    </item>
    <item>
      <title>启动HN：Morph（YC S23） - 应用AI代码编辑为4,500令牌/秒</title>
      <link>https://news.ycombinator.com/item?id=44490863</link>
      <description><![CDATA[嘿，我是Morph的Tejas。我们构建了一个燃烧的模型，用于将AI生成的代码编辑直接应用于4,500多个令牌/秒。不再有慢缓慢的全文件重写或脆弱的搜索和重新定位黑客。 AI吐出无法可靠地插入现有代码的代码。完整的文件重写，脆弱的搜索和重建黑客太慢，昂贵或容易出错。变形的方法：  - 您的代理输出“懒惰”编辑“懒惰”，在现有文件中引用未修改的线路（例如：//现有代码...现有代码...  这种方法是由光标去年开创的，但它们的模型并非作为API，因此我们为各地的开发人员（具有很大的免费层！） live demo（no Inbip）建立了变体： https://docs.morphllm.com/quickstart  我们有2个快速应用模型：morph-v3-fast-4500+ tok/sec/sec/sec/sec和morph-v3-large-v3-large-v3-large-2500+ tok/sec/sec/sec。这些模型快速适用于create.xyz，databutton，contine.dev等！我们还提供了用于嵌入 + reranking的检索模型。
下一步：内联编辑模型（CMD -K）：非常快速的内联编辑 - 保持开发流状态；和Morph Tab API：我们的下一个编辑预测模型猜测您的下一个代码编辑 + sub-500ms延迟的操作。它目前是私人beta，但您可以在此处要求尽早访问： https：//morphllm.com/tab   hot Take： hot Take： 1）原始推理的速度更重要，而不是递增的dev ux for dev ux-agagree eyage eyagree eyage eyagee eyage eyagey？遗产 - 快速申请编辑以速度，成本和可靠性获胜。 3）随着狭窄任务的基准饱和至99％+，复杂性从单个边界模型转移到专业推理优化的模型。当边境模型移动高档时，他们将抛弃简单的任务，并且他们将被用来完成任务，只有Frontier模型才能做我们很想听听您的编码代理的想法和经验！

评论url： https://news.ycombinator.com/item?id=4444490863 
点：198 
＃评论：153 ]]></description>
      <guid>https://news.ycombinator.com/item?id=44490863</guid>
      <pubDate>Mon, 07 Jul 2025 14:40:45 GMT</pubDate>
    </item>
    </channel>
</rss>