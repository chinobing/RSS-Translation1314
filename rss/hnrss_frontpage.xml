<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Sat, 17 May 2025 01:25:49 GMT</lastBuildDate>
    <item>
      <title>显示HN：Merliot  - 将物理设备插入LLMS</title>
      <link>https://github.com/merliot/hub</link>
      <description><![CDATA[ Merliot Hub是AI集成的设备中心。这是什么意思？这意味着您可以使用LLM主机（例如Claude Desktop或Cursor）的自然语言来控制和与物理设备，安全摄像机，温度计，无缝使用。集线器是AI和物理世界之间的网关。可能出了什么问题？

注释URL： https://news.ycombinator.com/item？id=44011254 
点：3 
＃评论：0 ]]></description>
      <guid>https://github.com/merliot/hub</guid>
      <pubDate>Sat, 17 May 2025 01:09:38 GMT</pubDate>
    </item>
    <item>
      <title>WebGL Gray-Scott Explorer（2012）</title>
      <link>http://www.mrob.com/pub/comp/xmorphia/ogl/index.html</link>
      <description><![CDATA[文章URL： http://www.mrob.com/pub/pub/comp/comp/xmorphia/oglphia/ogl/ogl/index.htex.html/index.html  
注释URL： https://news.ycombinator.com/item?id=440111139 
点：5 
＃评论：0 ]]></description>
      <guid>http://www.mrob.com/pub/comp/xmorphia/ogl/index.html</guid>
      <pubDate>Sat, 17 May 2025 00:46:24 GMT</pubDate>
    </item>
    <item>
      <title>GPT的崩溃</title>
      <link>https://cacm.acm.org/news/the-collapse-of-gpt/</link>
      <description><![CDATA[文章URL： https://cacm.acm.acm.org/news/the-collapse-of-gpt/    
注释URL： https://news.ycombinator.com/item？id=44001010705 
点：54 
＃评论：42 ]]></description>
      <guid>https://cacm.acm.org/news/the-collapse-of-gpt/</guid>
      <pubDate>Fri, 16 May 2025 23:27:24 GMT</pubDate>
    </item>
    <item>
      <title>他们是相同的“双胞胎”，他们迷住了奥威尔，加缪等</title>
      <link>https://www.nytimes.com/2025/05/04/books/review/the-dazzling-paget-sisters-ariane-bankes.html</link>
      <description><![CDATA[文章URL： https://www.nytimes.com/2025/05/04/books/review/the-dazzling-paget-sisters-sisters-ariane-bankes.html  
注释URL： https://news.ycombinator.com/item？id = 44010659 
点：17 
＃评论：2 ]]></description>
      <guid>https://www.nytimes.com/2025/05/04/books/review/the-dazzling-paget-sisters-ariane-bankes.html</guid>
      <pubDate>Fri, 16 May 2025 23:18:41 GMT</pubDate>
    </item>
    <item>
      <title>显示HN：LISTIS  - 微小的TS Redis客户端，无dep，对于无服务器</title>
      <link>https://github.com/vcms-io/solidis</link>
      <description><![CDATA[大家好！在过去的两年中，我以一个简单的目标将自己扔进了全职工程：写给社区的代码。经过许多深夜的FOMO（“ AI会为我们做所有事情，对吗？”）和一些痛苦的生产事件，我终于将周末项目变成了一个开源库。 [什么是silesis ？ ]   -   super-light（&lt;30 kb）resp2/desp3 client ，运行时DEP和一流的ESM/cjs支持。  - 完全完全 tree-streableable 仅导入您需要的命令。小记忆足迹）。 [为什么我构建它]  1。  node-redis＆ioredis pain    -  ESM仍然是一个事后思考。  - 在第一个模糊的错误表面上隐藏的僵局。  - 一切都捆绑在一起，甚至您永远都不会打电话。 2。我拒绝添加我不完全理解的依赖性 - 我从`npm i`。 3之前都读了10倍的候选人。  [关键功能]   - 协议：desp2 and resp3（auto-negotiation）  - 捆绑尺寸：`&lt;30 kb`（core） /`&lt;105 kb`（full）  - 依赖性：可靠性：自动连接，按命令的超时，类型检查的答复 [路线图/help想要]   -   基准标准对node-redis-redis`＆ooredis`（prs westry！）  docs site   - 读书人是第一个；我希望帮助抛光完整的文档这可能是我最后一次大的OSS推动一段时间，因此， stars，问题和PRS表示世界。 href =“ https://github.com/vcms-io/solidis”&gt; https://github.com/vcms/vcms/vcms-io/solidis    许可： mit 感谢阅读和happ hacking！

注释URL： https://news.ycombinator.com/item?id=44009894 
点：30 
＃评论：1 ]]></description>
      <guid>https://github.com/vcms-io/solidis</guid>
      <pubDate>Fri, 16 May 2025 21:20:15 GMT</pubDate>
    </item>
    <item>
      <title>让AI写好SQL</title>
      <link>https://cloud.google.com/blog/products/databases/techniques-for-improving-text-to-sql</link>
      <description><![CDATA[Article URL: https://cloud.google.com/blog/products/databases/techniques-for-improving-text-to-sql
注释URL： https://news.ycombinator.com/item?id=44009848 
点：135 
＃评论：67 ]]></description>
      <guid>https://cloud.google.com/blog/products/databases/techniques-for-improving-text-to-sql</guid>
      <pubDate>Fri, 16 May 2025 21:10:12 GMT</pubDate>
    </item>
    <item>
      <title>有条不紊的平庸性</title>
      <link>https://aeon.co/essays/who-needs-ai-text-generation-when-theres-erasmus-of-rotterdam</link>
      <description><![CDATA[文章url： https://aeon.co/essays/who-needs/who-needs-needs-needs-no-needs-needs-needs-ebext-getx-gent-gener-when-when-when-when-when-when-when-when-when-when-when-when-when-when-when-when-pp&gt;
注释URL： https://news.ycombinator.com/item?id=44009621 
点：28 
＃评论：10 ]]></description>
      <guid>https://aeon.co/essays/who-needs-ai-text-generation-when-theres-erasmus-of-rotterdam</guid>
      <pubDate>Fri, 16 May 2025 20:39:30 GMT</pubDate>
    </item>
    <item>
      <title>Clojurescript 1.12.42</title>
      <link>https://clojurescript.org/news/2025-05-16-release</link>
      <description><![CDATA[文章URL： https://clojurescript.org/news/news/2025-05-16-rease 
注释URL： https://news.ycombinator.com/item?id=44009464 
点：91 
＃评论：17 ]]></description>
      <guid>https://clojurescript.org/news/2025-05-16-release</guid>
      <pubDate>Fri, 16 May 2025 20:20:20 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：KVSPLIT  - 在Apple Silicon上运行2-3x更长的上下文</title>
      <link>https://github.com/dipampaul17/KVSplit</link>
      <description><![CDATA[我发现在LLM推理中，KV缓存中的键和值具有非常不同的量化灵敏度。密钥需要比值更高的精度来维持质量。结果令人惊讶： -K8v4（8位键，4位值）：减少59％的记忆力，仅0.86％的困惑损失
-K4v8（4位键，8位值）：减少记忆力为59％，但困惑损失6.06％
 - 配置使用相同数量的位，但是K8V4的质量更好，这意味着您可以在同一Mac上使用2-3×较长上下文运行LLMS。内存使用量表具有序列长度，因此随着上下文的增长而节省的复合。实现很简单： 
1。添加-kvq-key和-kvq-val标志到llama.cpp
2。将现有量化逻辑分别应用于K和V张量
3。在上下文长度上用困惑指标验证
4。用于加速的金属（带有-mlong -calls标志以避免矢量化问题）在M4 MacBook Pro上运行带有8K上下文窗口的Tinyllama上的基准。与金属/MPS兼容并针对苹果硅进行了优化。 github： https://github.com/dipampampaul17/kvsplit    

注释URL： https://news.ycombinator.com/item？id=44009321 
点：176 
＃评论：18 ]]></description>
      <guid>https://github.com/dipampaul17/KVSplit</guid>
      <pubDate>Fri, 16 May 2025 20:04:58 GMT</pubDate>
    </item>
    <item>
      <title>关于思考的想法</title>
      <link>https://dcurt.is/thinking</link>
      <description><![CDATA[文章URL： https://dcurt.is/thinking  
注释URL： https://news.ycombinator.com/item?id=44008843 
点：253 
＃评论：167 ]]></description>
      <guid>https://dcurt.is/thinking</guid>
      <pubDate>Fri, 16 May 2025 19:09:55 GMT</pubDate>
    </item>
    </channel>
</rss>