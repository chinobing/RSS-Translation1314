<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>黑客新闻：首页</title>
    <link>https://news.ycombinator.com/</link>
    <description>黑客新闻RSS</description>
    <lastBuildDate>Mon, 25 Aug 2025 01:29:39 GMT</lastBuildDate>
    <item>
      <title>Show HN：SPING  - 一个简单的HTTP/TCP潜伏期工具</title>
      <link>https://dseltzer.gitlab.io/sping/docs/</link>
      <description><![CDATA[我经常发现自己使用[nvitop]（ https：//github.com/xuehaipan/nvitop ），以诊断gpu/cpu cpu contention thing thing thing thing thing if&gt; p&gt; p&gt;容器中的pip   - 它制作了引人注目的屏幕截图（这可以帮助我与同事进行交流。）与这两个课程相关：sping！目的：帮助观察和诊断第4层（TCP/http/https https）的延迟问题（如果您已经安装了： poce at pip pip pip pip pip pip pip pip pop poce。 （可在[service-ping-sping]（ https：//pypi.org/project/service-project/service-proce/service-ping-sping/-sect---- 上）会很感兴趣。但是我很喜欢做到这一点，并打算继续使用它。

注释URL： https://news.ycombinator.com/item？id=450088819 
点：17 
＃评论：3 ]]></description>
      <guid>https://dseltzer.gitlab.io/sping/docs/</guid>
      <pubDate>Sun, 24 Aug 2025 23:42:01 GMT</pubDate>
    </item>
    <item>
      <title>ghrc.io似乎是恶意的</title>
      <link>https://bmitch.net/blog/2025-08-22-ghrc-appears-malicious/</link>
      <description><![CDATA[文章url：注释URL： https://news.ycombinator.com/item?id=45008740 
点：176 
＃评论：24 ]]></description>
      <guid>https://bmitch.net/blog/2025-08-22-ghrc-appears-malicious/</guid>
      <pubDate>Sun, 24 Aug 2025 23:27:52 GMT</pubDate>
    </item>
    <item>
      <title>GNU跨工具：Musl-Cross 31330万</title>
      <link>https://github.com/cross-tools/musl-cross</link>
      <description><![CDATA[文章URL： https://github.com/cross-tools/cross-tools/musl-cross   
评论URL： https://news.ycombinator.com/item?id=45008308 
点：9 
＃评论：2 ]]></description>
      <guid>https://github.com/cross-tools/musl-cross</guid>
      <pubDate>Sun, 24 Aug 2025 22:20:07 GMT</pubDate>
    </item>
    <item>
      <title>回顾我从Windows到Linux的过渡</title>
      <link>https://www.scottrlarson.com/publications/publication-looking-back-windows-to-linux/</link>
      <description><![CDATA[文章url： https://wwwww.scottrlarson.com/publications/publication-publication-publication-publication-looking-back--windows-tok-windows-tot-lindows-tot-lindows-linux/publinux/publication-
注释URL： https://news.ycombinator.com/item？id=45007437 
点：84 
＃评论：105 ]]></description>
      <guid>https://www.scottrlarson.com/publications/publication-looking-back-windows-to-linux/</guid>
      <pubDate>Sun, 24 Aug 2025 20:22:26 GMT</pubDate>
    </item>
    <item>
      <title>停止并捕捉火灾教学大纲（2021）</title>
      <link>https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/</link>
      <description><![CDATA[文章URL： https://bits.ashleyblewer.com/halt-and-catch-fire-fire-syllabus/-syllabus/
注释URL： https://news.ycombinator.com/item？id=45007414 
点：94 
＃评论：21 ]]></description>
      <guid>https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/</guid>
      <pubDate>Sun, 24 Aug 2025 20:19:55 GMT</pubDate>
    </item>
    <item>
      <title>A和B之间有多少个长度k的路径？ （2021）</title>
      <link>https://horace.io/walks</link>
      <description><![CDATA[文章URL： https://horace.io/walks   
评论URL： https://news.ycombinator.com/item?id=450073333 
点：7 
＃评论：0 ]]></description>
      <guid>https://horace.io/walks</guid>
      <pubDate>Sun, 24 Aug 2025 20:09:12 GMT</pubDate>
    </item>
    <item>
      <title>一个辉煌而附近的一次性快速无线电爆发，定位为13 pc精度</title>
      <link>https://iopscience.iop.org/article/10.3847/2041-8213/adf62f</link>
      <description><![CDATA[文章url： https://iopscience.iop.orp.org.org/article/10.3847/20.3847/2041-2041-2041-8213/ADFFF 
评论URL： https://news.ycombinator.com/item?id=45006902 
点：43 
＃评论：5 ]]></description>
      <guid>https://iopscience.iop.org/article/10.3847/2041-8213/adf62f</guid>
      <pubDate>Sun, 24 Aug 2025 19:23:19 GMT</pubDate>
    </item>
    <item>
      <title>我知道的关于良好API设计的一切</title>
      <link>https://www.seangoedecke.com/good-api-design/</link>
      <description><![CDATA[文章URL： https://www.seangoedecke.com/good-api-api-api-api-design/ 
注释URL： https://news.ycombinator.com/item？id=45006801 
点：157 
＃评论：55 ]]></description>
      <guid>https://www.seangoedecke.com/good-api-design/</guid>
      <pubDate>Sun, 24 Aug 2025 19:10:09 GMT</pubDate>
    </item>
    <item>
      <title>带回蓝皮书考试</title>
      <link>https://www.chronicle.com/article/bring-back-the-blue-book-exam</link>
      <description><![CDATA[文章url： https://www.chronicle.com/article.com/article/article/bring-back-back-back-back-back-the-blue-book-book-exam  
注释URL： https://news.ycombinator.com/item?id=45006147 
点：71 
＃评论：97 ]]></description>
      <guid>https://www.chronicle.com/article/bring-back-the-blue-book-exam</guid>
      <pubDate>Sun, 24 Aug 2025 17:44:55 GMT</pubDate>
    </item>
    <item>
      <title>Show HN：我构建了一个XSLT博客框架</title>
      <link>https://vgr.land/content/posts/20250821.xml</link>
      <description><![CDATA[几周前，一个朋友给我发送了grug-brain xslt（1），这激发了我在XSLT中重做我的个人博客。，而不仅仅是在它上构建自己的博客，我写了它供其他人使用，我已经在github  https://github.com/vgr-land/vgr-xslt-blog-framework （2）（2），由于其他人在脑海中有XSLT，现在似乎与与世界分享的时间一样好。 evidlo@做得很好，解释了XSLT的工作方式（3）关于如何使用此框架发布的简短版本是： 1。在XML标头和页脚中包裹的HTML创建新帖子。框架期望的。 2。标记帖子，以便其唯一的框架可以在build  3上找到它。将帖子添加到posts.xml文件，就是这样。没有更新菜单的构建系统，也没有可更新的RSS文件（posts.xml是RSS文件）。作为一个可重复使用的框架，可能会潜伏在CSS中，但否则我发现它完全可满足我的需求。最后，如果从HTML Spec（4）中删除XSLT，那将是可惜的，我发现它的简单性很简单。 href =“ https://news.ycombinator.com/item?id=44393817”&gt; https://news.ycombinator.com/item?id=44393817  rel =“ nofollow”&gt; https://github.com/vgr-land/vgr-xslt-blog-framework  （3） https://news.ycombinator.com/item?id=44988271  （4） https://news.ycombinator.com/item?id=44952185 

注释URL： https://news.ycombinator.com/item？id=45006098 
点：21 
＃评论：2 ]]></description>
      <guid>https://vgr.land/content/posts/20250821.xml</guid>
      <pubDate>Sun, 24 Aug 2025 17:38:30 GMT</pubDate>
    </item>
    </channel>
</rss>