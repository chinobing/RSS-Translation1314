<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 10 Aug 2025 21:19:12 GMT</lastBuildDate>
    <item>
      <title>Secretshare：轻松，安全一次秘密共享CLI [OPENSOURCE]</title>
      <link>https://www.reddit.com/r/programming/comments/1mmug32/secretshare_easy_secure_one_time_secret_sharing/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近不得不分享大量的API键，而且似乎野性没有一种简单的黑客友好方式来执行此操作。我构建了一个易于使用的CLI来共享秘密，整个过程大约需要15秒钟：  接收者运行Secret_Share，它会生成一个一次性的公共密钥，它们可以发送给发送者 发件人运行secret_shred_share，在接收方的eversiver中，他们可以从接收者那里播放  它是开源。没有服务器。它使用非常标准/无聊/安全加密（RSA-OAEP和AES-GCM）。私钥永远不会写给磁盘，并且一旦有效载荷解码（每次新键）就会从内存中驱逐。它对CLI的用户友好（清晰的消息，剪贴板集成）。您可以使用任何聊天工具，因为通信渠道永远不会看到私钥。唯一的依赖项是Google维护的GO软件包（术语和系统）。它很简单（您可以在大约5分钟内阅读整个代码库）。  github： https：//github.com/scosman/scosman/secman/secret_share_share  sc_on-&gt;＆＃32;提交由＆＃32; /u/davernow       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmug32/secretshare_easy_secure_one_time_secret_sharing/</guid>
      <pubDate>Sun, 10 Aug 2025 21:18:26 GMT</pubDate>
    </item>
    <item>
      <title>雇用移动开发人员以及我们如何减轻他们的隐藏风险</title>
      <link>https://www.reddit.com/r/programming/comments/1mmu1yi/hidden_risks_in_hiring_mobile_developers_and_how/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们多年来雇用了许多移动开发人员。有些是摇滚明星，有些是纸上看起来很棒，但在生产中表现不佳。 困难的部分？大多数访谈并未透露某人如何处理现实世界的移动问题。 我们开始使用预审查服务（Dalent Sidekick），在我们甚至与候选人会面之前进行代码评论和技术访谈。它已经从一些不好的员工中救出了我们。在签订合同之前，您如何审查移动开发人员？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/deathKingtom      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmu1yi/hidden_risks_in_hiring_mobile_developers_and_how/</guid>
      <pubDate>Sun, 10 Aug 2025 21:02:42 GMT</pubDate>
    </item>
    <item>
      <title>Zig的可爱语法</title>
      <link>https://www.reddit.com/r/programming/comments/1mmtcfv/zigs_lovely_syntax/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/steveklabnik1     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmtcfv/zigs_lovely_syntax/</guid>
      <pubDate>Sun, 10 Aug 2025 20:34:24 GMT</pubDate>
    </item>
    <item>
      <title>如何提出对代码库的有影响力的改进并拥有实施</title>
      <link>https://www.reddit.com/r/programming/comments/1mmrk79/how_to_propose_an_impactful_improvement_to_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmrk79/how_to_propose_an_impactful_improvement_to_the/</guid>
      <pubDate>Sun, 10 Aug 2025 19:24:56 GMT</pubDate>
    </item>
    <item>
      <title>从害羞的工程师到甲骨文的导演，以及熟练的沟通者</title>
      <link>https://www.reddit.com/r/programming/comments/1mmrjmd/from_shy_engineer_to_director_at_oracle_and_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmrjmd/from_shy_engineer_to_director_at_oracle_and_a/</guid>
      <pubDate>Sun, 10 Aug 2025 19:24:22 GMT</pubDate>
    </item>
    <item>
      <title>偷偷摸摸地提交</title>
      <link>https://www.reddit.com/r/programming/comments/1mmq9en/sneaky_git_commits/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/tavianator      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmq9en/sneaky_git_commits/</guid>
      <pubDate>Sun, 10 Aug 2025 18:35:30 GMT</pubDate>
    </item>
    <item>
      <title>大规模负载平衡：隐藏的挑战和经验教训</title>
      <link>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  负载平衡似乎很简单，直到您在动态环境中以大规模运行。 在大型系统中，无论是Kubernetes，Cansure Erchingeration，还是传统的服务部署，上游服务器都在不断变化。 Workloads vary in complexity, requests can be uneven, and simple algorithms like round-robin often break down. This post looks at the real-world issues that show up in production: • Traffic imbalance during host rotation • Cold-start spikes when new instances join • How different algorithms (least connections, power-of-two-choices, consistent hashing) behave under stress • The impact of proxy architecture （Envoy vs Haproxy）关于负载分配精度 它是基于从高流量环境中的操作反向代理中学到的经验教训，以及公平，效率和弹性之间的权衡。  href =“ https://startwithawhy.com/reverseproxy/2025/08/08/reverseproxy-deep-deep-dive-part4.html”&gt; https://startwithhy.com/reverseproxy/2025/2025/08/08/08/08/08/reverseproxy-deep-deep-dive-part4.hhh.hhh.hhhh.hhhhh.hhhhhhh.hhhhhhhhhh.hhhhhhhh pret 要听到他人如何在自己的系统中解决这些挑战。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/miggyishu      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</guid>
      <pubDate>Sun, 10 Aug 2025 17:12:01 GMT</pubDate>
    </item>
    <item>
      <title>招聘很烂：工程师对雇用的看法</title>
      <link>https://www.reddit.com/r/programming/comments/1mmmwy8/hiring_sucks_an_engineers_perspective_on_hiring/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  可以在当天改善招聘？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/skybar-one       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmmwy8/hiring_sucks_an_engineers_perspective_on_hiring/</guid>
      <pubDate>Sun, 10 Aug 2025 16:26:23 GMT</pubDate>
    </item>
    <item>
      <title>构建REDIS克隆 - 第2.0部分：将单个节点变成分布式群集</title>
      <link>https://www.reddit.com/r/programming/comments/1mmmtyo/building_a_redis_clone_part_20_turning_a_single/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/sushant098123     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmmtyo/building_a_redis_clone_part_20_turning_a_single/</guid>
      <pubDate>Sun, 10 Aug 2025 16:23:12 GMT</pubDate>
    </item>
    <item>
      <title>Ngrok  - 您的Local主持人的护照</title>
      <link>https://www.reddit.com/r/programming/comments/1mml8pf/ngrok_your_localhosts_passport_to_the_internet/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果您曾经想分享本地应用程序，远程测试API或在不部署的情况下运行实时Websocket演示-Ngrok是Lifesaver。设置ngrok  创建安全http＆amp; HTTPS隧道 实时应用程序的WebSocket隧道  API测试从任何地方 交通检查＆amp; debugging tools  No matter if you’re working in Node.js, Python, or any other stack, ngrok can turn your localhost into a secure public URL in seconds. 🎥 Watch here: Ngrok - Your Localhost’s Passport到Internet   很想听听您使用的Ngrok技巧或您使用的任何创造性方法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/azad_11014       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mml8pf/ngrok_your_localhosts_passport_to_the_internet/</guid>
      <pubDate>Sun, 10 Aug 2025 15:20:23 GMT</pubDate>
    </item>
    <item>
      <title>ELI5对帽定理的解释。</title>
      <link>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</guid>
      <pubDate>Sun, 10 Aug 2025 15:16:05 GMT</pubDate>
    </item>
    <item>
      <title>系统设计中的势力：完整示例</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</guid>
      <pubDate>Sun, 10 Aug 2025 15:10:12 GMT</pubDate>
    </item>
    <item>
      <title>非程序员解决编程问题的解决方案。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nsredditshitposter     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</guid>
      <pubDate>Sun, 10 Aug 2025 14:41:13 GMT</pubDate>
    </item>
    <item>
      <title>ShadowEngine2D v1.2.0：基于锈2D游戏引擎，带有物理，tilemaps和性能分析，现在在Crates.io上</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我刚刚发布了ShadowEngine2d v1.2.0，用Rust编写的2D游戏引擎。  v1.2.0中的新功能：   - 带有Font Management        -  2D Pysict prosect  prodiil pryection-P&gt; prodiil的文本渲染系统 system with CSV import/export - Performance profiler with FPS tracking and memory monitoring - Save/load system with JSON serialization and auto-save Technical stack: - WGPU for cross-platform rendering - Winit for windowing and input handling - Parry2d for physics simulation - Serde for serialization - Glam for math operations Installation: cargo add shadowengine2d The crate includes 4 examples demonstrating basic usage, modern game structure, debug output, and all v1.2.0 features. Licensed under MIT and Apache 2.0.引擎用硬件加速图形渲染支持Windows，MacOS和Linux。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/suremeat5400      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</guid>
      <pubDate>Sun, 10 Aug 2025 14:22:01 GMT</pubDate>
    </item>
    <item>
      <title>rustroid-在您的Android手机上本地运行的锈IDE。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好。我是穆罕默德·哈立尔（Mohammed Khaled），我直接直接达到了重点。 我刚刚完成了我一生中最大的项目之一。大约一年的时间，我一直在为Android创作IDE（在本地运行Android）。根据IDE，我的确是指一个集成的开发环境，该环境提供了语法突出显示，自动完成，诊断，签名帮助，进行定义，声明，实现，显示文档等。 I chose Rust because it&#39;s consistently one of the most admired languages in the annual Stack Overflow surveys. A lot of the code in the IDE is shared, so it wouldn&#39;t be too difficult to adapt it for other languages in the future. The IDE does even allow the user to export APKs for graphical applications and games and also lets them run the app quickly without having to install it.该应用实际上使用一种奇怪的动态加载技术来从其从您的代码生成的共享库中加载自身。 我已经为应用程序创建了一个网站，其中我详细介绍了它的功能： href =“ https://rustroid.is-a.dev/story”&gt; https://rustroid.is-a.dev/story   该应用程序可在Google Play上获得。  https://play.google.com/store/store/pplay/pplay/pplay/pplay/pplay/details/details/details/details/details/detail-com..mohamm- hamm- hammedkhc.iide.iide.rust一下免责声明：该应用程序不是开源和/或免费的，但它非常便宜。它也只需$ 4.50。播放：  https：//play.google.com/store/store/store/store/store/papps/details/details/details/details?id=com.mohammed=com.mohammed =/sc.mohammedkhc.iide.rust ＆＃32;提交由＆＃32; /u/u/u/mohammedkhc       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</guid>
      <pubDate>Sun, 10 Aug 2025 14:20:39 GMT</pubDate>
    </item>
    </channel>
</rss>