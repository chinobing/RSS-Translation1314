<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 06 Jul 2025 12:36:46 GMT</lastBuildDate>
    <item>
      <title>QWEN3仅出现有关Rama和Electric的几个链接时，在编程中看到了突破</title>
      <link>https://www.reddit.com/r/programming/comments/1lt03l5/qwen3_sees_a_breakthrough_in_programming_when/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lispweaver      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lt03l5/qwen3_sees_a_breakthrough_in_programming_when/</guid>
      <pubDate>Sun, 06 Jul 2025 12:31:56 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 284：解决一些错误</title>
      <link>https://www.reddit.com/r/programming/comments/1lsyrnu/lets_make_a_game_284_fixing_some_mistakes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsyrnu/lets_make_a_game_284_fixing_some_mistakes/</guid>
      <pubDate>Sun, 06 Jul 2025 11:14:44 GMT</pubDate>
    </item>
    <item>
      <title>与Kubernetes的OPA：使用方式和使用的好处</title>
      <link>https://www.reddit.com/r/programming/comments/1lsynyx/opa_with_kubernetes_how_it_works_benefits_of_use/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/youmarye       [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsynyx/opa_with_kubernetes_how_it_works_benefits_of_use/</guid>
      <pubDate>Sun, 06 Jul 2025 11:08:10 GMT</pubDate>
    </item>
    <item>
      <title>为什么构建软件框架</title>
      <link>https://www.reddit.com/r/programming/comments/1lsylp0/why_build_software_frameworks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/youmarye      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsylp0/why_build_software_frameworks/</guid>
      <pubDate>Sun, 06 Jul 2025 11:04:22 GMT</pubDate>
    </item>
    <item>
      <title>C3 0.7.3发布 - 改进和错误修复</title>
      <link>https://www.reddit.com/r/programming/comments/1lsxbpo/c3_073_released_improvements_and_bug_fixes/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsxbpo/c3_073_released_improvements_and_bug_fixes/</guid>
      <pubDate>Sun, 06 Jul 2025 09:39:55 GMT</pubDate>
    </item>
    <item>
      <title>为初学者和中间人举办在线黑客马拉松</title>
      <link>https://www.reddit.com/r/programming/comments/1lsx5x3/hosting_an_online_hackathon_for_beginners_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嗨，我们将于7月12日至13日举办一项在线黑客马拉松，现金奖品价值20,000卢比和价值1,00,000卢比。对于每个人来说，这是一个很好的机会，可以在48小时的时间内学习和构建很酷的东西！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/tomorrowstrong      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsx5x3/hosting_an_online_hackathon_for_beginners_and/</guid>
      <pubDate>Sun, 06 Jul 2025 09:28:22 GMT</pubDate>
    </item>
    <item>
      <title>建立了一个SaaS，以帮助音乐家直接获得粉丝的报酬 - 认识音乐家好友</title>
      <link>https://www.reddit.com/r/programming/comments/1lswrxz/built_a_saas_to_help_musicians_get_paid_directly/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  作为音乐家，我厌倦了追逐演出，流和废料。因此，我构建了音乐家好友  - 一个简单的应用程序，可让您创建个人资料，粉丝或追随者可以为您预订自定义歌曲或现场演出的演出。他们可以直接通过该应用付款，您可以将表演直接流到他们的智能电视。&lt; /p&gt; 它非常适合那些“我需要在本周末赚钱”的时刻。没有中间人。没有奇怪的合同。只是音乐→钱。 现在在iOS上可用。好奇你们所有人的想法 - 反馈欢迎！提交由＆＃32; /u/u/u/crazy-telephone8984     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1lswrxz/built_a_a_saas_to_help_help_musicians_get_paid_paid_directly/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lswrxz/built_a_saas_to_help_musicians_get_paid_directly/</guid>
      <pubDate>Sun, 06 Jul 2025 09:01:39 GMT</pubDate>
    </item>
    <item>
      <title>我们用状态机构建了一个Ai-Angent，而不是巨大的提示</title>
      <link>https://www.reddit.com/r/programming/comments/1lsw57m/we_built_an_aiagent_with_a_state_machine_instead/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   hola pythonistas， 去年，我们试图将LLM“代理”带入真正的企业工作流程。在演示视频中看起来很容易。在生产中是……混乱。  微小的措辞调整=完全不同的行为 不可能单位测试；每次跑步都是一场新的冒险 一个大型推出意味着一位工程师可以打破整个事情•SOC-2评论家讨厌“无可教性”故事  我们希望我们希望可预测后端服务和LLM的灵活性。因此，我们构建了NOMOS：基于步骤的州机器发动机，它包装了任何LLM（OpenAI，Claude，Local）。每个状态都是明确的，可测试的，并且可以独立拥有 - 想想git友好的差异yaml。 href =“ https://github.com/dowhile/nomos”&gt; https://github.com/dowhile/nomos    文档： 向前看：我们还在原型kosmos进行原型型，这是一个可以在单个控制平面后面部署NOMOS或其他框架的“ Vercel”。如果听起来有用，请加入候补名单以获取有限数量的人的免费付费会员资格。立刻。 会喜欢任何用片状迅速代理商摔跤的人的战争故事。最伤害的是什么？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/no-base-1700       [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsw57m/we_built_an_aiagent_with_a_state_machine_instead/</guid>
      <pubDate>Sun, 06 Jul 2025 08:17:47 GMT</pubDate>
    </item>
    <item>
      <title>反向工程反欺骗技术（带有内森·巴格斯！）</title>
      <link>https://www.reddit.com/r/programming/comments/1lsw1xh/reverse_engineering_antidebugging_techniques_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/razerog       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsw1xh/reverse_engineering_antidebugging_techniques_with/</guid>
      <pubDate>Sun, 06 Jul 2025 08:11:34 GMT</pubDate>
    </item>
    <item>
      <title>10个工程术语，会让您像高年级一样思考</title>
      <link>https://www.reddit.com/r/programming/comments/1lsvuhz/10_engineering_terms_that_will_make_you_think/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/strategizeyourcareer   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsvuhz/10_engineering_terms_that_will_make_you_think/</guid>
      <pubDate>Sun, 06 Jul 2025 07:57:55 GMT</pubDate>
    </item>
    <item>
      <title>TG频道向前消息</title>
      <link>https://www.reddit.com/r/programming/comments/1lsuvst/tg_channel_forward_messages/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我以讲座的方式进入了频道，然后被删除（尽管我永远购买了访问）我想再次输入并向自己发送所有信息（主要是有视频材料），我该怎么做？最好创建自己的小组并将所有内容转移到那里？谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/mmeloff     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsuvst/tg_channel_forward_messages/</guid>
      <pubDate>Sun, 06 Jul 2025 06:52:40 GMT</pubDate>
    </item>
    <item>
      <title>GitHub -Tuikit是一个C ++框架，旨在构建丰富的交互式终端/文本用户界面（TUIS）。</title>
      <link>https://www.reddit.com/r/programming/comments/1lstx49/github_tuikit_is_a_c_framework_designed_to_build/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/fanmacturbo     &lt;a href =“ https://www.reddit.com/r/programming/comments/1lstx49/github_tuikit_is_is_a_framework_designed_to_build/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lstx49/github_tuikit_is_a_c_framework_designed_to_build/</guid>
      <pubDate>Sun, 06 Jul 2025 05:50:32 GMT</pubDate>
    </item>
    <item>
      <title>Google的巨大论文解释了</title>
      <link>https://www.reddit.com/r/programming/comments/1lsth35/googles_bigtable_paper_explained/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lazyhawk20     lincl&gt; lincl&gt; lincl&gt;&gt;   [&gt; [&gt;]   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsth35/googles_bigtable_paper_explained/</guid>
      <pubDate>Sun, 06 Jul 2025 05:22:55 GMT</pubDate>
    </item>
    <item>
      <title>C3 vs C ++ 17</title>
      <link>https://www.reddit.com/r/programming/comments/1lsq171/c3_vs_c17/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsq171/c3_vs_c17/</guid>
      <pubDate>Sun, 06 Jul 2025 02:01:23 GMT</pubDate>
    </item>
    <item>
      <title>（文章）NVIDIA：在安全 - 关键软件开发领域的新时代中采用Spark Ushers</title>
      <link>https://www.reddit.com/r/programming/comments/1lsc79p/article_nvidia_adoption_of_spark_ushers_in_a_new/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这篇文章是强烈建议阅读的，对于认真建立安全，安全和高融合系统的任何人。  一些直接的亮点：   “ Nvidia检查了其软件开发方法的所有方面，询问自己需要进化哪些部分。他们开始质疑使用他们对关键嵌入式应用程序所拥有的传统语言和工具的成本。” “如果我们只是停止使用c？”    “在短短三个月内，较小的概念证明（POC）团队能够将两个代码基准中的几乎所有代码从C转换为Spark。在这样做时，他们实现了这两个应用程序的安全性稳健性的重大改进。与Spark Ramp的成本相关的（训练，实验，新工具的发现等）被应用程序安全性和验证效率的提高所抵消，从而提供了有吸引力的权衡。 -  NVIDIA GPU软件安全高级经理James Xu    “高水平的信任度大大减轻了评论的负担和维护工作。这对我和我们的客户来说都是巨大的。” -  NVIDIA的主要软件工程师Cameron Buschardt    “看着来自Spark产生的组件，它与C代码几乎相同……”，“我根本没有看到任何性能差异。我们证明了我们所有的所有物业。我们无需启用运行时间检查。” -  NVIDIA的主要软件工程师Cameron Buschardt     “亲眼目睹了积极的效果和正式方法对他们的工作和客户的融洽关系，许多NVIDIA工程师，最初持怀疑态度的NVIDIA工程师都会变得热情洋溢。高融合软件开发，本文值得您花费时间。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dragon_spirit_wtp     [link]     [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsc79p/article_nvidia_adoption_of_spark_ushers_in_a_new/</guid>
      <pubDate>Sat, 05 Jul 2025 15:16:17 GMT</pubDate>
    </item>
    </channel>
</rss>