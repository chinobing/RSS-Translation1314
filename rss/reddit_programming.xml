<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 07 Oct 2025 12:39:30 GMT</lastBuildDate>
    <item>
      <title>使用Docker Model Runner在本地运行LLMS-这是我的完整设置指南</title>
      <link>https://www.reddit.com/r/programming/comments/1o0clg3/running_llms_locally_with_docker_model_runner/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我终于使用Docker Model Runner移动了本地所有内容。以为我会分享我学到的东西。 我发现的关键好处：   - 完整的数据隐私（无数据离开我的机器）   - 可以同时运行多个型号   - 与Docker Hub一起使用docker Hub和Hugging Face     -  openai-openai-apibible api api ateptions aff toct at trip at trip aft y/p&gt;设置了   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/orewadevelvemer       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0clg3/running_llms_locally_with_docker_model_runner/</guid>
      <pubDate>Tue, 07 Oct 2025 11:52:22 GMT</pubDate>
    </item>
    <item>
      <title>一旦进入末端，就从向后的一些步骤开始</title>
      <link>https://www.reddit.com/r/programming/comments/1o0bish/once_in_a_deadend_begin_with_some_steps_backwards/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/meerkatboss      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0bish/once_in_a_deadend_begin_with_some_steps_backwards/</guid>
      <pubDate>Tue, 07 Oct 2025 10:58:28 GMT</pubDate>
    </item>
    <item>
      <title>拥有您的入职：定义您的职业的前90天</title>
      <link>https://www.reddit.com/r/programming/comments/1o0axfl/own_your_onboarding_the_first_90_days_that_define/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pepincho     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0axfl/own_your_onboarding_the_first_90_days_that_define/</guid>
      <pubDate>Tue, 07 Oct 2025 10:24:14 GMT</pubDate>
    </item>
    <item>
      <title>我不喜欢OOP</title>
      <link>https://www.reddit.com/r/programming/comments/1o0auu5/i_dont_like_oop/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  早上好。我有一个问题要问您。 您绝对熟悉面向对象的编程。那么，您对PHP的界面，抽象类等有很好的了解吗？您使用它们吗？ 因为我不愿意使用它们。我不喜欢OOP，调试似乎也更麻烦。 我更喜欢功能性编程。  Laravel雄辩的雄辩，另一方面，似乎是使用OOP的好方法。但是，与查询构建器相比，它慢得多。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/giuseppe_puleri        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0auu5/i_dont_like_oop/</guid>
      <pubDate>Tue, 07 Oct 2025 10:20:04 GMT</pubDate>
    </item>
    <item>
      <title>在Doctolib规模上优化Ruby在铁轨测试中</title>
      <link>https://www.reddit.com/r/programming/comments/1o0atf1/optimizing_ruby_on_rails_tests_at_doctolib_scale/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/robbyrussell     [link]        &lt;a href =“ https://www.reddit.com/r/programming/comments/1o0atf1/optimizing_ruby_rail_rail_rails_tests_at_at_ doctolib_scale/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0atf1/optimizing_ruby_on_rails_tests_at_doctolib_scale/</guid>
      <pubDate>Tue, 07 Oct 2025 10:17:41 GMT</pubDate>
    </item>
    <item>
      <title>为什么AI没有阻止我学习编码</title>
      <link>https://www.reddit.com/r/programming/comments/1o0amb8/why_ai_didnt_stop_me_from_learning_to_code/</link>
      <description><![CDATA[我最近发表了第一篇博客文章，讲述了在人工智能炒作势头强劲之际，为什么我选择继续学习编码。在这篇文章中，我认为任何即将到来的革命，无论是人工智能还是其他方面，都不会否定编码或学习计算机科学概念的需要。我从悲观和乐观的角度来论证这一点。 在我写作时，我可能犯了一些错误，尤其是在科学分类部分，但我只是想在它们变得无关紧要之前“把我的想法表达出来”（因为每个人都意识到人工智能实际上并没有取代程序员或编码）。另外，英语不是我的母语，所以我可能误解了我想说的一些观点。 我希望你喜欢阅读它！   由   提交 /u/AmmarAldawood   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0amb8/why_ai_didnt_stop_me_from_learning_to_code/</guid>
      <pubDate>Tue, 07 Oct 2025 10:06:12 GMT</pubDate>
    </item>
    <item>
      <title>单个YouTube选项卡使用的RAM比Apollo Moon Landing Guente Computs高314,573倍</title>
      <link>https://www.reddit.com/r/programming/comments/1o0a3p8/a_single_youtube_tab_uses_314573_times_more_ram/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   1.2GB vs vs 4kb  实际上现在已经进入歌曲5分钟了，现在它占1.4GB  ，我在M3 MacBook Air上只有8GB。 编码。 的斗争是一场挣扎，而无需崩溃。 href =“ https://imgur.com/a/a/2wfgptj”&gt; https://imgur.com/a/a/2wfgptj     &lt;！ -  sc_on-&gt; &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/luginugiog      &lt;a href =“ https://www.reddit.com/r/programming/comments/1o0a3p8/a_single_youtube_tab_tab_tab_tab_tab_tab_314573_times_more_more_more_ram/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0a3p8/a_single_youtube_tab_uses_314573_times_more_ram/</guid>
      <pubDate>Tue, 07 Oct 2025 09:34:12 GMT</pubDate>
    </item>
    <item>
      <title>Netxenium：网络自动化的脚本语言和框架</title>
      <link>https://www.reddit.com/r/programming/comments/1o09ugw/netxenium_scripting_language_and_framework_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    netxenium：网络自动化的语言和框架 我正在开发 netxenium ，一种编程语言和网络框架，在C中构建的编程语言和网络框架，旨在自动化网络任务，启用preef interface and pree fige and prece   带有递归解析器和自定义脚本语言。自动化。  动态数据注册编程模型。   可扩展的API 通过C和脚本中的模块。 运行时支持 runtime Supports 动态键入，动态键入，内置，OOP，OOP，OP，OP和Modules 。 macos。   开源  gplv3 许可。   当前状态             支持动态键入，基本类型，可召唤的对象，基本的OP，基本的OP，强度       实施的递归下降解析器。 下一步：编译器和基于堆栈的VM 使用运行时执行字节。    下一步           核心。  反馈请求 我很想听听您对这个项目的想法，对这个想法的看法以及任何反馈，以帮助指导进一步的发展。  link      &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/more-revenue-4590        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o09ugw/netxenium_scripting_language_and_framework_for/</guid>
      <pubDate>Tue, 07 Oct 2025 09:17:30 GMT</pubDate>
    </item>
    <item>
      <title>构建时间环境变量认为有害</title>
      <link>https://www.reddit.com/r/programming/comments/1o0983c/buildtime_environment_variables_considered_harmful/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/flaten normhappy1554     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0983c/buildtime_environment_variables_considered_harmful/</guid>
      <pubDate>Tue, 07 Oct 2025 08:37:59 GMT</pubDate>
    </item>
    <item>
      <title>做了一个用于重构的VSCODE扩展</title>
      <link>https://www.reddit.com/r/programming/comments/1o08kmv/made_an_vscode_extension_for_refactoring/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/laovejabohem     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o08kmv/made_an_vscode_extension_for_refactoring/</guid>
      <pubDate>Tue, 07 Oct 2025 07:55:05 GMT</pubDate>
    </item>
    <item>
      <title>批处理文件衬里</title>
      <link>https://www.reddit.com/r/programming/comments/1o08ctb/batch_file_linter/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，我做了一个批处理文件linter，我正在寻找一些有关其功能的反馈，如果您喜欢的话，请让我知道：   https://github.com/tboy1337/blinter    如果您喜欢该项目，请在Github上给Github上的明星，谢谢。提交由＆＃32; /u/u/ok_bottle8789      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o08ctb/batch_file_linter/</guid>
      <pubDate>Tue, 07 Oct 2025 07:40:47 GMT</pubDate>
    </item>
    <item>
      <title>我将Python推到了20,000个请求/第二秒。这是我使用的代码和内核调整。</title>
      <link>https://www.reddit.com/r/programming/comments/1o087dh/i_pushed_python_to_20000_requests_sentsecond/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想分享一个个人项目，探索高通量网络I/O的Python限制。我的客户总是会说“大声笑否python，只能走”，所以我想看看实际上可能发生的事情。 经过大量调整，我设法从单个客户端机器那里获得了稳定的 〜20,000请求/秒。高性能锈库 Wreq 的Python包装器。这使我能够以实际网络的生锈速度来获得Python的开发人员友好的语法。 最有趣的部分不是代码，而是OS调整。 Linux上的默认内核设置尚未为这种负载准备。如果没有这些更改，该应用程序将立即失败。 这是我在客户端和服务器上都必须更改的最关键设置：  增加了最大文件描述符：每个插座都是文件。 1024的默认限制是您要击中的第一件事。默认值为tiny.net.core.somaxconn = 65535  启用了time_wait重复使用：这很大。它允许内核快速重复使用时间_ WAIT状态的插座，当您打开/关闭每秒数千个连接时，这是至关重要的。如果您想复制它或只是查看代码：  github repo：  8核机，此设置命中〜15K req/s，并在32核机上缩放为〜20k Req/s。有趣的是，CPU从未完全最大化，因此瓶颈很可能位于堆栈中的其他地方。 我会在评论中闲逛以回答任何问题。让我知道您的想法！  博客文章（我更细节）： https://tjaycodes.com/pushing-pushing-pushing-python-to-python-to-20000--requests-second/   提交由＆＃32; /u/u/lafftar      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o087dh/i_pushed_python_to_20000_requests_sentsecond/</guid>
      <pubDate>Tue, 07 Oct 2025 07:30:45 GMT</pubDate>
    </item>
    <item>
      <title>对真正的Captcha的安全更新 - 一个为关心隐私和零跟踪的开发人员而构建的轻巧的开放式验证码。</title>
      <link>https://www.reddit.com/r/programming/comments/1o0842b/security_updates_to_genuine_captcha_a_lightweight/</link>
      <description><![CDATA[ 由   提交/u/love2Bbreath3Dlife   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o0842b/security_updates_to_genuine_captcha_a_lightweight/</guid>
      <pubDate>Tue, 07 Oct 2025 07:24:43 GMT</pubDate>
    </item>
    <item>
      <title>本周：OpenAI $ 500B，Microsoft vs. Nvidia和10个远程开发工作（$ 120-267K）</title>
      <link>https://www.reddit.com/r/programming/comments/1o07st4/this_week_openai_500b_microsoft_vs_nvidia_and_10/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/maxgcd      &lt;a href =“ https://www.reddit.com/r/programming/comments/1o07st4/this_week_week_openai_500b_microsoft_vs_nvidia_and_and_and_10/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o07st4/this_week_openai_500b_microsoft_vs_nvidia_and_10/</guid>
      <pubDate>Tue, 07 Oct 2025 07:04:47 GMT</pubDate>
    </item>
    <item>
      <title>因此，您想堆叠对开发人员的排名吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1o07ghf/so_you_want_to_stack_rank_your_developers/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  下次有一些新的倡议闻起来像堆栈排名  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/useistic_skill5527        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o07ghf/so_you_want_to_stack_rank_your_developers/</guid>
      <pubDate>Tue, 07 Oct 2025 06:43:19 GMT</pubDate>
    </item>
    </channel>
</rss>