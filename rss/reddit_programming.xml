<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 05 Jul 2025 18:24:37 GMT</lastBuildDate>
    <item>
      <title>SIMD（向量）函数的混乱现实</title>
      <link>https://www.reddit.com/r/programming/comments/1lsgajr/the_messy_reality_of_simd_vector_functions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/emschwartz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsgajr/the_messy_reality_of_simd_vector_functions/</guid>
      <pubDate>Sat, 05 Jul 2025 18:16:05 GMT</pubDate>
    </item>
    <item>
      <title>Bold Devlog-六月摘要（线程和异步事件）</title>
      <link>https://www.reddit.com/r/programming/comments/1lsg8qz/bold_devlog_june_summary_threads_async_events/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/levodelellis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsg8qz/bold_devlog_june_summary_threads_async_events/</guid>
      <pubDate>Sat, 05 Jul 2025 18:13:53 GMT</pubDate>
    </item>
    <item>
      <title>在Rust中重新构想OS内核 - 一个干净的开始，而不仅仅是重写</title>
      <link>https://www.reddit.com/r/programming/comments/1lsg2xn/reimagining_the_os_kernel_in_rust_a_clean_start/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嗨， ，我已经开始从事一个名为 ruxos 的实验性操作系统项目 -   ruxos   - 在 Rust 中构建，着眼于 Rust ，着眼于内存安全性，模块化安全性，模块化和现代系统设计。这是一种尝试重新考虑如果我们今天设计的OS内核可能会是什么样子，而不是在90年代，不在C中，而不是承担数十年的遗产行李。 🧠为什么不只是使用linux？  linux呢？整个 新的开发人员很难为 文化和技术障碍（邮寄清单，C宏等） 当CPU和用户需求非常不同时，设计选择是非常不同 hygiene. 🛠️ What RuxOS Is (and Isn’t) It is:  A kernel built in Rust, from boot to core logic An experiment in modern OS architecture with modular components A learning-focused, open-source project with a long-term mindset  It is not:  A production-ready OS A clone of Linux or BSD A claim that Rust can magically solve everything  💬 Why I’m Posting This is part experiment, part challenge, part critique — of both technical legacy and the social dynamics of内核开发。 如果您喜欢操作系统内部，系统编程，或者就像观看大胆但地面开源的开源进化一样 - 查看它。 都会喜欢技术反馈，怀疑主义，甚至是来自曾经在Kernel/os Design中的杂草的人那里的历史课程。提交由＆＃32; /u/u/naturally_hot      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsg2xn/reimagining_the_os_kernel_in_rust_a_clean_start/</guid>
      <pubDate>Sat, 05 Jul 2025 18:06:42 GMT</pubDate>
    </item>
    <item>
      <title>尝试紫外线：Python软件包管理的未来</title>
      <link>https://www.reddit.com/r/programming/comments/1lsfqj9/trying_uv_the_future_of_python_package_management/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/yangzhou1993      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsfqj9/trying_uv_the_future_of_python_package_management/</guid>
      <pubDate>Sat, 05 Jul 2025 17:51:41 GMT</pubDate>
    </item>
    <item>
      <title>我想离开技术：我该怎么办？</title>
      <link>https://www.reddit.com/r/programming/comments/1lsf3h8/i_want_to_leave_tech_what_do_i_do/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/chobeat     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsf3h8/i_want_to_leave_tech_what_do_i_do/</guid>
      <pubDate>Sat, 05 Jul 2025 17:23:09 GMT</pubDate>
    </item>
    <item>
      <title>GIT专家应该尝试Jujutsu</title>
      <link>https://www.reddit.com/r/programming/comments/1lsdkhl/git_experts_should_try_jujutsu/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/steveklabnik1      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsdkhl/git_experts_should_try_jujutsu/</guid>
      <pubDate>Sat, 05 Jul 2025 16:16:51 GMT</pubDate>
    </item>
    <item>
      <title>Node.js采访问答：第17天</title>
      <link>https://www.reddit.com/r/programming/comments/1lsdk6o/nodejs_interview_qa_day_17/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsdk6o/nodejs_interview_qa_day_17/</guid>
      <pubDate>Sat, 05 Jul 2025 16:16:27 GMT</pubDate>
    </item>
    <item>
      <title>Angular面试问答：第23天</title>
      <link>https://www.reddit.com/r/programming/comments/1lsdjq2/angular_interview_qa_day_23/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsdjq2/angular_interview_qa_day_23/</guid>
      <pubDate>Sat, 05 Jul 2025 16:15:54 GMT</pubDate>
    </item>
    <item>
      <title>从大数据到大数据：重新考虑AI堆栈-Datachain</title>
      <link>https://www.reddit.com/r/programming/comments/1lsdgsq/from_big_data_to_heavy_data_rethinking_the_ai/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/feastem       [注释]    ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsdgsq/from_big_data_to_heavy_data_rethinking_the_ai/</guid>
      <pubDate>Sat, 05 Jul 2025 16:12:24 GMT</pubDate>
    </item>
    <item>
      <title>本地第一软件更容易扩展</title>
      <link>https://www.reddit.com/r/programming/comments/1lsd8p8/local_first_software_is_easier_to_scale/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/chilipepperhott      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsd8p8/local_first_software_is_easier_to_scale/</guid>
      <pubDate>Sat, 05 Jul 2025 16:02:40 GMT</pubDate>
    </item>
    <item>
      <title>``我得到了解决由AI造成的问题的报酬''</title>
      <link>https://www.reddit.com/r/programming/comments/1lsb6ja/im_being_paid_to_fix_issues_caused_by_ai/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/grauenwolf       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsb6ja/im_being_paid_to_fix_issues_caused_by_ai/</guid>
      <pubDate>Sat, 05 Jul 2025 14:30:11 GMT</pubDate>
    </item>
    <item>
      <title>为什么软件团队随着他们的成长而放慢脚步？ （观察和自以为是的作品）</title>
      <link>https://www.reddit.com/r/programming/comments/1lsa7xz/why_do_software_teams_slow_down_as_they_grow/</link>
      <description><![CDATA[I’ve worked on a bunch of teams where things started off great, with fast progress and lots of laughs, but then slowly got bogged down as the team grew. I tried to put together an honest list of what actually makes software teams grind to a halt: dominance, fake harmony, speed traps, and so on.其中一些是我自己的搞砸。 好奇其他人是否看到了相同的情况。有没有办法避免这种情况，或者只是在软件中工作的一部分？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/youcans33m3    href =“ https://medium.com/readers-club/why-software-development-gets-gets-harder-in-teams-38501f28b40b?sk=97f4d40f40f40f40f1939b306b306b306b106b1029adada77ab14   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lsa7xz/why_do_software_teams_slow_down_as_they_grow/</guid>
      <pubDate>Sat, 05 Jul 2025 13:44:28 GMT</pubDate>
    </item>
    <item>
      <title>结构化并发：分层取消和错误处理•詹姆斯·沃德</title>
      <link>https://www.reddit.com/r/programming/comments/1ls9rg9/structured_concurrency_hierarchical_cancellation/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ls9rg9/structured_concurrency_hierarchical_cancellation/</guid>
      <pubDate>Sat, 05 Jul 2025 13:21:24 GMT</pubDate>
    </item>
    <item>
      <title>Emmett-活动采购使实用，有趣且直接</title>
      <link>https://www.reddit.com/r/programming/comments/1ls7db2/emmett_event_sourcing_made_practical_fun_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/Adventurous-salt8514      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ls7db2/emmett_event_sourcing_made_practical_fun_and/</guid>
      <pubDate>Sat, 05 Jul 2025 11:05:51 GMT</pubDate>
    </item>
    <item>
      <title>一个基于结构化概念的路线图，用于大规模学习后端工程</title>
      <link>https://www.reddit.com/r/programming/comments/1ls4nh3/a_structured_notionbased_roadmap_for_learning/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，我是印度的一名软件工程师，在印度拥有〜2年的经验，目前为后端faang和高增长的启动角色磨损。为了保持结构化，我建立了一个基于概念的研究系统，并详细介绍了每个核心后端＆amp;我正在学习的系统设计主题。 📚我到目前为止涵盖的主题：   java，java，春季靴子，冬眠，maven  系统设计：lld + hld，微服务，kafka     devops Apache Airflow, ElasticSerach DSA + some AI/ML basics  🎯 I use it to:  Curate key resources and notes Track progress across all topics Prepare for interviews and deepen real-world backend skills  Here’s the full page: 👉 我的诺言研究计划（公共）      促销 - 我真正使用的东西，并想在类似的道路上为他人开放源。会喜欢的：  建议改善计划的建议 您发现有用的新资源 其他人如何管理他们的学习！  希望这对某人有帮助。让我们继续互相支持。提交由＆＃32; /u/u/most_scholar_5992     [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ls4nh3/a_structured_notionbased_roadmap_for_learning/</guid>
      <pubDate>Sat, 05 Jul 2025 07:57:01 GMT</pubDate>
    </item>
    </channel>
</rss>