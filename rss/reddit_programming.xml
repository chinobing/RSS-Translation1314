<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 11 Sep 2025 21:15:07 GMT</lastBuildDate>
    <item>
      <title>MCP与特工编排框架（Langgraph，Crewai等）</title>
      <link>https://www.reddit.com/r/programming/comments/1nekiww/mcp_vs_agent_orchestration_frameworks_langgraph/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/congolomera     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nekiww/mcp_vs_agent_orchestration_frameworks_langgraph/</guid>
      <pubDate>Thu, 11 Sep 2025 21:02:18 GMT</pubDate>
    </item>
    <item>
      <title>斯坦价格</title>
      <link>https://www.reddit.com/r/programming/comments/1nekcgp/stan_price/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   reddit做您的应授权并为此人提供资金  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/noobpcbuilds      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nekcgp/stan_price/</guid>
      <pubDate>Thu, 11 Sep 2025 20:55:19 GMT</pubDate>
    </item>
    <item>
      <title>开发人员倦怠的真正原因</title>
      <link>https://www.reddit.com/r/programming/comments/1nei4ig/the_real_reasons_why_developers_burnout/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  当人们谈论“开发人员倦怠”时，假设工程师工作太多小时，而淹没了代码。 But after 20+ years in this industry, I’ve rarely seen burnout caused by too much coding. Instead, developers burn out because of the environment around coding: * Unclear priorities — constant shifting goals, wasted effort. * Constant interruptions — meetings, Slack pings, context switching. * Politics — decisions driven by ego instead of merit. 代码复杂性可能很困难，但这是合乎逻辑的。您可以对其进行重构，测试，改进它。混乱是不同的。您无法调试中断或重构不清楚的优先级。  我对开发人员的建议陷入了这些环境。  *知道何时离开不会改变的文化。 思想？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/u/bajcmartinez      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nei4ig/the_real_reasons_why_developers_burnout/</guid>
      <pubDate>Thu, 11 Sep 2025 19:28:59 GMT</pubDate>
    </item>
    <item>
      <title>异步编程的兴起</title>
      <link>https://www.reddit.com/r/programming/comments/1nehbw7/the_rise_of_async_programming/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/doniisthemaindog     lincl&gt; link&gt; link&gt;    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nehbw7/the_rise_of_async_programming/</guid>
      <pubDate>Thu, 11 Sep 2025 18:58:31 GMT</pubDate>
    </item>
    <item>
      <title>React Hooks仅在2025年简单地解释[旁遮普语]  -  USESTATE，USEFECT，USEREF</title>
      <link>https://www.reddit.com/r/programming/comments/1negekx/react_hooks_explained_simply_in_2025_punjabi/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/chintanbawa       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1negekx/react_hooks_explained_simply_in_2025_punjabi/</guid>
      <pubDate>Thu, 11 Sep 2025 18:23:04 GMT</pubDate>
    </item>
    <item>
      <title>带打字稿装饰器和反射的域驱动设计</title>
      <link>https://www.reddit.com/r/programming/comments/1neg7r4/domaindriven_design_with_typescript_decorators/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://auslake.vercel.app/blog/domain-driven-design-with-typescript-decorators”&gt; [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neg7r4/domaindriven_design_with_typescript_decorators/</guid>
      <pubDate>Thu, 11 Sep 2025 18:15:43 GMT</pubDate>
    </item>
    <item>
      <title>2025年8月（版本1.104）</title>
      <link>https://www.reddit.com/r/programming/comments/1neg7g2/august_2025_version_1104/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/feross       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neg7g2/august_2025_version_1104/</guid>
      <pubDate>Thu, 11 Sep 2025 18:15:24 GMT</pubDate>
    </item>
    <item>
      <title>内存完整性执法：苹果设备中记忆安全的完整愿景</title>
      <link>https://www.reddit.com/r/programming/comments/1nef0lt/memory_integrity_enforcement_a_complete_vision/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nef0lt/memory_integrity_enforcement_a_complete_vision/</guid>
      <pubDate>Thu, 11 Sep 2025 17:30:26 GMT</pubDate>
    </item>
    <item>
      <title>将HTTP请求作为类型安全的打字稿类管理</title>
      <link>https://www.reddit.com/r/programming/comments/1nef09j/managing_http_requests_as_typesafe_typescript/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  背景：常见疼痛点 在打字稿项目中编写HTTP请求时，我们经常遇到这些问题：      散布代码：样式：每个开发人员的写作函数的写作功能都不同。功能内的一些突变输入值，另一些使用外部实用程序。 →这会导致可重复性差和更艰难的维护。  操作差异：使用许多API时，每个API可能具有略有不同的超时和重试策略。将这些策略用于每个功能的硬编码很快就会变得凌乱。  可读性问题：并不总是清楚给定值是路径参数，查询字符串还是标题。不同的开发人员对它们的定义有所不同，并且共享代码库的长期维护变得更加困难。模式。 在请求级别清晰地指定超时，重试和其他操作策略。 使一个值是否属于路径，查询，头部或身体是否属于一个值。     最有效的方法可以  strort and Strort and Strort and Strort and drogn 清楚地描述了结构和策略：  使用 u/get ， u/param ， u/query ，u/Body to define the request. Attach operational policies like timeout and retry directly to the request class. Reading the class immediately reveals what is path/query/header/body.  After several iterations, I built a library around this approach:  jin-frame 。  jin-frame允许您将HTTP请求设计为输入文章类，类似于类似于typeorm或mikroorm之类的ORMS类似于typeorm或Mikroorm如何设计实体。 &#39;jin-frame&#39;;从&#39;node：crypto&#39;导入{Randomuuid}; u/get（{host：&#39;https：//pokeapi.co&#39;，路径：&#39;/api/v2/pokemon/：name&#39;，}）导出类PokemonFrame扩展了Jinframe {@param（@param（）exlare parlion public readonly name：string：string; string; string; @query（）声明公共Readonly TID：string; }（async（）=＆gt; {const frame = pokemonframe.of（{name：&#39;pikachu&#39;，tid：randomuuid（），}，}）; const reploy =等待frame.execute（）; // show pikachu data console.log.log.log.log（reploy.data）     @param（）将一个值映射到路径（：name）。  @query（）映射一个值中的值（？tid = ...）。 调用execute（nater execute（nectecute（calle execute（calle ececute（calle ececute））执行请求和返回JSON响应。个人已经有一段时间了，事实证明，它在我自己的项目中确实有用。这就是为什么我决定与其他开发人员共享 jin-frame   - 不仅是作为一个完成的工具，而且可以继续改进的东西。 如果您尝试并分享您的反馈，这将使您的反馈更好，这将使您的反馈更好。我希望Jin-Frame也可以对您的项目有所帮助，我很想听听它如何适合您。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/imjuni       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nef09j/managing_http_requests_as_typesafe_typescript/</guid>
      <pubDate>Thu, 11 Sep 2025 17:30:03 GMT</pubDate>
    </item>
    <item>
      <title>边缘案例第一库的膨胀</title>
      <link>https://www.reddit.com/r/programming/comments/1neezti/the_bloat_of_edgecase_first_libraries/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neezti/the_bloat_of_edgecase_first_libraries/</guid>
      <pubDate>Thu, 11 Sep 2025 17:29:35 GMT</pubDate>
    </item>
    <item>
      <title>JSON的新实验GO API</title>
      <link>https://www.reddit.com/r/programming/comments/1neezq6/a_new_experimental_go_api_for_json/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neezq6/a_new_experimental_go_api_for_json/</guid>
      <pubDate>Thu, 11 Sep 2025 17:29:29 GMT</pubDate>
    </item>
    <item>
      <title>在Scala中作为功能的影响</title>
      <link>https://www.reddit.com/r/programming/comments/1neeyu5/effects_as_capabilities_in_scala/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neeyu5/effects_as_capabilities_in_scala/</guid>
      <pubDate>Thu, 11 Sep 2025 17:28:31 GMT</pubDate>
    </item>
    <item>
      <title>Kotlin 2.2.20的新功能</title>
      <link>https://www.reddit.com/r/programming/comments/1neeyr2/whats_new_in_kotlin_2220/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neeyr2/whats_new_in_kotlin_2220/</guid>
      <pubDate>Thu, 11 Sep 2025 17:28:26 GMT</pubDate>
    </item>
    <item>
      <title>在自由线程python上缩放异步</title>
      <link>https://www.reddit.com/r/programming/comments/1neeyfz/scaling_asyncio_on_freethreaded_python/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neeyfz/scaling_asyncio_on_freethreaded_python/</guid>
      <pubDate>Thu, 11 Sep 2025 17:28:06 GMT</pubDate>
    </item>
    <item>
      <title>板条：建立在对象存储上的嵌入式数据库</title>
      <link>https://www.reddit.com/r/programming/comments/1neey75/slatedb_an_embedded_database_built_on_object/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1neey75/slatedb_an_embedded_database_built_on_object/</guid>
      <pubDate>Thu, 11 Sep 2025 17:27:49 GMT</pubDate>
    </item>
    </channel>
</rss>