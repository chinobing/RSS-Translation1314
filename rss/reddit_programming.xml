<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 08 Aug 2025 04:06:15 GMT</lastBuildDate>
    <item>
      <title>I have created a program using whileloop.提示似乎会进入Valu，直到类型大于10</title>
      <link>https://www.reddit.com/r/programming/comments/1mkknq3/i_have_created_a_program_using_whileloop_prompt/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Outrageous-Ask-2940   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkknq3/i_have_created_a_program_using_whileloop_prompt/</guid>
      <pubDate>Fri, 08 Aug 2025 03:32:15 GMT</pubDate>
    </item>
    <item>
      <title>疤痕 - 一种易于并发的语言，静态键入，带有干净的语法</title>
      <link>https://www.reddit.com/r/programming/comments/1mkhznb/scar_a_language_for_easy_concurrency_statically/</link>
      <description><![CDATA[Because of the poor state of multithreading in Nim and the reliance on external libraries like Arraymancer for heavy numerical workloads (also the performance issues with boxed values due to ref object everywhere), I started writing a language from scratch, with built-in support for concurrency via parallel blocks (without macros) and a C backend, similar to Nim. Example: int glob_value = 0 float glob_value_2 = 0.0 parallel: glob_value = some_heavy_task() glob_value_2 = some_other_heavy_task()  The idea is to make things like accessing shared memory concurrently a trivial process by automating the generation of thread synchronization code. Also there are parallel fors, like so: parallel for x = 1 to 5: print &quot;x = %d&quot; | x parallel for y = 10 to 20: print &quot;y = %d&quot; | y sleep 0.1 print &quot;Nested parallel for loop completed.&quot;   目前尚未准备好使用它，尽管在此之前可能会看到进一步的开发。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/god1235414   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkhznb/scar_a_language_for_easy_concurrency_statically/</guid>
      <pubDate>Fri, 08 Aug 2025 01:21:55 GMT</pubDate>
    </item>
    <item>
      <title>用C为游戏男孩制作D＆D游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1mke9gt/making_a_dd_game_for_the_game_boy_with_c/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Pikamander2   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mke9gt/making_a_dd_game_for_the_game_boy_with_c/</guid>
      <pubDate>Thu, 07 Aug 2025 22:34:27 GMT</pubDate>
    </item>
    <item>
      <title>c</title>
      <link>https://www.reddit.com/r/programming/comments/1mkctct/hash_tables_in_c/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在“讨论”中找到了一些灵感。关于C vs c ++   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/thepan73   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkctct/hash_tables_in_c/</guid>
      <pubDate>Thu, 07 Aug 2025 21:35:03 GMT</pubDate>
    </item>
    <item>
      <title>GPT-5发布：绩效主张实际上对软件开发人员意味着什么</title>
      <link>https://www.reddit.com/r/programming/comments/1mk9z75/gpt5_released_what_the_performance_claims/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ImpressiveContest283   [link] ＆＃32; [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk9z75/gpt5_released_what_the_performance_claims/</guid>
      <pubDate>Thu, 07 Aug 2025 19:45:31 GMT</pubDate>
    </item>
    <item>
      <title>向招聘人员发送游戏男孩而不是简历</title>
      <link>https://www.reddit.com/r/programming/comments/1mk9qm8/sending_recruiters_a_game_boy_instead_of_a_resume/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Siftyy   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk9qm8/sending_recruiters_a_game_boy_instead_of_a_resume/</guid>
      <pubDate>Thu, 07 Aug 2025 19:36:23 GMT</pubDate>
    </item>
    <item>
      <title>我简要概述华为对坎吉的编程语言</title>
      <link>https://www.reddit.com/r/programming/comments/1mk9bex/my_brief_overview_of_cangjie_programming_language/</link>
      <description><![CDATA[在编程语言 cangjie 大约一年前 - 现在我注意到它可以下载。 So I downloaded, tried it, browsed the available documentation and created this brief overview so that colleagues can quickly get the idea of what it is. TLDR - if you have experience in Java and Go you&#39;ll find it a mix of the two with some features from other popular languages.   提交由＆＃32;  /u/RodionGork   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk9bex/my_brief_overview_of_cangjie_programming_language/</guid>
      <pubDate>Thu, 07 Aug 2025 19:20:13 GMT</pubDate>
    </item>
    <item>
      <title>用JavaScript和三个。在3D中可视化树数据结构</title>
      <link>https://www.reddit.com/r/programming/comments/1mk93j3/visualizing_tree_data_structures_in_3d_with/</link>
      <description><![CDATA[I recently built a project exploring how tree data structures can be used to generate and animate a 3D object entirely in the browser using JavaScript and Three.js. Starting with a breadth-first tree growth algorithm, I procedurally generate a branching system that respects a spatial threshold. I then construct a smooth mesh by interpolating curves between nodes, computing local coordinate systems for each segment, and generating geometry programmatically. Finally, I applied some custom shader logic to animate the mesh&#39;s growth and add depth-aware effects. While the project leans visual, the core challenge was in designing the algorithms to convert abstract tree data into a continuous, animatable 3D mesh. Here’s a breakdown if you&#39;re interested in the full process and implementation details: 👉 https://www.youtube.com/watch?v=Of-s4o0EhhI Would love to hear any feedback or suggestions for similar explorations.   提交由＆＃32;  /u/MariusBallot   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk93j3/visualizing_tree_data_structures_in_3d_with/</guid>
      <pubDate>Thu, 07 Aug 2025 19:11:50 GMT</pubDate>
    </item>
    <item>
      <title>Transformer Lab现在支持GPT -oss-简单的API，无需DEVOPS</title>
      <link>https://www.reddit.com/r/programming/comments/1mk8wns/transformer_lab_now_supports_gptoss_simple_api_no/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  变形金刚实验室是LLMS的开源平台：火车，调音，在您自己的机器上聊天。它跨平台（AMD，NVIDIA，Apple Silicon）工作。 We built it to allow ANYONE to work on frontier models across diverse architectures.  UI for common interactions (chat/rag/diffusion/audio) Pre-set up for common tasks (100’s of evals, data generation) Sharing data, models, and evals across teams And more shipping everyday…  We just推出了GPT-oss支持，并旨在成为新的Openai车型开始建造的最简单方法。 We currently support the original gpt-oss models and the gpt-oss GGUFs (from Ollama) across NVIDIA, AMD and Apple silicon as long as you have adequate hardware. We even got them to run on a T4! Please try it out and let us know what we should build next. 🔗 Download here →  https://transformerlab.ai/     🔗有用吗？ Give us a star on GitHub → https://github.com/transformerlab/transformerlab-app 🔗 Ask for help on our Discord Community →  https://discord.gg/transformerlab    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/Firm-Development1953   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mk8wns/transformer_lab_now_supports_gptoss_gptoss_simple_api_api_no/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk8wns/transformer_lab_now_supports_gptoss_simple_api_no/</guid>
      <pubDate>Thu, 07 Aug 2025 19:04:32 GMT</pubDate>
    </item>
    <item>
      <title>浮子不适用于存储美分：为什么现代财政部使用整数</title>
      <link>https://www.reddit.com/r/programming/comments/1mk7i66/floats_dont_work_for_storing_cents_why_modern/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/harsh183   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk7i66/floats_dont_work_for_storing_cents_why_modern/</guid>
      <pubDate>Thu, 07 Aug 2025 18:11:37 GMT</pubDate>
    </item>
    <item>
      <title>VS代码1.103使用GPT-5发布，工具限制增加，检查点，GIT工作室</title>
      <link>https://www.reddit.com/r/programming/comments/1mk7dkt/vs_code_1103_released_with_gpt5_tool_limit/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/connor4312       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk7dkt/vs_code_1103_released_with_gpt5_tool_limit/</guid>
      <pubDate>Thu, 07 Aug 2025 18:06:51 GMT</pubDate>
    </item>
    <item>
      <title>UTCP：MCP的更安全，可扩展的工具称呼替代品</title>
      <link>https://www.reddit.com/r/programming/comments/1mk6zd6/utcp_a_safer_scalable_toolcalling_alternative_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/juanviera23   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk6zd6/utcp_a_safer_scalable_toolcalling_alternative_to/</guid>
      <pubDate>Thu, 07 Aug 2025 17:52:10 GMT</pubDate>
    </item>
    <item>
      <title>我们应该如何从错误中学习？</title>
      <link>https://www.reddit.com/r/programming/comments/1mk4s6d/how_should_we_learn_from_bugs/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/typesanitizer   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk4s6d/how_should_we_learn_from_bugs/</guid>
      <pubDate>Thu, 07 Aug 2025 16:30:11 GMT</pubDate>
    </item>
    <item>
      <title>📘NODE.JS访谈问答：第25天</title>
      <link>https://www.reddit.com/r/programming/comments/1mk4qcw/nodejs_interview_qa_day_25/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk4qcw/nodejs_interview_qa_day_25/</guid>
      <pubDate>Thu, 07 Aug 2025 16:28:19 GMT</pubDate>
    </item>
    <item>
      <title>Litestar值得一看-James Bennett</title>
      <link>https://www.reddit.com/r/programming/comments/1mk41jp/litestar_is_worth_a_look_james_bennett/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/smipe-zucchini4923       [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mk41jp/litestar_is_worth_a_look_james_bennett/</guid>
      <pubDate>Thu, 07 Aug 2025 16:02:27 GMT</pubDate>
    </item>
    </channel>
</rss>