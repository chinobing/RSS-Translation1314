<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 21 Jul 2025 01:50:52 GMT</lastBuildDate>
    <item>
      <title>从缩放后排队到100k事件的课程</title>
      <link>https://www.reddit.com/r/programming/comments/1m55zp3/lessons_from_scaling_postgresql_queues_to_100k/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ephemeral404   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m55zp3/lessons_from_scaling_postgresql_queues_to_100k/</guid>
      <pubDate>Mon, 21 Jul 2025 01:31:04 GMT</pubDate>
    </item>
    <item>
      <title>我在刮擦中制作了自己的马里奥卡丁车</title>
      <link>https://www.reddit.com/r/programming/comments/1m55wfx/i_made_my_own_mario_kart_in_scratch/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  可能不是“真实编程”对于某些人来说，但我认为这在编程中的许多基本面中都是一个很好的练习。这不是完美的，您可以看到，当我稍后在视频中与兄弟姐妹一起播放时，很高兴知道我可以做些不同的事情。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/kuroma_maku      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m55wfx/i_made_my_own_mario_kart_in_scratch/</guid>
      <pubDate>Mon, 21 Jul 2025 01:26:45 GMT</pubDate>
    </item>
    <item>
      <title>使用Lambda和Fargate在AWS上缩放AI代理：使用MCP部署链SDK</title>
      <link>https://www.reddit.com/r/programming/comments/1m55f7u/scaling_ai_agents_on_aws_deploying_strands_sdk/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/no-abies7108     [link]    32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m55f7u/scaling_ai_agents_on_aws_deploying_strands_sdk/</guid>
      <pubDate>Mon, 21 Jul 2025 01:03:34 GMT</pubDate>
    </item>
    <item>
      <title>MirrorVM：使用反射编译WebAssembly</title>
      <link>https://www.reddit.com/r/programming/comments/1m52eb6/mirrorvm_compiling_webassembly_using_reflection/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/birdbrainswagtrain     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m52eb6/mirrorvm_compiling_webassembly_using_reflection/</guid>
      <pubDate>Sun, 20 Jul 2025 22:43:40 GMT</pubDate>
    </item>
    <item>
      <title>Vibe编码AI“ panicks”并删除生产数据库</title>
      <link>https://www.reddit.com/r/programming/comments/1m51vpw/vibecoding_ai_panicks_and_deletes_production/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/el_muchacho      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m51vpw/vibecoding_ai_panicks_and_deletes_production/</guid>
      <pubDate>Sun, 20 Jul 2025 22:21:11 GMT</pubDate>
    </item>
    <item>
      <title>LLM是使我们变得更好的程序员还是更自满？</title>
      <link>https://www.reddit.com/r/programming/comments/1m51bh4/is_llm_making_us_better_programmers_or_just_more/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  副驾驶及其堂兄在几年内从新颖性变成了背景噪音。我们中的许多人现在通过指导LLM来“编写”代码，但我一直想知道：我的技能是否在提高或萎缩，而自动完整的舞蹈？两个新的研究将辩论推向了相反的方向，我很想听听 最近的一项MIT媒体实验室研究，名为“您的大脑在chatgpt上” 对此进行了确切的调查 - 但在论文写作中。  参与者使用  no Tools 写作的参与者  表明最高的大脑活动最高的记忆      中间。   llm group （chatgpt用户）显示了最弱的神经连接性，具有更重复或公式化的写作，感觉较少的作品所有权，甚至努力回忆起他们自己的文本 https://arxiv.org/pdf/2506.08872       更糟糕的是：更糟糕的是，更糟糕的是没有llm的写作后，没有llm，那些最初使用的是b的 buck 他们的神经参与度保持下部。作者警告“认知债务”的积累。 -  通过AI过度融合引起的一种精神萎缩。 现在想象编码中发生的类似动态：早期的迹象表明编程可能会更糟。该研究的作者注意到AI辅助编程的“结果甚至更糟”。 对社区的问题：       深度与效率： llm&gt; 是否可以帮助您解决更复杂的问题，或者仅仅在您自己的理解上越来越多地产生更复杂的代码？结构算法或没有AI提示的结构算法？    co -pilot或拐杖？：在测试您的副驾驶输出时，您是否感觉像是一名导师（已经知道您要去的地方）或旁观者（解码复杂的输出）？ Apprentice‑Style Use: Could treating Copilot like a teacher - asking why, tweaking patterns, challenging its suggestions—beat using it as a straight-up code generator? Attention Span Atrophy: Do you find yourself uninterested in reading a long document or post without having LLM summarize it for you?   思想的食物：    MIT发现是基于写作，而不是编程，而是对弱记忆，创造力和所有权的警告，与Dev的工作相关。速度，不了解  arxiv 。           botton line Line Line  copiLot 如果em&gt; em&gt;如果em&gt; em&gt; em&gt; em&gt; nove  automator（作为代理AI广泛可用）。 它是提高您的开发技能还是软化它们？ 好奇地听到您的经历👇   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/primeNteNature8572      lincl&gt;    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m51bh4/is_llm_making_us_better_programmers_or_just_more/</guid>
      <pubDate>Sun, 20 Jul 2025 21:57:10 GMT</pubDate>
    </item>
    <item>
      <title>Java的教学将如何改变（或学习Java将如何变得更容易）</title>
      <link>https://www.reddit.com/r/programming/comments/1m4xeg7/how_teaching_of_java_is_about_to_change_or_how/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ewig_luftenglanz       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4xeg7/how_teaching_of_java_is_about_to_change_or_how/</guid>
      <pubDate>Sun, 20 Jul 2025 19:14:56 GMT</pubDate>
    </item>
    <item>
      <title>您的工程团队应该寻求解决客户问题</title>
      <link>https://www.reddit.com/r/programming/comments/1m4vydc/your_engineering_team_should_be_looking_to_solve/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4vydc/your_engineering_team_should_be_looking_to_solve/</guid>
      <pubDate>Sun, 20 Jul 2025 18:17:20 GMT</pubDate>
    </item>
    <item>
      <title>为什么工程师讨厌截止日期（以及如何解决）</title>
      <link>https://www.reddit.com/r/programming/comments/1m4vdyk/why_engineers_hate_deadlines_and_how_to_fix_that/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4vdyk/why_engineers_hate_deadlines_and_how_to_fix_that/</guid>
      <pubDate>Sun, 20 Jul 2025 17:55:00 GMT</pubDate>
    </item>
    <item>
      <title>追踪LN，RM和CAT的引擎盖下实际发生的事情</title>
      <link>https://www.reddit.com/r/programming/comments/1m4uo0x/traced_what_actually_happens_under_the_hood_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/blakewarburtonc     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4uo0x/traced_what_actually_happens_under_the_hood_for/</guid>
      <pubDate>Sun, 20 Jul 2025 17:26:30 GMT</pubDate>
    </item>
    <item>
      <title>丹尼斯·里奇（Dennis Ritchie）：给我们C语言的人</title>
      <link>https://www.reddit.com/r/programming/comments/1m4swa1/dennis_ritchie_the_man_who_gave_us_c_language/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  丹尼斯·里奇（Dennis Ritchie）并不是您经常听到的名字，但是没有他，我们知道今天就不存在的数字世界。他是C编程语言的创建者，该语言成为当今几乎每个主要系统的基础。除此之外，他还在建立Unix（仍然影响现代技术的操作系统中发挥了关键作用。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/heisenberg8497     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4swa1/dennis_ritchie_the_man_who_gave_us_c_language/</guid>
      <pubDate>Sun, 20 Jul 2025 16:16:23 GMT</pubDate>
    </item>
    <item>
      <title>国际象棋美洲驼 - 培训一个小骆驼模特来下棋</title>
      <link>https://www.reddit.com/r/programming/comments/1m4s25d/chess_llama_training_a_tiny_llama_model_to_play/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lazyguy -__-      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4s25d/chess_llama_training_a_tiny_llama_model_to_play/</guid>
      <pubDate>Sun, 20 Jul 2025 15:42:37 GMT</pubDate>
    </item>
    <item>
      <title>AI的强迫使用正在失控</title>
      <link>https://www.reddit.com/r/programming/comments/1m4rprc/the_forced_use_of_ai_is_getting_out_of_hand/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ullionairejoker      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4rprc/the_forced_use_of_ai_is_getting_out_of_hand/</guid>
      <pubDate>Sun, 20 Jul 2025 15:28:35 GMT</pubDate>
    </item>
    <item>
      <title>LLMS vs Brainfuck：Potemkin理解的演示</title>
      <link>https://www.reddit.com/r/programming/comments/1m4rk3r/llms_vs_brainfuck_a_demonstration_of_potemkin/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4rk3r/llms_vs_brainfuck_a_demonstration_of_potemkin/</guid>
      <pubDate>Sun, 20 Jul 2025 15:22:08 GMT</pubDate>
    </item>
    <item>
      <title>逐步了解控制和依赖注入反转的分步指南</title>
      <link>https://www.reddit.com/r/programming/comments/1m4qo8y/a_stepbystep_guide_to_understanding_inversion_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://cellosblog.hashnode.dev/how-i-i--ioc--ioc-and-di-to-to-to-r-senior-software-wardeneer”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4qo8y/a_stepbystep_guide_to_understanding_inversion_of/</guid>
      <pubDate>Sun, 20 Jul 2025 14:45:09 GMT</pubDate>
    </item>
    </channel>
</rss>