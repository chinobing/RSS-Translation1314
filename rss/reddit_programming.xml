<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 02 Sep 2025 15:20:17 GMT</lastBuildDate>
    <item>
      <title>一个有趣的无限递归案例，带有Ruby中的阵列</title>
      <link>https://www.reddit.com/r/programming/comments/1n6m8e0/an_interesting_case_of_infinite_recursion_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mehdifarsi     link&gt; link&gt; link&gt; [link&gt; link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6m8e0/an_interesting_case_of_infinite_recursion_with/</guid>
      <pubDate>Tue, 02 Sep 2025 15:14:41 GMT</pubDate>
    </item>
    <item>
      <title>使用线性类型和自动并发的错误处理？ PAR的新语法糖</title>
      <link>https://www.reddit.com/r/programming/comments/1n6m0iz/error_handling_with_linear_types_and_automatic/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果资源不可自动丢弃，并且表达式与消费者同时评估，那么错误处理的故事是什么？明确的清理和无呼叫堆栈是否允许方便错误处理语法？   par是我的编程语言具有线性类型，自动并发和基于类型的logic logic logic logic logic    在所有上手动 case  -ing  s会导致对编程的热情。 因此，在我眼前所有这些新的用户酶的情况下，我提出了一个方便的错误处理语法，适合PAR的独特约束：线性类型和自动并发。它在某些方面类似于Rust的方式，但也完全不同。 检查一下：您会很高兴使用此语法吗？ 一个小示例：   def main：！ = Chan Exit {Let console = console.open catch e =＆gt; {console.print（e）控制台。 }让路径= os.pathfromstring（; logs.txt;; }    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/faiface      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6m0iz/error_handling_with_linear_types_and_automatic/</guid>
      <pubDate>Tue, 02 Sep 2025 15:06:32 GMT</pubDate>
    </item>
    <item>
      <title>无法理解锁吗？让我在5分钟内教您（Java + DB）</title>
      <link>https://www.reddit.com/r/programming/comments/1n6kac3/cant_understand_locks_let_me_teach_you_in_5/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  🔑在这篇文章中，我们揭示了后端开发中最令人困惑但最关键的主题之一 - 数据库锁定。 您是否曾经想过为什么有时候您的查询只是挂起……或更糟糕的是，或更糟糕的是，您突然遇到了一个陷入僵局的错误？ 😅我们将逐步将其分解：  sql row级别锁（用于共享vs vs for Update） - 它们在教科书定义上的真正含义。 现实世界中的场景 - 两个线程在同一行上战斗，在同一行上进行战斗，阻止障碍以及僵局的障碍以及why deadlock的发生方式。 JPA/Hibernate示例。 何时选择什么 - 绩效折衷，冲突场景和确保数据完整性而不会杀死并发。 最后，您不仅会了解锁定是如何工作的，而且还知道如何在您自己的应用程序中安全地实施它们。提交由＆＃32; /u/u/dhairya-chauhan     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6kac3/cant_understand_locks_let_me_teach_you_in_5/</guid>
      <pubDate>Tue, 02 Sep 2025 14:00:36 GMT</pubDate>
    </item>
    <item>
      <title>韩国公开API（带英文翻译）</title>
      <link>https://www.reddit.com/r/programming/comments/1n6k8nm/korean_open_apis_with_english_translations/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我创建了一个公共API集合存储库，因为我厌倦了在从事项目的过程中在各处寻找开放式API。 它包含 最新（2025）英语翻译 korean open apis。可靠的。 随时环顾四周，欢迎任何反馈。 谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ybmion      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6k8nm/korean_open_apis_with_english_translations/</guid>
      <pubDate>Tue, 02 Sep 2025 13:58:46 GMT</pubDate>
    </item>
    <item>
      <title>要求获得与内核相关的知识的建议</title>
      <link>https://www.reddit.com/r/programming/comments/1n6ik6l/requesting_advice_for_gaining_kernelrelated/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  亲爱的社区， 我不确定这是否是我问题的正确社区。我决定选择一个相当通用的社区。 我想扩展我在内核编程，低级编程，反智能开发和组装方面的知识。我希望从Windows内核开始，但是我通常也可以为Unix内核开放。 我非常感谢任何有用的资源链接！预先感谢您。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tiberiusbrookwell      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6ik6l/requesting_advice_for_gaining_kernelrelated/</guid>
      <pubDate>Tue, 02 Sep 2025 12:48:54 GMT</pubDate>
    </item>
    <item>
      <title>依赖性地狱：依赖关系在软件开发中的隐藏成本</title>
      <link>https://www.reddit.com/r/programming/comments/1n6ic9m/dependency_hell_the_hidden_costs_of_dependency/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/oupanut     [link]    32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6ic9m/dependency_hell_the_hidden_costs_of_dependency/</guid>
      <pubDate>Tue, 02 Sep 2025 12:38:58 GMT</pubDate>
    </item>
    <item>
      <title>“我要么是在AI之后清理CTO，要么不会有CTO，因为我们每次都会从头开始生成整个应用程序”</title>
      <link>https://www.reddit.com/r/programming/comments/1n6hnkb/im_either_going_to_be_a_cto_cleaning_up_after_ai/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/aviator_co      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6hnkb/im_either_going_to_be_a_cto_cleaning_up_after_ai/</guid>
      <pubDate>Tue, 02 Sep 2025 12:05:41 GMT</pubDate>
    </item>
    <item>
      <title>tiktok档案删除的tiktoks</title>
      <link>https://www.reddit.com/r/programming/comments/1n6hkne/tiktok_archive_for_deleted_tiktoks/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我构建了一个名为 premaloop.io 的网站，这可以永远保存您喜欢的Tiktoks。想想Google Drive/Dropbox，但专门用于Tiktok视频。如果Tiktok的原始视频被创建者删除，则该视频仍在Permaloop上。用户可以从我们的数据库中搜索数百个存档视频，并浏览最新或随机的视频。这个项目花了我整整一个星期，刚刚击中了100个注册用户！我们的API有助于永远节省内容，例如视频缩略图，视频元数据和视频MP4。如果您感兴趣。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kianql       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6hkne/tiktok_archive_for_deleted_tiktoks/</guid>
      <pubDate>Tue, 02 Sep 2025 12:01:43 GMT</pubDate>
    </item>
    <item>
      <title>您好，我是一个开发人员，您现在可以雇用我进行编程。</title>
      <link>https://www.reddit.com/r/programming/comments/1n6hdc5/hello_im_a_developer_you_can_now_hire_me_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rinkloudzrblx     &lt;a href =“ https://www.reddit.com/r/programming/comments/1n6hdc5/hello_im_im_a_developer_you_can_now_now_hire_hire_me_me_to/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6hdc5/hello_im_a_developer_you_can_now_hire_me_to/</guid>
      <pubDate>Tue, 02 Sep 2025 11:51:28 GMT</pubDate>
    </item>
    <item>
      <title>[反馈通缉]舰队 - 一种轻巧的生锈工具，用于监视和更新GIT存储库</title>
      <link>https://www.reddit.com/r/programming/comments/1n6h8mu/feedback_wanted_fleet_a_lightweight_rust_tool_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嗨， 我一直在建造 fleet ，用生锈写的轻量级工具，自动监视git存储库并运行更新/部署的命令，每当出现新提交时出现新事物。作为一个很小的背景守护程序，并使您的项目保持最新状态，而没有詹金斯，吉特布（Github）的行动或gitlab ci。 我很喜欢开发人员和用户的反馈：  这种工具适合您的工作流程？   github repo： ＆＃32;提交由＆＃32; /u/u/u/pepedinho94       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6h8mu/feedback_wanted_fleet_a_lightweight_rust_tool_for/</guid>
      <pubDate>Tue, 02 Sep 2025 11:44:45 GMT</pubDate>
    </item>
    <item>
      <title>将您的集成测试与TestContainers停电</title>
      <link>https://www.reddit.com/r/programming/comments/1n6h7gj/dockerize_your_integration_tests_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zarinfam     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6h7gj/dockerize_your_integration_tests_with/</guid>
      <pubDate>Tue, 02 Sep 2025 11:43:01 GMT</pubDate>
    </item>
    <item>
      <title>您什么时候停止成为程序员并开始开展业务？</title>
      <link>https://www.reddit.com/r/programming/comments/1n6gotq/when_do_you_stop_being_a_programmer_and_start/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这已经与我坐了一段时间了。&lt; /p&gt; 我大部分时间都花在去年的大部分时间里编写代码。优化后端。重构组件。抛光UX。做所有有效的事情，因为它们是。 ，但最近，我开始想知道这是否只是一种舒适的分心。 我正在构建一个名为Funnelyt的小型SaaS工具。它跟踪您的哪些YouTube视频实际上导致了转换：点击，注册，预订的电话。&lt; /p&gt; 我为代码感到自豪。很干净。模块化的。可扩展。 UI很活泼。灯塔得分全部为100。感觉就像是“真实软件”。&lt; /p&gt; ，但这是问题：业务没有增长。&lt; /p&gt; 我们有一些用户。一些早期的牵引力。，但我们没有突破。而且，我与空间中的其他人交谈的次数越多，我就越意识到： 我们很多人正在为可能无法生存的企业编写好代码。 ，这很奇怪。 Because we do all this work to future-proof the architecture, abstract logic, build for scale. But we’re not shipping landing pages. We’re not reaching out to users. We’re not telling anyone why our product exists. So I’ll ask what I’m asking myself lately: When do you stop optimizing the product and start building the business? And how do you know the difference在生产式编码和回避之间？ 我仍在弄清楚。，但我认为这里的其他开发人员可能正在与同一件事搏斗。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/corealistic-pitch-169      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6gotq/when_do_you_stop_being_a_programmer_and_start/</guid>
      <pubDate>Tue, 02 Sep 2025 11:15:24 GMT</pubDate>
    </item>
    <item>
      <title>为什么没有经验而难以找到入门级开发人员工作？</title>
      <link>https://www.reddit.com/r/programming/comments/1n6fmvc/why_is_it_so_hard_to_land_an_entrylevel_developer/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，这是我第一次在这里发布，也是我第一次在开发人员工作市场上分享我的想法。在过去的几年中，公司开始期望初学者越来越多地期望，入门级工作的含义发生了很大变化。本文解释了为什么会发生这种情况。 对于一些经验丰富的开发人员而言，本文可能涵盖了您已经知道的内容（至少部分）。但是我的主要目标是强调初学者和初级程序员的这些“隐藏”市场趋势。 让我知道我是否错过了任何东西。 thx   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/Glass_Albatross1   [link] ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6fmvc/why_is_it_so_hard_to_land_an_entrylevel_developer/</guid>
      <pubDate>Tue, 02 Sep 2025 10:15:11 GMT</pubDate>
    </item>
    <item>
      <title>足球教练的教训适用于软件开发</title>
      <link>https://www.reddit.com/r/programming/comments/1n6fgjp/lessons_from_football_coaching_applied_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Mox-pal-1892   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6fgjp/lessons_from_football_coaching_applied_to/</guid>
      <pubDate>Tue, 02 Sep 2025 10:04:23 GMT</pubDate>
    </item>
    <item>
      <title>2025年雇用质量检查工程师的隐性成本（以及为什么AI服务改变数学）</title>
      <link>https://www.reddit.com/r/programming/comments/1n6f1y3/the_hidden_cost_of_hiring_a_qa_engineer_in_2025/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/cheerfulboy   [link]   [注释]    ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n6f1y3/the_hidden_cost_of_hiring_a_qa_engineer_in_2025/</guid>
      <pubDate>Tue, 02 Sep 2025 09:38:56 GMT</pubDate>
    </item>
    </channel>
</rss>